// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cstrike15_gcmessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from cstrike15_gcmessages.proto</summary>
public static partial class Cstrike15GcmessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for cstrike15_gcmessages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static Cstrike15GcmessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Chpjc3RyaWtlMTVfZ2NtZXNzYWdlcy5wcm90bxoTc3RlYW1tZXNzYWdlcy5w",
          "cm90bxoXZW5naW5lX2djbWVzc2FnZXMucHJvdG8aFmdjc2RrX2djbWVzc2Fn",
          "ZXMucHJvdG8iPQoOR2FtZVNlcnZlclBpbmcSDAoEcGluZxgCIAEoBRIKCgJp",
          "cBgDIAEoDRIRCglpbnN0YW5jZXMYBSABKA0iNgoORGF0YUNlbnRlclBpbmcS",
          "FgoOZGF0YV9jZW50ZXJfaWQYASABKAcSDAoEcGluZxgCIAEoESJgChdEZXRh",
          "aWxlZFNlYXJjaFN0YXRpc3RpYxIRCglnYW1lX3R5cGUYASABKA0SFwoPc2Vh",
          "cmNoX3RpbWVfYXZnGAIgASgNEhkKEXBsYXllcnNfc2VhcmNoaW5nGAQgASgN",
          "IqcBChBUb3VybmFtZW50UGxheWVyEhIKCmFjY291bnRfaWQYASABKA0SEwoL",
          "cGxheWVyX25pY2sYAiABKAkSEwoLcGxheWVyX25hbWUYAyABKAkSEgoKcGxh",
          "eWVyX2RvYhgEIAEoDRITCgtwbGF5ZXJfZmxhZxgFIAEoCRIXCg9wbGF5ZXJf",
          "bG9jYXRpb24YBiABKAkSEwoLcGxheWVyX2Rlc2MYByABKAkifQoOVG91cm5h",
          "bWVudFRlYW0SDwoHdGVhbV9pZBgBIAEoBRIQCgh0ZWFtX3RhZxgCIAEoCRIR",
          "Cgl0ZWFtX2ZsYWcYAyABKAkSEQoJdGVhbV9uYW1lGAQgASgJEiIKB3BsYXll",
          "cnMYBSADKAsyES5Ub3VybmFtZW50UGxheWVyIt8BCg9Ub3VybmFtZW50RXZl",
          "bnQSEAoIZXZlbnRfaWQYASABKAUSEQoJZXZlbnRfdGFnGAIgASgJEhIKCmV2",
          "ZW50X25hbWUYAyABKAkSGAoQZXZlbnRfdGltZV9zdGFydBgEIAEoDRIWCg5l",
          "dmVudF90aW1lX2VuZBgFIAEoDRIUCgxldmVudF9wdWJsaWMYBiABKAUSFgoO",
          "ZXZlbnRfc3RhZ2VfaWQYByABKAUSGAoQZXZlbnRfc3RhZ2VfbmFtZRgIIAEo",
          "CRIZChFhY3RpdmVfc2VjdGlvbl9pZBgJIAEoDSLFAwoQR2xvYmFsU3RhdGlz",
          "dGljcxIWCg5wbGF5ZXJzX29ubGluZRgBIAEoDRIWCg5zZXJ2ZXJzX29ubGlu",
          "ZRgCIAEoDRIZChFwbGF5ZXJzX3NlYXJjaGluZxgDIAEoDRIZChFzZXJ2ZXJz",
          "X2F2YWlsYWJsZRgEIAEoDRIXCg9vbmdvaW5nX21hdGNoZXMYBSABKA0SFwoP",
          "c2VhcmNoX3RpbWVfYXZnGAYgASgNEjMKEXNlYXJjaF9zdGF0aXN0aWNzGAcg",
          "AygLMhguRGV0YWlsZWRTZWFyY2hTdGF0aXN0aWMSFQoNbWFpbl9wb3N0X3Vy",
          "bBgIIAEoCRIeChZyZXF1aXJlZF9hcHBpZF92ZXJzaW9uGAkgASgNEhoKEnBy",
          "aWNlc2hlZXRfdmVyc2lvbhgKIAEoDRIeChZ0d2l0Y2hfc3RyZWFtc192ZXJz",
          "aW9uGAsgASgNEiEKGWFjdGl2ZV90b3VybmFtZW50X2V2ZW50aWQYDCABKA0S",
          "GAoQYWN0aXZlX3N1cnZleV9pZBgNIAEoDRITCgtydGltZTMyX2N1chgOIAEo",
          "DRIfChdyZXF1aXJlZF9hcHBpZF92ZXJzaW9uMhgQIAEoDSI+Ch9PcGVyYXRp",
          "b25hbFN0YXRpc3RpY0Rlc2NyaXB0aW9uEgwKBG5hbWUYASABKAkSDQoFaWRr",
          "ZXkYAiABKA0iPAobT3BlcmF0aW9uYWxTdGF0aXN0aWNFbGVtZW50Eg0KBWlk",
          "a2V5GAEgASgNEg4KBnZhbHVlcxgCIAMoBSJyChtPcGVyYXRpb25hbFN0YXRp",
          "c3RpY3NQYWNrZXQSEAoIcGFja2V0aWQYASABKAUSEwoLbXN0aW1lc3RhbXAY",
          "AiABKAUSLAoGdmFsdWVzGAMgAygLMhwuT3BlcmF0aW9uYWxTdGF0aXN0aWNF",
          "bGVtZW50IlMKE09wZXJhdGlvbmFsVmFyVmFsdWUSDAoEbmFtZRgBIAEoCRIO",
          "CgZpdmFsdWUYAiABKAUSDgoGZnZhbHVlGAMgASgCEg4KBnN2YWx1ZRgEIAEo",
          "DCK4AwoRUGxheWVyUmFua2luZ0luZm8SEgoKYWNjb3VudF9pZBgBIAEoDRIP",
          "CgdyYW5rX2lkGAIgASgNEgwKBHdpbnMYAyABKA0SEwoLcmFua19jaGFuZ2UY",
          "BCABKAISFAoMcmFua190eXBlX2lkGAYgASgNEhIKCnR2X2NvbnRyb2wYByAB",
          "KA0SGQoRcmFua193aW5kb3dfc3RhdHMYCCABKAQSGAoQbGVhZGVyYm9hcmRf",
          "bmFtZRgJIAEoCRITCgtyYW5rX2lmX3dpbhgKIAEoDRIUCgxyYW5rX2lmX2xv",
          "c2UYCyABKA0SEwoLcmFua19pZl90aWUYDCABKA0SMwoMcGVyX21hcF9yYW5r",
          "GA0gAygLMh0uUGxheWVyUmFua2luZ0luZm8uUGVyTWFwUmFuaxIfChdsZWFk",
          "ZXJib2FyZF9uYW1lX3N0YXR1cxgOIAEoDRIUCgxoaWdoZXN0X3JhbmsYDyAB",
          "KA0SEwoLcmFua19leHBpcnkYECABKA0aOwoKUGVyTWFwUmFuaxIOCgZtYXBf",
          "aWQYASABKA0SDwoHcmFua19pZBgCIAEoDRIMCgR3aW5zGAMgASgNIlgKFlBs",
          "YXllckNvbW1lbmRhdGlvbkluZm8SFAoMY21kX2ZyaWVuZGx5GAEgASgNEhQK",
          "DGNtZF90ZWFjaGluZxgCIAEoDRISCgpjbWRfbGVhZGVyGAQgASgNIlYKEFBs",
          "YXllck1lZGFsc0luZm8SHAoUZGlzcGxheV9pdGVtc19kZWZpZHgYByADKA0S",
          "JAocZmVhdHVyZWRfZGlzcGxheV9pdGVtX2RlZmlkeBgIIAEoDSJPCg9BY2Nv",
          "dW50QWN0aXZpdHkSEAoIYWN0aXZpdHkYASABKA0SDAoEbW9kZRgCIAEoDRIL",
          "CgNtYXAYAyABKA0SDwoHbWF0Y2hpZBgEIAEoBCJnChRUb3VybmFtZW50TWF0",
          "Y2hTZXR1cBIQCghldmVudF9pZBgBIAEoBRISCgp0ZWFtX2lkX2N0GAIgASgF",
          "EhEKCXRlYW1faWRfdBgDIAEoBRIWCg5ldmVudF9zdGFnZV9pZBgEIAEoBSLP",
          "AwoOU2VydmVySGx0dkluZm8SEwoLdHZfdWRwX3BvcnQYASABKA0SFAoMdHZf",
          "d2F0Y2hfa2V5GAIgASgEEhAKCHR2X3Nsb3RzGAMgASgNEhIKCnR2X2NsaWVu",
          "dHMYBCABKA0SEgoKdHZfcHJveGllcxgFIAEoDRIPCgd0dl90aW1lGAYgASgN",
          "EhEKCWdhbWVfdHlwZRgIIAEoDRIVCg1nYW1lX21hcGdyb3VwGAkgASgJEhAK",
          "CGdhbWVfbWFwGAogASgJEhkKEXR2X21hc3Rlcl9zdGVhbWlkGAsgASgEEhYK",
          "DnR2X2xvY2FsX3Nsb3RzGAwgASgNEhgKEHR2X2xvY2FsX2NsaWVudHMYDSAB",
          "KA0SGAoQdHZfbG9jYWxfcHJveGllcxgOIAEoDRIWCg50dl9yZWxheV9zbG90",
          "cxgPIAEoDRIYChB0dl9yZWxheV9jbGllbnRzGBAgASgNEhgKEHR2X3JlbGF5",
          "X3Byb3hpZXMYESABKA0SGAoQdHZfcmVsYXlfYWRkcmVzcxgSIAEoDRIVCg10",
          "dl9yZWxheV9wb3J0GBMgASgNEhgKEHR2X3JlbGF5X3N0ZWFtaWQYFCABKAQS",
          "DQoFZmxhZ3MYFSABKA0iWAoNSXBBZGRyZXNzTWFzaxIJCgFhGAEgASgNEgkK",
          "AWIYAiABKA0SCQoBYxgDIAEoDRIJCgFkGAQgASgNEgwKBGJpdHMYBSABKA0S",
          "DQoFdG9rZW4YBiABKA0iWgobQ01zZ0NzZ29TdGVhbVVzZXJTdGF0Q2hhbmdl",
          "EhoKEmVjc2dvc3RlYW11c2Vyc3RhdBgBIAEoBRINCgVkZWx0YRgCIAEoBRIQ",
          "CghhYnNvbHV0ZRgDIAEoCCI4Cg5YcFByb2dyZXNzRGF0YRIRCgl4cF9wb2lu",
          "dHMYASABKA0SEwoLeHBfY2F0ZWdvcnkYAiABKAUiXwoTTWF0Y2hFbmRJdGVt",
          "VXBkYXRlcxIPCgdpdGVtX2lkGAEgASgEEhgKEGl0ZW1fYXR0cl9kZWZpZHgY",
          "AiABKA0SHQoVaXRlbV9hdHRyX2RlbHRhX3ZhbHVlGAMgASgNIrgCChRTY29y",
          "ZUxlYWRlcmJvYXJkRGF0YRIQCghxdWVzdF9pZBgBIAEoBBINCgVzY29yZRgC",
          "IAEoDRI8Cg5hY2NvdW50ZW50cmllcxgDIAMoCzIkLlNjb3JlTGVhZGVyYm9h",
          "cmREYXRhLkFjY291bnRFbnRyaWVzEjEKDG1hdGNoZW50cmllcxgFIAMoCzIb",
          "LlNjb3JlTGVhZGVyYm9hcmREYXRhLkVudHJ5EhgKEGxlYWRlcmJvYXJkX25h",
          "bWUYBiABKAkaIQoFRW50cnkSCwoDdGFnGAEgASgNEgsKA3ZhbBgCIAEoDRpR",
          "Cg5BY2NvdW50RW50cmllcxIRCglhY2NvdW50aWQYASABKA0SLAoHZW50cmll",
          "cxgCIAMoCzIbLlNjb3JlTGVhZGVyYm9hcmREYXRhLkVudHJ5IroECg9QbGF5",
          "ZXJRdWVzdERhdGESGgoScXVlc3Rlcl9hY2NvdW50X2lkGAEgASgNEjcKD3F1",
          "ZXN0X2l0ZW1fZGF0YRgCIAMoCzIeLlBsYXllclF1ZXN0RGF0YS5RdWVzdEl0",
          "ZW1EYXRhEikKEHhwX3Byb2dyZXNzX2RhdGEYAyADKAsyDy5YcFByb2dyZXNz",
          "RGF0YRITCgt0aW1lX3BsYXllZBgEIAEoDRIUCgxtbV9nYW1lX21vZGUYBSAB",
          "KA0SKgoMaXRlbV91cGRhdGVzGAYgAygLMhQuTWF0Y2hFbmRJdGVtVXBkYXRl",
          "cxIhChlvcGVyYXRpb25fcG9pbnRzX2VsaWdpYmxlGAcgASgIEjUKD3VzZXJz",
          "dGF0Y2hhbmdlcxgIIAMoCzIcLkNNc2dDc2dvU3RlYW1Vc2VyU3RhdENoYW5n",
          "ZRr1AQoNUXVlc3RJdGVtRGF0YRIQCghxdWVzdF9pZBgBIAEoBBIiChpxdWVz",
          "dF9ub3JtYWxfcG9pbnRzX2Vhcm5lZBgCIAEoBRIhChlxdWVzdF9ib251c19w",
          "b2ludHNfZWFybmVkGAMgASgFEiQKHHF1ZXN0X25vcm1hbF9wb2ludHNfcmVx",
          "dWlyZWQYBCADKAUSFwoPcXVlc3RfcmV3YXJkX3hwGAUgAygFEhQKDHF1ZXN0",
          "X3BlcmlvZBgGIAEoBRI2CgpxdWVzdF90eXBlGAcgASgOMgouUXVlc3RUeXBl",
          "OhZrX0VRdWVzdFR5cGVfT3BlcmF0aW9uIpYFChREZWVwUGxheWVyU3RhdHNF",
          "bnRyeRIRCglhY2NvdW50aWQYASABKA0SEAoIbWF0Y2hfaWQYAiABKAQSFAoM",
          "bW1fZ2FtZV9tb2RlGAMgASgNEg0KBW1hcGlkGAQgASgNEhUKDWJfc3RhcnRp",
          "bmdfY3QYBSABKAgSFQoNbWF0Y2hfb3V0Y29tZRgGIAEoDRISCgpyb3VuZHNf",
          "d29uGAcgASgNEhMKC3JvdW5kc19sb3N0GAggASgNEhIKCnN0YXRfc2NvcmUY",
          "CSABKA0SEwoLc3RhdF9kZWF0aHMYDCABKA0SEQoJc3RhdF9tdnBzGA0gASgN",
          "EhMKC2VuZW15X2tpbGxzGA4gASgNEhcKD2VuZW15X2hlYWRzaG90cxgPIAEo",
          "DRIRCgllbmVteV8ya3MYECABKA0SEQoJZW5lbXlfM2tzGBEgASgNEhEKCWVu",
          "ZW15XzRrcxgSIAEoDRIUCgx0b3RhbF9kYW1hZ2UYEyABKA0SHwoXZW5nYWdl",
          "bWVudHNfZW50cnlfY291bnQYFyABKA0SHgoWZW5nYWdlbWVudHNfZW50cnlf",
          "d2lucxgYIAEoDRIdChVlbmdhZ2VtZW50c18xdjFfY291bnQYGSABKA0SHAoU",
          "ZW5nYWdlbWVudHNfMXYxX3dpbnMYGiABKA0SHQoVZW5nYWdlbWVudHNfMXYy",
          "X2NvdW50GBsgASgNEhwKFGVuZ2FnZW1lbnRzXzF2Ml93aW5zGBwgASgNEhUK",
          "DXV0aWxpdHlfY291bnQYHSABKA0SFwoPdXRpbGl0eV9zdWNjZXNzGB4gASgN",
          "EhMKC2ZsYXNoX2NvdW50GCAgASgNEhUKDWZsYXNoX3N1Y2Nlc3MYISABKA0S",
          "DQoFbWF0ZXMYIiADKA0isQIKFERlZXBQbGF5ZXJNYXRjaEV2ZW50EhEKCWFj",
          "Y291bnRpZBgBIAEoDRIQCghtYXRjaF9pZBgCIAEoBBIQCghldmVudF9pZBgD",
          "IAEoDRISCgpldmVudF90eXBlGAQgASgNEhQKDGJfcGxheWluZ19jdBgFIAEo",
          "CBISCgp1c2VyX3Bvc194GAYgASgFEhIKCnVzZXJfcG9zX3kYByABKAUSEgoK",
          "dXNlcl9wb3NfehgMIAEoBRITCgt1c2VyX2RlZmlkeBgIIAEoDRITCgtvdGhl",
          "cl9wb3NfeBgJIAEoBRITCgtvdGhlcl9wb3NfeRgKIAEoBRITCgtvdGhlcl9w",
          "b3NfehgNIAEoBRIUCgxvdGhlcl9kZWZpZHgYCyABKA0SEgoKZXZlbnRfZGF0",
          "YRgOIAEoBSK0AQocQ01zZ0dDX1NlcnZlclF1ZXN0VXBkYXRlRGF0YRIrChFw",
          "bGF5ZXJfcXVlc3RfZGF0YRgBIAMoCzIQLlBsYXllclF1ZXN0RGF0YRITCgti",
          "aW5hcnlfZGF0YRgCIAEoDBIUCgxtbV9nYW1lX21vZGUYAyABKA0SLQoObWlz",
          "c2lvbmxic2RhdGEYBCABKAsyFS5TY29yZUxlYWRlcmJvYXJkRGF0YRINCgVm",
          "bGFncxgFIAEoDSJvCi5DTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2htYWtpbmdH",
          "QzJTZXJ2ZXJDb25maXJtEg0KBXRva2VuGAEgASgNEg0KBXN0YW1wGAIgASgN",
          "EhAKCGV4Y2hhbmdlGAMgASgEEg0KBXJldHJ5GAQgASgNIm8KLUNNc2dHQ0NT",
          "dHJpa2UxNV92Ml9HQzJTZXJ2ZXJSZXNlcnZhdGlvblVwZGF0ZRIeChZ2aWV3",
          "ZXJzX2V4dGVybmFsX3RvdGFsGAEgASgNEh4KFnZpZXdlcnNfZXh0ZXJuYWxf",
          "c3RlYW0YAiABKA0i5QEKI0NNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1ha2lu",
          "Z1N0YXJ0EhMKC2FjY291bnRfaWRzGAEgAygNEhEKCWdhbWVfdHlwZRgCIAEo",
          "DRITCgt0aWNrZXRfZGF0YRgDIAEoCRIWCg5jbGllbnRfdmVyc2lvbhgEIAEo",
          "DRIvChB0b3VybmFtZW50X21hdGNoGAUgASgLMhUuVG91cm5hbWVudE1hdGNo",
          "U2V0dXASEgoKcHJpbWVfb25seRgGIAEoCBISCgp0dl9jb250cm9sGAcgASgN",
          "EhAKCGxvYmJ5X2lkGAggASgEIjUKIkNNc2dHQ0NTdHJpa2UxNV92Ml9NYXRj",
          "aG1ha2luZ1N0b3ASDwoHYWJhbmRvbhgBIAEoBSJ5CjJDTXNnR0NDU3RyaWtl",
          "MTVfdjJfTWF0Y2htYWtpbmdHQzJDbGllbnRVcGRhdGVfTm90ZRIMCgR0eXBl",
          "GAEgASgFEhEKCXJlZ2lvbl9pZBgCIAEoBRIQCghyZWdpb25fchgDIAEoAhIQ",
          "CghkaXN0YW5jZRgEIAEoAiLHAgovQ01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNo",
          "bWFraW5nQ2xpZW50MlNlcnZlclBpbmcSKAoPZ2FtZXNlcnZlcnBpbmdzGAEg",
          "AygLMg8uR2FtZVNlcnZlclBpbmcSFAoMb2Zmc2V0X2luZGV4GAIgASgFEhMK",
          "C2ZpbmFsX2JhdGNoGAMgASgFEioKEWRhdGFfY2VudGVyX3BpbmdzGAQgAygL",
          "Mg8uRGF0YUNlbnRlclBpbmcSEAoIbWF4X3BpbmcYBSABKA0SEgoKdGVzdF90",
          "b2tlbhgGIAEoBxISCgpzZWFyY2hfa2V5GAcgASgMEkIKBW5vdGVzGAggAygL",
          "MjMuQ01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nR0MyQ2xpZW50VXBk",
          "YXRlX05vdGUSFQoNZGVidWdfbWVzc2FnZRgJIAEoCSKWBQotQ01zZ0dDQ1N0",
          "cmlrZTE1X3YyX01hdGNobWFraW5nR0MyQ2xpZW50VXBkYXRlEhMKC21hdGNo",
          "bWFraW5nGAEgASgFEiMKG3dhaXRpbmdfYWNjb3VudF9pZF9zZXNzaW9ucxgC",
          "IAMoDRINCgVlcnJvchgDIAEoCRIoCiBvbmdvaW5nbWF0Y2hfYWNjb3VudF9p",
          "ZF9zZXNzaW9ucxgGIAMoDRInCgxnbG9iYWxfc3RhdHMYByABKAsyES5HbG9i",
          "YWxTdGF0aXN0aWNzEiQKHGZhaWxwaW5nX2FjY291bnRfaWRfc2Vzc2lvbnMY",
          "CCADKA0SIwobcGVuYWx0eV9hY2NvdW50X2lkX3Nlc3Npb25zGAkgAygNEiUK",
          "HWZhaWxyZWFkeV9hY2NvdW50X2lkX3Nlc3Npb25zGAogAygNEiUKHXZhY2Jh",
          "bm5lZF9hY2NvdW50X2lkX3Nlc3Npb25zGAsgAygNEi0KFXNlcnZlcl9pcGFk",
          "ZHJlc3NfbWFzaxgMIAEoCzIOLklwQWRkcmVzc01hc2sSQgoFbm90ZXMYDSAD",
          "KAsyMy5DTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2htYWtpbmdHQzJDbGllbnRV",
          "cGRhdGVfTm90ZRIpCiFwZW5hbHR5X2FjY291bnRfaWRfc2Vzc2lvbnNfZ3Jl",
          "ZW4YDiADKA0SIgoaaW5zdWZmaWNpZW50bGV2ZWxfc2Vzc2lvbnMYDyADKA0S",
          "JAocdnNuY2hlY2tfYWNjb3VudF9pZF9zZXNzaW9ucxgQIAMoDRIiChpsYXVu",
          "Y2hlcl9taXNtYXRjaF9zZXNzaW9ucxgRIAMoDRIkChxpbnNlY3VyZV9hY2Nv",
          "dW50X2lkX3Nlc3Npb25zGBIgAygNIr8ECihDRGF0YUdDQ1N0cmlrZTE1X3Yy",
          "X1RvdXJuYW1lbnRNYXRjaERyYWZ0EhAKCGV2ZW50X2lkGAEgASgFEhYKDmV2",
          "ZW50X3N0YWdlX2lkGAIgASgFEhEKCXRlYW1faWRfMBgDIAEoBRIRCgl0ZWFt",
          "X2lkXzEYBCABKAUSEgoKbWFwc19jb3VudBgFIAEoBRIUCgxtYXBzX2N1cnJl",
          "bnQYBiABKAUSFQoNdGVhbV9pZF9zdGFydBgHIAEoBRIVCg10ZWFtX2lkX3Zl",
          "dG8xGAggASgFEhUKDXRlYW1faWRfcGlja24YCSABKAUSPwoGZHJhZnRzGAog",
          "AygLMi8uQ0RhdGFHQ0NTdHJpa2UxNV92Ml9Ub3VybmFtZW50TWF0Y2hEcmFm",
          "dC5FbnRyeRIUCgx2b3RlX21hcGlkXzAYCyADKAUSFAoMdm90ZV9tYXBpZF8x",
          "GAwgAygFEhQKDHZvdGVfbWFwaWRfMhgNIAMoBRIUCgx2b3RlX21hcGlkXzMY",
          "DiADKAUSFAoMdm90ZV9tYXBpZF80GA8gAygFEhQKDHZvdGVfbWFwaWRfNRgQ",
          "IAMoBRIaChJ2b3RlX3N0YXJ0aW5nX3NpZGUYESADKAUSEgoKdm90ZV9waGFz",
          "ZRgSIAEoBRIYChB2b3RlX3BoYXNlX3N0YXJ0GBMgASgCEhkKEXZvdGVfcGhh",
          "c2VfbGVuZ3RoGBQgASgCGioKBUVudHJ5Eg0KBW1hcGlkGAEgASgFEhIKCnRl",
          "YW1faWRfY3QYAiABKAUi+wEKEUNQcmVNYXRjaEluZm9EYXRhEhcKD3ByZWRp",
          "Y3Rpb25zX3BjdBgBIAEoBRI4CgVkcmFmdBgEIAEoCzIpLkNEYXRhR0NDU3Ry",
          "aWtlMTVfdjJfVG91cm5hbWVudE1hdGNoRHJhZnQSKwoFc3RhdHMYBSADKAsy",
          "HC5DUHJlTWF0Y2hJbmZvRGF0YS5UZWFtU3RhdHMSDAoEd2lucxgGIAMoBRpY",
          "CglUZWFtU3RhdHMSGQoRbWF0Y2hfaW5mb19pZHh0eHQYASABKAUSFgoObWF0",
          "Y2hfaW5mb190eHQYAiABKAkSGAoQbWF0Y2hfaW5mb190ZWFtcxgDIAMoCSKR",
          "BQouQ01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nR0MyU2VydmVyUmVz",
          "ZXJ2ZRITCgthY2NvdW50X2lkcxgBIAMoDRIRCglnYW1lX3R5cGUYAiABKA0S",
          "EAoIbWF0Y2hfaWQYAyABKAQSFgoOc2VydmVyX3ZlcnNpb24YBCABKA0SDQoF",
          "ZmxhZ3MYEiABKA0SJAoIcmFua2luZ3MYBSADKAsyEi5QbGF5ZXJSYW5raW5n",
          "SW5mbxIWCg5lbmNyeXB0aW9uX2tleRgGIAEoBBIaChJlbmNyeXB0aW9uX2tl",
          "eV9wdWIYByABKAQSEQoJcGFydHlfaWRzGAggAygNEiEKCXdoaXRlbGlzdBgJ",
          "IAMoCzIOLklwQWRkcmVzc01hc2sSGQoRdHZfbWFzdGVyX3N0ZWFtaWQYCiAB",
          "KAQSKgoQdG91cm5hbWVudF9ldmVudBgLIAEoCzIQLlRvdXJuYW1lbnRFdmVu",
          "dBIpChB0b3VybmFtZW50X3RlYW1zGAwgAygLMg8uVG91cm5hbWVudFRlYW0S",
          "JgoedG91cm5hbWVudF9jYXN0ZXJzX2FjY291bnRfaWRzGA0gAygNEhgKEHR2",
          "X3JlbGF5X3N0ZWFtaWQYDiABKAQSKgoOcHJlX21hdGNoX2RhdGEYDyABKAsy",
          "Ei5DUHJlTWF0Y2hJbmZvRGF0YRISCgp0dl9jb250cm9sGBEgASgNEisKDW9w",
          "X3Zhcl92YWx1ZXMYEyADKAsyFC5PcGVyYXRpb25hbFZhclZhbHVlEhcKD3Nv",
          "Y2FjaGVfY29udHJvbBgUIAEoDRIXCg90ZWFtbWF0ZV9jb2xvcnMYFSADKAUS",
          "GwoTbWF0Y2hfaWRfYWRkaXRpb25hbBgWIAEoDSLgBAo3Q01zZ0dDQ1N0cmlr",
          "ZTE1X3YyX01hdGNobWFraW5nU2VydmVyUmVzZXJ2YXRpb25SZXNwb25zZRIV",
          "Cg1yZXNlcnZhdGlvbmlkGAEgASgEEkQKC3Jlc2VydmF0aW9uGAIgASgLMi8u",
          "Q01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nR0MyU2VydmVyUmVzZXJ2",
          "ZRILCgNtYXAYAyABKAkSGwoTZ2NfcmVzZXJ2YXRpb25fc2VudBgEIAEoBBIW",
          "Cg5zZXJ2ZXJfdmVyc2lvbhgFIAEoDRIgCgd0dl9pbmZvGAYgASgLMg8uU2Vy",
          "dmVySGx0dkluZm8SHgoWcmV3YXJkX3BsYXllcl9hY2NvdW50cxgHIAMoDRIc",
          "ChRpZGxlX3BsYXllcl9hY2NvdW50cxgIIAMoDRIgChhyZXdhcmRfaXRlbV9h",
          "dHRyX2RlZl9pZHgYCSABKA0SHgoWcmV3YXJkX2l0ZW1fYXR0cl92YWx1ZRgK",
          "IAEoDRIjChtyZXdhcmRfaXRlbV9hdHRyX3Jld2FyZF9pZHgYCyABKA0SGAoQ",
          "cmV3YXJkX2Ryb3BfbGlzdBgMIAEoDRIWCg50b3VybmFtZW50X3RhZxgNIAEo",
          "CRIhChlsZWdhY3lfc3RlYW1kYXRhZ3JhbV9wb3J0GA4gASgNEh0KFXN0ZWFt",
          "ZGF0YWdyYW1fcm91dGluZxgRIAEoDRISCgp0ZXN0X3Rva2VuGA8gASgHEg0K",
          "BWZsYWdzGBAgASgNEhMKC3N5c3RlbV9sb2FkGBIgASgNEhMKC2NwdXNfb25s",
          "aW5lGBMgASgNIq4CCi5DTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2htYWtpbmdH",
          "QzJDbGllbnRSZXNlcnZlEhAKCHNlcnZlcmlkGAEgASgEEhUKDWRpcmVjdF91",
          "ZHBfaXAYAiABKA0SFwoPZGlyZWN0X3VkcF9wb3J0GAMgASgNEhUKDXJlc2Vy",
          "dmF0aW9uaWQYBCABKAQSRAoLcmVzZXJ2YXRpb24YBSABKAsyLy5DTXNnR0ND",
          "U3RyaWtlMTVfdjJfTWF0Y2htYWtpbmdHQzJTZXJ2ZXJSZXNlcnZlEgsKA21h",
          "cBgGIAEoCRIWCg5zZXJ2ZXJfYWRkcmVzcxgHIAEoCRIgCgdnc19waW5nGAgg",
          "ASgLMg8uRGF0YUNlbnRlclBpbmcSFgoOZ3NfbG9jYXRpb25faWQYCSABKA0i",
          "ggcKLkNNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1ha2luZ1NlcnZlclJvdW5k",
          "U3RhdHMSFQoNcmVzZXJ2YXRpb25pZBgBIAEoBBJECgtyZXNlcnZhdGlvbhgC",
          "IAEoCzIvLkNNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1ha2luZ0dDMlNlcnZl",
          "clJlc2VydmUSCwoDbWFwGAMgASgJEg0KBXJvdW5kGAQgASgFEg0KBWtpbGxz",
          "GAUgAygFEg8KB2Fzc2lzdHMYBiADKAUSDgoGZGVhdGhzGAcgAygFEg4KBnNj",
          "b3JlcxgIIAMoBRINCgVwaW5ncxgJIAMoBRIUCgxyb3VuZF9yZXN1bHQYCiAB",
          "KAUSFAoMbWF0Y2hfcmVzdWx0GAsgASgFEhMKC3RlYW1fc2NvcmVzGAwgAygF",
          "EkAKB2NvbmZpcm0YDSABKAsyLy5DTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2ht",
          "YWtpbmdHQzJTZXJ2ZXJDb25maXJtEhkKEXJlc2VydmF0aW9uX3N0YWdlGA4g",
          "ASgFEhYKDm1hdGNoX2R1cmF0aW9uGA8gASgFEhMKC2VuZW15X2tpbGxzGBAg",
          "AygFEhcKD2VuZW15X2hlYWRzaG90cxgRIAMoBRIRCgllbmVteV8za3MYEiAD",
          "KAUSEQoJZW5lbXlfNGtzGBMgAygFEhEKCWVuZW15XzVrcxgUIAMoBRIMCgRt",
          "dnBzGBUgAygFEhgKEHNwZWN0YXRvcnNfY291bnQYFiABKA0SGwoTc3BlY3Rh",
          "dG9yc19jb3VudF90dhgXIAEoDRIcChRzcGVjdGF0b3JzX2NvdW50X2xuaxgY",
          "IAEoDRIXCg9lbmVteV9raWxsc19hZ2cYGSADKAUSSwoJZHJvcF9pbmZvGBog",
          "ASgLMjguQ01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nU2VydmVyUm91",
          "bmRTdGF0cy5Ecm9wSW5mbxIYChBiX3N3aXRjaGVkX3RlYW1zGBsgASgIEhEK",
          "CWVuZW15XzJrcxgcIAMoBRIWCg5wbGF5ZXJfc3Bhd25lZBgdIAMoBRIYChB0",
          "ZWFtX3NwYXduX2NvdW50GB4gAygFEhIKCm1heF9yb3VuZHMYHyABKA0SDgoG",
          "bWFwX2lkGCAgASgFGh8KCERyb3BJbmZvEhMKC2FjY291bnRfbXZwGAEgASgN",
          "Ii4KLENNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1ha2luZ0NsaWVudDJHQ0hl",
          "bGxvIuUFCixDTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2htYWtpbmdHQzJDbGll",
          "bnRIZWxsbxISCgphY2NvdW50X2lkGAEgASgNEkUKDG9uZ29pbmdtYXRjaBgC",
          "IAEoCzIvLkNNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1ha2luZ0dDMkNsaWVu",
          "dFJlc2VydmUSJwoMZ2xvYmFsX3N0YXRzGAMgASgLMhEuR2xvYmFsU3RhdGlz",
          "dGljcxIXCg9wZW5hbHR5X3NlY29uZHMYBCABKA0SFgoOcGVuYWx0eV9yZWFz",
          "b24YBSABKA0SEgoKdmFjX2Jhbm5lZBgGIAEoBRIjCgdyYW5raW5nGAcgASgL",
          "MhIuUGxheWVyUmFua2luZ0luZm8SLQoMY29tbWVuZGF0aW9uGAggASgLMhcu",
          "UGxheWVyQ29tbWVuZGF0aW9uSW5mbxIhCgZtZWRhbHMYCSABKAsyES5QbGF5",
          "ZXJNZWRhbHNJbmZvEioKEG15X2N1cnJlbnRfZXZlbnQYCiABKAsyEC5Ub3Vy",
          "bmFtZW50RXZlbnQSLwoWbXlfY3VycmVudF9ldmVudF90ZWFtcxgLIAMoCzIP",
          "LlRvdXJuYW1lbnRUZWFtEigKD215X2N1cnJlbnRfdGVhbRgMIAEoCzIPLlRv",
          "dXJuYW1lbnRUZWFtEjEKF215X2N1cnJlbnRfZXZlbnRfc3RhZ2VzGA0gAygL",
          "MhAuVG91cm5hbWVudEV2ZW50EhMKC3N1cnZleV92b3RlGA4gASgNEiIKCGFj",
          "dGl2aXR5GA8gASgLMhAuQWNjb3VudEFjdGl2aXR5EhQKDHBsYXllcl9sZXZl",
          "bBgRIAEoBRIVCg1wbGF5ZXJfY3VyX3hwGBIgASgFEh0KFXBsYXllcl94cF9i",
          "b251c19mbGFncxgTIAEoBRIkCghyYW5raW5ncxgUIAMoCzISLlBsYXllclJh",
          "bmtpbmdJbmZvEhAKCG93Y2FzZWlkGBUgASgEIqkBCilDTXNnR0NDU3RyaWtl",
          "MTVfdjJfQWNjb3VudFByaXZhY3lTZXR0aW5ncxJECghzZXR0aW5ncxgBIAMo",
          "CzIyLkNNc2dHQ0NTdHJpa2UxNV92Ml9BY2NvdW50UHJpdmFjeVNldHRpbmdz",
          "LlNldHRpbmcaNgoHU2V0dGluZxIUCgxzZXR0aW5nX3R5cGUYASABKA0SFQoN",
          "c2V0dGluZ192YWx1ZRgCIAEoDSK/AQouQ01zZ0dDQ1N0cmlrZTE1X3YyX01h",
          "dGNobWFraW5nR0MyQ2xpZW50QWJhbmRvbhISCgphY2NvdW50X2lkGAEgASgN",
          "EkgKD2FiYW5kb25lZF9tYXRjaBgCIAEoCzIvLkNNc2dHQ0NTdHJpa2UxNV92",
          "Ml9NYXRjaG1ha2luZ0dDMkNsaWVudFJlc2VydmUSFwoPcGVuYWx0eV9zZWNv",
          "bmRzGAMgASgNEhYKDnBlbmFsdHlfcmVhc29uGAQgASgNIk0KJUNNc2dHQ0NT",
          "dHJpa2UxNV92Ml9DbGllbnRHQ1JhbmtVcGRhdGUSJAoIcmFua2luZ3MYASAD",
          "KAsyEi5QbGF5ZXJSYW5raW5nSW5mbyJMCjNDTXNnR0NDU3RyaWtlMTVfdjJf",
          "TWF0Y2htYWtpbmdPcGVyYXRvcjJHQ0Jsb2dVcGRhdGUSFQoNbWFpbl9wb3N0",
          "X3VybBgBIAEoCSKKAQozQ01zZ0dDQ1N0cmlrZTE1X3YyX1NlcnZlck5vdGlm",
          "aWNhdGlvbkZvclVzZXJQZW5hbHR5EhIKCmFjY291bnRfaWQYASABKA0SDgoG",
          "cmVhc29uGAIgASgNEg8KB3NlY29uZHMYAyABKA0SHgoWY29tbXVuaWNhdGlv",
          "bl9jb29sZG93bhgEIAEoCCLtAQolQ01zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVu",
          "dFJlcG9ydFBsYXllchISCgphY2NvdW50X2lkGAEgASgNEhIKCnJwdF9haW1i",
          "b3QYAiABKA0SFAoMcnB0X3dhbGxoYWNrGAMgASgNEhUKDXJwdF9zcGVlZGhh",
          "Y2sYBCABKA0SFAoMcnB0X3RlYW1oYXJtGAUgASgNEhUKDXJwdF90ZXh0YWJ1",
          "c2UYBiABKA0SFgoOcnB0X3ZvaWNlYWJ1c2UYByABKA0SEAoIbWF0Y2hfaWQY",
          "CCABKAQSGAoQcmVwb3J0X2Zyb21fZGVtbxgJIAEoCCKNAQomQ01zZ0dDQ1N0",
          "cmlrZTE1X3YyX0NsaWVudENvbW1lbmRQbGF5ZXISEgoKYWNjb3VudF9pZBgB",
          "IAEoDRIQCghtYXRjaF9pZBgIIAEoBBItCgxjb21tZW5kYXRpb24YCSABKAsy",
          "Fy5QbGF5ZXJDb21tZW5kYXRpb25JbmZvEg4KBnRva2VucxgKIAEoDSK1AQol",
          "Q01zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudFJlcG9ydFNlcnZlchIUCgxycHRf",
          "cG9vcnBlcmYYASABKA0SGQoRcnB0X2FidXNpdmVtb2RlbHMYAiABKA0SEwoL",
          "cnB0X2JhZG1vdGQYAyABKA0SGAoQcnB0X2xpc3RpbmdhYnVzZRgEIAEoDRIa",
          "ChJycHRfaW52ZW50b3J5YWJ1c2UYBSABKA0SEAoIbWF0Y2hfaWQYCCABKAQi",
          "qQEKJ0NNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnRSZXBvcnRSZXNwb25zZRIX",
          "Cg9jb25maXJtYXRpb25faWQYASABKAQSEgoKYWNjb3VudF9pZBgCIAEoDRIR",
          "CglzZXJ2ZXJfaXAYAyABKA0SFQoNcmVzcG9uc2VfdHlwZRgEIAEoDRIXCg9y",
          "ZXNwb25zZV9yZXN1bHQYBSABKA0SDgoGdG9rZW5zGAYgASgNIsMBCjBDTXNn",
          "R0NDU3RyaWtlMTVfdjJfQ2xpZW50UmVxdWVzdFdhdGNoSW5mb0ZyaWVuZHMS",
          "EgoKcmVxdWVzdF9pZBgBIAEoDRITCgthY2NvdW50X2lkcxgCIAMoDRIQCghz",
          "ZXJ2ZXJpZBgDIAEoBBIPCgdtYXRjaGlkGAQgASgEEhcKD2NsaWVudF9sYXVu",
          "Y2hlchgFIAEoDRIqChFkYXRhX2NlbnRlcl9waW5ncxgGIAMoCzIPLkRhdGFD",
          "ZW50ZXJQaW5nIrACChJXYXRjaGFibGVNYXRjaEluZm8SEQoJc2VydmVyX2lw",
          "GAEgASgNEg8KB3R2X3BvcnQYAiABKA0SFQoNdHZfc3BlY3RhdG9ycxgDIAEo",
          "DRIPCgd0dl90aW1lGAQgASgNEhkKEXR2X3dhdGNoX3Bhc3N3b3JkGAUgASgM",
          "EhoKEmNsX2RlY3J5cHRkYXRhX2tleRgGIAEoBBIeChZjbF9kZWNyeXB0ZGF0",
          "YV9rZXlfcHViGAcgASgEEhEKCWdhbWVfdHlwZRgIIAEoDRIVCg1nYW1lX21h",
          "cGdyb3VwGAkgASgJEhAKCGdhbWVfbWFwGAogASgJEhEKCXNlcnZlcl9pZBgL",
          "IAEoBBIQCghtYXRjaF9pZBgMIAEoBBIWCg5yZXNlcnZhdGlvbl9pZBgNIAEo",
          "BCLLAQouQ01zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudFJlcXVlc3RKb2luRnJp",
          "ZW5kRGF0YRIPCgd2ZXJzaW9uGAEgASgNEhIKCmFjY291bnRfaWQYAiABKA0S",
          "EgoKam9pbl90b2tlbhgDIAEoDRIQCghqb2luX2lwcBgEIAEoDRI8CgNyZXMY",
          "BSABKAsyLy5DTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2htYWtpbmdHQzJDbGll",
          "bnRSZXNlcnZlEhAKCGVycm9ybXNnGAYgASgJIt8BCi5DTXNnR0NDU3RyaWtl",
          "MTVfdjJfQ2xpZW50UmVxdWVzdEpvaW5TZXJ2ZXJEYXRhEg8KB3ZlcnNpb24Y",
          "ASABKA0SEgoKYWNjb3VudF9pZBgCIAEoDRIQCghzZXJ2ZXJpZBgDIAEoBBIR",
          "CglzZXJ2ZXJfaXAYBCABKA0SEwoLc2VydmVyX3BvcnQYBSABKA0SPAoDcmVz",
          "GAYgASgLMi8uQ01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nR0MyQ2xp",
          "ZW50UmVzZXJ2ZRIQCghlcnJvcm1zZxgHIAEoCSKeAQosQ01zZ0dDQ3N0cmlr",
          "ZTE1X3YyX0NsaWVudFJlZGVlbU1pc3Npb25SZXdhcmQSEwoLY2FtcGFpZ25f",
          "aWQYASABKA0SEQoJcmVkZWVtX2lkGAIgASgNEhoKEnJlZGVlbWFibGVfYmFs",
          "YW5jZRgDIAEoDRIVCg1leHBlY3RlZF9jb3N0GAQgASgNEhMKC2JpZF9jb250",
          "cm9sGAUgASgFIm8KKUNNc2dHQ0NzdHJpa2UxNV92Ml9DbGllbnRSZWRlZW1G",
          "cmVlUmV3YXJkEhcKD2dlbmVyYXRpb25fdGltZRgBIAEoDRIaChJyZWRlZW1h",
          "YmxlX2JhbGFuY2UYAiABKA0SDQoFaXRlbXMYAyADKAQiuQIKLENNc2dHQ0Nz",
          "dHJpa2UxNV92Ml9HQzJTZXJ2ZXJOb3RpZnlYUFJld2FyZGVkEikKEHhwX3By",
          "b2dyZXNzX2RhdGEYASADKAsyDy5YcFByb2dyZXNzRGF0YRISCgphY2NvdW50",
          "X2lkGAIgASgNEhIKCmN1cnJlbnRfeHAYAyABKA0SFQoNY3VycmVudF9sZXZl",
          "bBgEIAEoDRIXCg91cGdyYWRlZF9kZWZpZHgYBSABKA0SIAoYb3BlcmF0aW9u",
          "X3BvaW50c19hd2FyZGVkGAYgASgNEhQKDGZyZWVfcmV3YXJkcxgHIAEoDRIa",
          "ChJ4cF90cmFpbF9yZW1haW5pbmcYCCABKA0SGgoSeHBfdHJhaWxfeHBfbmVl",
          "ZGVkGAkgASgFEhYKDnhwX3RyYWlsX2xldmVsGAogASgNIjYKJkNNc2dHQ0NT",
          "dHJpa2UxNV92Ml9DbGllbnROZXR3b3JrQ29uZmlnEgwKBGRhdGEYASABKAwi",
          "1QIKH0NNc2dHQ0NTdHJpa2UxNV9DbGllbnREZWVwU3RhdHMSEgoKYWNjb3Vu",
          "dF9pZBgBIAEoDRI+CgVyYW5nZRgCIAEoCzIvLkNNc2dHQ0NTdHJpa2UxNV9D",
          "bGllbnREZWVwU3RhdHMuRGVlcFN0YXRzUmFuZ2USQAoHbWF0Y2hlcxgDIAMo",
          "CzIvLkNNc2dHQ0NTdHJpa2UxNV9DbGllbnREZWVwU3RhdHMuRGVlcFN0YXRz",
          "TWF0Y2gaPAoORGVlcFN0YXRzUmFuZ2USDQoFYmVnaW4YASABKA0SCwoDZW5k",
          "GAIgASgNEg4KBmZyb3plbhgDIAEoCBpeCg5EZWVwU3RhdHNNYXRjaBIlCgZw",
          "bGF5ZXIYASABKAsyFS5EZWVwUGxheWVyU3RhdHNFbnRyeRIlCgZldmVudHMY",
          "AiADKAsyFS5EZWVwUGxheWVyTWF0Y2hFdmVudCKaAQohQ01zZ0dDQ1N0cmlr",
          "ZTE1X3YyX1dhdGNoSW5mb1VzZXJzEhIKCnJlcXVlc3RfaWQYASABKA0SEwoL",
          "YWNjb3VudF9pZHMYAiADKA0SMgoVd2F0Y2hhYmxlX21hdGNoX2luZm9zGAMg",
          "AygLMhMuV2F0Y2hhYmxlTWF0Y2hJbmZvEhgKEGV4dGVuZGVkX3RpbWVvdXQY",
          "BSABKA0inAEKLkNNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnRSZXF1ZXN0UGxh",
          "eWVyc1Byb2ZpbGUSHgoWcmVxdWVzdF9pZF9fZGVwcmVjYXRlZBgBIAEoDRIf",
          "ChdhY2NvdW50X2lkc19fZGVwcmVjYXRlZBgCIAMoDRISCgphY2NvdW50X2lk",
          "GAMgASgNEhUKDXJlcXVlc3RfbGV2ZWwYBCABKA0igAEKIUNNc2dHQ0NTdHJp",
          "a2UxNV92Ml9QbGF5ZXJzUHJvZmlsZRISCgpyZXF1ZXN0X2lkGAEgASgNEkcK",
          "EGFjY291bnRfcHJvZmlsZXMYAiADKAsyLS5DTXNnR0NDU3RyaWtlMTVfdjJf",
          "TWF0Y2htYWtpbmdHQzJDbGllbnRIZWxsbyKWBAonQ01zZ0dDQ1N0cmlrZTE1",
          "X3YyX1ByZW1pZXJTZWFzb25TdW1tYXJ5EhIKCmFjY291bnRfaWQYASABKA0S",
          "EQoJc2Vhc29uX2lkGAIgASgNEksKDWRhdGFfcGVyX3dlZWsYAyADKAsyNC5D",
          "TXNnR0NDU3RyaWtlMTVfdjJfUHJlbWllclNlYXNvblN1bW1hcnkuRGF0YVBl",
          "cldlZWsSSQoMZGF0YV9wZXJfbWFwGAQgAygLMjMuQ01zZ0dDQ1N0cmlrZTE1",
          "X3YyX1ByZW1pZXJTZWFzb25TdW1tYXJ5LkRhdGFQZXJNYXAaRwoLRGF0YVBl",
          "cldlZWsSDwoHd2Vla19pZBgBIAEoBBIPCgdyYW5rX2lkGAIgASgNEhYKDm1h",
          "dGNoZXNfcGxheWVkGAMgASgNGuIBCgpEYXRhUGVyTWFwEg4KBm1hcF9pZBgB",
          "IAEoDRIMCgR3aW5zGAIgASgNEgwKBHRpZXMYAyABKA0SDgoGbG9zc2VzGAQg",
          "ASgNEg4KBnJvdW5kcxgFIAEoDRINCgVraWxscxgGIAEoDRIRCgloZWFkc2hv",
          "dHMYByABKA0SDwoHYXNzaXN0cxgIIAEoDRIOCgZkZWF0aHMYCSABKA0SDAoE",
          "bXZwcxgKIAEoDRIRCglyb3VuZHNfM2sYCyABKA0SEQoJcm91bmRzXzRrGAwg",
          "ASgNEhEKCXJvdW5kc181axgNIAEoDSLMAQosQ01zZ0dDQ1N0cmlrZTE1X3Yy",
          "X1BsYXllck92ZXJ3YXRjaENhc2VVcGRhdGUSDgoGY2FzZWlkGAEgASgEEhEK",
          "CXN1c3BlY3RpZBgDIAEoDRISCgpmcmFjdGlvbmlkGAQgASgNEhIKCnJwdF9h",
          "aW1ib3QYBSABKA0SFAoMcnB0X3dhbGxoYWNrGAYgASgNEhUKDXJwdF9zcGVl",
          "ZGhhY2sYByABKA0SFAoMcnB0X3RlYW1oYXJtGAggASgNEg4KBnJlYXNvbhgJ",
          "IAEoDSKNAgowQ01zZ0dDQ1N0cmlrZTE1X3YyX1BsYXllck92ZXJ3YXRjaENh",
          "c2VBc3NpZ25tZW50Eg4KBmNhc2VpZBgBIAEoBBIPCgdjYXNldXJsGAIgASgJ",
          "Eg8KB3ZlcmRpY3QYAyABKA0SEQoJdGltZXN0YW1wGAQgASgNEhcKD3Rocm90",
          "dGxlc2Vjb25kcxgFIAEoDRIRCglzdXNwZWN0aWQYBiABKA0SEgoKZnJhY3Rp",
          "b25pZBgHIAEoDRIRCgludW1yb3VuZHMYCCABKA0SFgoOZnJhY3Rpb25yb3Vu",
          "ZHMYCSABKA0SGQoRc3RyZWFrY29udmljdGlvbnMYCiABKAUSDgoGcmVhc29u",
          "GAsgASgNIlAKLENNc2dHQ0NTdHJpa2UxNV92Ml9QbGF5ZXJPdmVyd2F0Y2hD",
          "YXNlU3RhdHVzEg4KBmNhc2VpZBgBIAEoBBIQCghzdGF0dXNpZBgCIAEoDSJD",
          "Ch5DQ2xpZW50SGVhZGVyT3ZlcndhdGNoRXZpZGVuY2USEQoJYWNjb3VudGlk",
          "GAEgASgNEg4KBmNhc2VpZBgCIAEoBCJQCiNDTXNnR0NDU3RyaWtlMTVfdjJf",
          "R0MyQ2xpZW50VGV4dE1zZxIKCgJpZBgBIAEoDRIMCgR0eXBlGAIgASgNEg8K",
          "B3BheWxvYWQYAyABKAwiPwojQ01zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudDJH",
          "Q1RleHRNc2cSCgoCaWQYASABKA0SDAoEYXJncxgCIAMoDCK2AQopQ01zZ0dD",
          "Q1N0cmlrZTE1X3YyX01hdGNoRW5kUnVuUmV3YXJkRHJvcHMSTAoKc2VydmVy",
          "aW5mbxgDIAEoCzI4LkNNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1ha2luZ1Nl",
          "cnZlclJlc2VydmF0aW9uUmVzcG9uc2USOwoUbWF0Y2hfZW5kX3F1ZXN0X2Rh",
          "dGEYBCABKAsyHS5DTXNnR0NfU2VydmVyUXVlc3RVcGRhdGVEYXRhIosGChlD",
          "RWNvbkl0ZW1QcmV2aWV3RGF0YUJsb2NrEhEKCWFjY291bnRpZBgBIAEoDRIO",
          "CgZpdGVtaWQYAiABKAQSEAoIZGVmaW5kZXgYAyABKA0SEgoKcGFpbnRpbmRl",
          "eBgEIAEoDRIOCgZyYXJpdHkYBSABKA0SDwoHcXVhbGl0eRgGIAEoDRIRCglw",
          "YWludHdlYXIYByABKA0SEQoJcGFpbnRzZWVkGAggASgNEhoKEmtpbGxlYXRl",
          "cnNjb3JldHlwZRgJIAEoDRIWCg5raWxsZWF0ZXJ2YWx1ZRgKIAEoDRISCgpj",
          "dXN0b21uYW1lGAsgASgJEjQKCHN0aWNrZXJzGAwgAygLMiIuQ0Vjb25JdGVt",
          "UHJldmlld0RhdGFCbG9jay5TdGlja2VyEhEKCWludmVudG9yeRgNIAEoDRIO",
          "CgZvcmlnaW4YDiABKA0SDwoHcXVlc3RpZBgPIAEoDRISCgpkcm9wcmVhc29u",
          "GBAgASgNEhIKCm11c2ljaW5kZXgYESABKA0SEAoIZW50aW5kZXgYEiABKAUS",
          "EAoIcGV0aW5kZXgYEyABKA0SNQoJa2V5Y2hhaW5zGBQgAygLMiIuQ0Vjb25J",
          "dGVtUHJldmlld0RhdGFCbG9jay5TdGlja2VyEg0KBXN0eWxlGBUgASgNEjYK",
          "CnZhcmlhdGlvbnMYFiADKAsyIi5DRWNvbkl0ZW1QcmV2aWV3RGF0YUJsb2Nr",
          "LlN0aWNrZXISFQoNdXBncmFkZV9sZXZlbBgXIAEoDRrKAQoHU3RpY2tlchIM",
          "CgRzbG90GAEgASgNEhIKCnN0aWNrZXJfaWQYAiABKA0SDAoEd2VhchgDIAEo",
          "AhINCgVzY2FsZRgEIAEoAhIQCghyb3RhdGlvbhgFIAEoAhIPCgd0aW50X2lk",
          "GAYgASgNEhAKCG9mZnNldF94GAcgASgCEhAKCG9mZnNldF95GAggASgCEhAK",
          "CG9mZnNldF96GAkgASgCEg8KB3BhdHRlcm4YCiABKA0SFgoOaGlnaGxpZ2h0",
          "X3JlZWwYCyABKA0iYgoyQ01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNoRW5kUmV3",
          "YXJkRHJvcHNOb3RpZmljYXRpb24SLAoIaXRlbWluZm8YBiABKAsyGi5DRWNv",
          "bkl0ZW1QcmV2aWV3RGF0YUJsb2NrIkQKFENNc2dJdGVtQWNrbm93bGVkZ2Vk",
          "EiwKCGl0ZW1pbmZvGAEgASgLMhouQ0Vjb25JdGVtUHJldmlld0RhdGFCbG9j",
          "ayJ9CjdDTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50MkdDRWNvblByZXZpZXdE",
          "YXRhQmxvY2tSZXF1ZXN0Eg8KB3BhcmFtX3MYASABKAQSDwoHcGFyYW1fYRgC",
          "IAEoBBIPCgdwYXJhbV9kGAMgASgEEg8KB3BhcmFtX20YBCABKAQiaAo4Q01z",
          "Z0dDQ1N0cmlrZTE1X3YyX0NsaWVudDJHQ0Vjb25QcmV2aWV3RGF0YUJsb2Nr",
          "UmVzcG9uc2USLAoIaXRlbWluZm8YASABKAsyGi5DRWNvbkl0ZW1QcmV2aWV3",
          "RGF0YUJsb2NrIjUKM0NNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaExpc3RSZXF1",
          "ZXN0Q3VycmVudExpdmVHYW1lcyJHCjJDTXNnR0NDU3RyaWtlMTVfdjJfTWF0",
          "Y2hMaXN0UmVxdWVzdExpdmVHYW1lRm9yVXNlchIRCglhY2NvdW50aWQYASAB",
          "KA0iRwoyQ01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNoTGlzdFJlcXVlc3RSZWNl",
          "bnRVc2VyR2FtZXMSEQoJYWNjb3VudGlkGAEgASgNIkUKMkNNc2dHQ0NTdHJp",
          "a2UxNV92Ml9NYXRjaExpc3RSZXF1ZXN0VG91cm5hbWVudEdhbWVzEg8KB2V2",
          "ZW50aWQYASABKAUiZAovQ01zZ0dDQ1N0cmlrZTE1X3YyX01hdGNoTGlzdFJl",
          "cXVlc3RGdWxsR2FtZUluZm8SDwoHbWF0Y2hpZBgBIAEoBBIRCglvdXRjb21l",
          "aWQYAiABKAQSDQoFdG9rZW4YAyABKA0iiAIKHUNEYXRhR0NDU3RyaWtlMTVf",
          "djJfTWF0Y2hJbmZvEg8KB21hdGNoaWQYASABKAQSEQoJbWF0Y2h0aW1lGAIg",
          "ASgNEi8KEndhdGNoYWJsZW1hdGNoaW5mbxgDIAEoCzITLldhdGNoYWJsZU1h",
          "dGNoSW5mbxJKChFyb3VuZHN0YXRzX2xlZ2FjeRgEIAEoCzIvLkNNc2dHQ0NT",
          "dHJpa2UxNV92Ml9NYXRjaG1ha2luZ1NlcnZlclJvdW5kU3RhdHMSRgoNcm91",
          "bmRzdGF0c2FsbBgFIAMoCzIvLkNNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1h",
          "a2luZ1NlcnZlclJvdW5kU3RhdHMiXgonQ0RhdGFHQ0NTdHJpa2UxNV92Ml9U",
          "b3VybmFtZW50R3JvdXBUZWFtEg8KB3RlYW1faWQYASABKAUSDQoFc2NvcmUY",
          "AiABKAUSEwoLY29ycmVjdHBpY2sYAyABKAgi2QIKI0NEYXRhR0NDU3RyaWtl",
          "MTVfdjJfVG91cm5hbWVudEdyb3VwEg8KB2dyb3VwaWQYASABKA0SDAoEbmFt",
          "ZRgCIAEoCRIMCgRkZXNjGAMgASgJEhkKEXBpY2tzX19kZXByZWNhdGVkGAQg",
          "ASgNEjcKBXRlYW1zGAUgAygLMiguQ0RhdGFHQ0NTdHJpa2UxNV92Ml9Ub3Vy",
          "bmFtZW50R3JvdXBUZWFtEhEKCXN0YWdlX2lkcxgGIAMoBRIZChFwaWNrbG9j",
          "a3VudGlsdGltZRgHIAEoDRIVCg1waWNrYWJsZXRlYW1zGAggASgNEhcKD3Bv",
          "aW50c19wZXJfcGljaxgJIAEoDRI5CgVwaWNrcxgKIAMoCzIqLkNEYXRhR0ND",
          "U3RyaWtlMTVfdjJfVG91cm5hbWVudEdyb3VwLlBpY2tzGhgKBVBpY2tzEg8K",
          "B3BpY2tpZHMYASADKAUijAEKJUNEYXRhR0NDU3RyaWtlMTVfdjJfVG91cm5h",
          "bWVudFNlY3Rpb24SEQoJc2VjdGlvbmlkGAEgASgNEgwKBG5hbWUYAiABKAkS",
          "DAoEZGVzYxgDIAEoCRI0CgZncm91cHMYBCADKAsyJC5DRGF0YUdDQ1N0cmlr",
          "ZTE1X3YyX1RvdXJuYW1lbnRHcm91cCK1AQoiQ0RhdGFHQ0NTdHJpa2UxNV92",
          "Ml9Ub3VybmFtZW50SW5mbxI4CghzZWN0aW9ucxgBIAMoCzImLkNEYXRhR0ND",
          "U3RyaWtlMTVfdjJfVG91cm5hbWVudFNlY3Rpb24SKgoQdG91cm5hbWVudF9l",
          "dmVudBgCIAEoCzIQLlRvdXJuYW1lbnRFdmVudBIpChB0b3VybmFtZW50X3Rl",
          "YW1zGAMgAygLMg8uVG91cm5hbWVudFRlYW0i6wEKHENNc2dHQ0NTdHJpa2Ux",
          "NV92Ml9NYXRjaExpc3QSFAoMbXNncmVxdWVzdGlkGAEgASgNEhEKCWFjY291",
          "bnRpZBgCIAEoDRISCgpzZXJ2ZXJ0aW1lGAMgASgNEi8KB21hdGNoZXMYBCAD",
          "KAsyHi5DRGF0YUdDQ1N0cmlrZTE1X3YyX01hdGNoSW5mbxIgCgdzdHJlYW1z",
          "GAUgAygLMg8uVG91cm5hbWVudFRlYW0SOwoOdG91cm5hbWVudGluZm8YBiAB",
          "KAsyIy5DRGF0YUdDQ1N0cmlrZTE1X3YyX1RvdXJuYW1lbnRJbmZvIokBCjJD",
          "TXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2hMaXN0VG91cm5hbWVudE9wZXJhdG9y",
          "TWdtdBIPCgdldmVudGlkGAEgASgFEi8KB21hdGNoZXMYAiADKAsyHi5DRGF0",
          "YUdDQ1N0cmlrZTE1X3YyX01hdGNoSW5mbxIRCglhY2NvdW50aWQYAyABKA0i",
          "7wEKHkNNc2dHQ0NTdHJpa2UxNV92Ml9QcmVkaWN0aW9ucxIQCghldmVudF9p",
          "ZBgBIAEoDRJSChZncm91cF9tYXRjaF90ZWFtX3BpY2tzGAIgAygLMjIuQ01z",
          "Z0dDQ1N0cmlrZTE1X3YyX1ByZWRpY3Rpb25zLkdyb3VwTWF0Y2hUZWFtUGlj",
          "axpnChJHcm91cE1hdGNoVGVhbVBpY2sSEQoJc2VjdGlvbmlkGAEgASgFEg8K",
          "B2dyb3VwaWQYAiABKAUSDQoFaW5kZXgYAyABKAUSDgoGdGVhbWlkGAQgASgF",
          "Eg4KBml0ZW1pZBgFIAEoBCL7AQoaQ01zZ0dDQ1N0cmlrZTE1X3YyX0ZhbnRh",
          "c3kSEAoIZXZlbnRfaWQYASABKA0SNgoFdGVhbXMYAiADKAsyJy5DTXNnR0ND",
          "U3RyaWtlMTVfdjJfRmFudGFzeS5GYW50YXN5VGVhbRo5CgtGYW50YXN5U2xv",
          "dBIMCgR0eXBlGAEgASgFEgwKBHBpY2sYAiABKAUSDgoGaXRlbWlkGAMgASgE",
          "GlgKC0ZhbnRhc3lUZWFtEhEKCXNlY3Rpb25pZBgBIAEoBRI2CgVzbG90cxgC",
          "IAMoCzInLkNNc2dHQ0NTdHJpa2UxNV92Ml9GYW50YXN5LkZhbnRhc3lTbG90",
          "IiIKEUNBdHRyaWJ1dGVfU3RyaW5nEg0KBXZhbHVlGAEgASgJIs4DCh5DTXNn",
          "TGVnYWN5U291cmNlMUNsaWVudFdlbGNvbWUSDwoHdmVyc2lvbhgBIAEoDRIR",
          "CglnYW1lX2RhdGEYAiABKAwSOwobb3V0b2ZkYXRlX3N1YnNjcmliZWRfY2Fj",
          "aGVzGAMgAygLMhYuQ01zZ1NPQ2FjaGVTdWJzY3JpYmVkEkEKGnVwdG9kYXRl",
          "X3N1YnNjcmliZWRfY2FjaGVzGAQgAygLMh0uQ01zZ1NPQ2FjaGVTdWJzY3Jp",
          "cHRpb25DaGVjaxI6Cghsb2NhdGlvbhgFIAEoCzIoLkNNc2dMZWdhY3lTb3Vy",
          "Y2UxQ2xpZW50V2VsY29tZS5Mb2NhdGlvbhISCgpnYW1lX2RhdGEyGAYgASgM",
          "EiQKHHJ0aW1lMzJfZ2Nfd2VsY29tZV90aW1lc3RhbXAYByABKA0SEAoIY3Vy",
          "cmVuY3kYCCABKA0SDwoHYmFsYW5jZRgJIAEoDRITCgtiYWxhbmNlX3VybBgK",
          "IAEoCRIYChB0eG5fY291bnRyeV9jb2RlGAsgASgJGkAKCExvY2F0aW9uEhAK",
          "CGxhdGl0dWRlGAEgASgCEhEKCWxvbmdpdHVkZRgCIAEoAhIPCgdjb3VudHJ5",
          "GAMgASgJIsQBChRDTXNnQ1N0cmlrZTE1V2VsY29tZRIXCg9zdG9yZV9pdGVt",
          "X2hhc2gYBSABKA0SHwoXdGltZXBsYXllZGNvbnNlY3V0aXZlbHkYBiABKA0S",
          "GQoRdGltZV9maXJzdF9wbGF5ZWQYCiABKA0SGAoQbGFzdF90aW1lX3BsYXll",
          "ZBgMIAEoDRIXCg9sYXN0X2lwX2FkZHJlc3MYDSABKA0SEgoKZ3Njb29raWVp",
          "ZBgSIAEoBBIQCgh1bmlxdWVpZBgTIAEoBCKbAQoxQ01zZ0dDQ1N0cmlrZTE1",
          "X3YyX0NsaWVudFZhclZhbHVlTm90aWZpY2F0aW9uSW5mbxISCgp2YWx1ZV9u",
          "YW1lGAEgASgJEhEKCXZhbHVlX2ludBgCIAEoBRITCgtzZXJ2ZXJfYWRkchgD",
          "IAEoDRITCgtzZXJ2ZXJfcG9ydBgEIAEoDRIVCg1jaG9rZWRfYmxvY2tzGAUg",
          "AygJInoKMUNNc2dHQ0NTdHJpa2UxNV92Ml9TZXJ2ZXJWYXJWYWx1ZU5vdGlm",
          "aWNhdGlvbkluZm8SEQoJYWNjb3VudGlkGAEgASgNEhIKCnZpZXdhbmdsZXMY",
          "AiADKA0SDAoEdHlwZRgDIAEoDRIQCgh1c2VyZGF0YRgEIAMoDSIsCipDTXNn",
          "R0NDU3RyaWtlMTVfdjJfR2lmdHNMZWFkZXJib2FyZFJlcXVlc3QinQIKK0NN",
          "c2dHQ0NTdHJpa2UxNV92Ml9HaWZ0c0xlYWRlcmJvYXJkUmVzcG9uc2USEgoK",
          "c2VydmVydGltZRgBIAEoDRIbChN0aW1lX3BlcmlvZF9zZWNvbmRzGAIgASgN",
          "EhkKEXRvdGFsX2dpZnRzX2dpdmVuGAMgASgNEhQKDHRvdGFsX2dpdmVycxgE",
          "IAEoDRJSCgdlbnRyaWVzGAUgAygLMkEuQ01zZ0dDQ1N0cmlrZTE1X3YyX0dp",
          "ZnRzTGVhZGVyYm9hcmRSZXNwb25zZS5HaWZ0TGVhZGVyYm9hcmRFbnRyeRo4",
          "ChRHaWZ0TGVhZGVyYm9hcmRFbnRyeRIRCglhY2NvdW50aWQYASABKA0SDQoF",
          "Z2lmdHMYAiABKA0iTAopQ01zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudFN1Ym1p",
          "dFN1cnZleVZvdGUSEQoJc3VydmV5X2lkGAEgASgNEgwKBHZvdGUYAiABKA0i",
          "PwoqQ01zZ0dDQ1N0cmlrZTE1X3YyX1NlcnZlcjJHQ0NsaWVudFZhbGlkYXRl",
          "EhEKCWFjY291bnRpZBgBIAEoDSJyCipDTXNnR0NDU3RyaWtlMTVfdjJfR0My",
          "Q2xpZW50VG91cm5hbWVudEluZm8SDwoHZXZlbnRpZBgBIAEoDRIPCgdzdGFn",
          "ZWlkGAIgASgNEhEKCWdhbWVfdHlwZRgDIAEoDRIPCgd0ZWFtaWRzGAQgAygN",
          "Ik8KDUNTT0Vjb25Db3Vwb24SFQoHZW50cnlpZBgBIAEoDUIEgKYdARIOCgZk",
          "ZWZpZHgYAiABKA0SFwoPZXhwaXJhdGlvbl9kYXRlGAMgASgHImEKG0NTT0Fj",
          "Y291bnRJdGVtUGVyc29uYWxTdG9yZRIXCg9nZW5lcmF0aW9uX3RpbWUYASAB",
          "KA0SGgoScmVkZWVtYWJsZV9iYWxhbmNlGAIgASgNEg0KBWl0ZW1zGAMgAygE",
          "IloKEENTT0FjY291bnRYcFNob3ASFwoPZ2VuZXJhdGlvbl90aW1lGAEgASgN",
          "EhoKEnJlZGVlbWFibGVfYmFsYW5jZRgCIAEoDRIRCgl4cF90cmFja3MYAyAD",
          "KA0iegoUQ1NPQWNjb3VudFhwU2hvcEJpZHMSGQoLY2FtcGFpZ25faWQYASAB",
          "KA1CBICmHQESFwoJcmVkZWVtX2lkGAIgASgNQgSAph0BEhUKDWV4cGVjdGVk",
          "X2Nvc3QYAyABKA0SFwoPZ2VuZXJhdGlvbl90aW1lGAQgASgNIloKFENTT1Zv",
          "bGF0aWxlSXRlbU9mZmVyEhQKBmRlZmlkeBgBIAEoDUIEgKYdARITCgtmYXV4",
          "X2l0ZW1pZBgCIAMoBBIXCg9nZW5lcmF0aW9uX3RpbWUYAyADKA0iXgodQ1NP",
          "Vm9sYXRpbGVJdGVtQ2xhaW1lZFJld2FyZHMSFAoGZGVmaWR4GAEgASgNQgSA",
          "ph0BEg4KBnJld2FyZBgCIAMoDRIXCg9nZW5lcmF0aW9uX3RpbWUYAyADKA0i",
          "NgojQ1NPQWNjb3VudEtleWNoYWluUmVtb3ZlVG9vbENoYXJnZXMSDwoHY2hh",
          "cmdlcxgBIAEoDSJZChBDU09RdWVzdFByb2dyZXNzEhUKB3F1ZXN0aWQYASAB",
          "KA1CBICmHQESGAoQcG9pbnRzX3JlbWFpbmluZxgCIAEoDRIUCgxib251c19w",
          "b2ludHMYAyABKA0izQEKG0NTT0FjY291bnRTZWFzb25hbE9wZXJhdGlvbhIa",
          "CgxzZWFzb25fdmFsdWUYASABKA1CBICmHQESFQoNdGllcl91bmxvY2tlZBgC",
          "IAEoDRIVCg1wcmVtaXVtX3RpZXJzGAMgASgNEhIKCm1pc3Npb25faWQYBCAB",
          "KA0SGgoSbWlzc2lvbnNfY29tcGxldGVkGAUgASgNEhoKEnJlZGVlbWFibGVf",
          "YmFsYW5jZRgGIAEoDRIYChBzZWFzb25fcGFzc190aW1lGAcgASgNIlIKH0NT",
          "T0FjY291bnRSZWN1cnJpbmdTdWJzY3JpcHRpb24SFwoPdGltZV9uZXh0X2N5",
          "Y2xlGAEgASgNEhYKDnRpbWVfaW5pdGlhdGVkGAIgASgNImMKGENTT0dhbWVB",
          "Y2NvdW50U3RlYW1DaGluYRIYChB0aW1lX2xhc3RfdXBkYXRlGAEgASgNEhYK",
          "DnRpbWVfY29tbXNfYmFuGAIgASgNEhUKDXRpbWVfcGxheV9iYW4YAyABKA0i",
          "rwEKFENTT1BlcnNvbmFEYXRhUHVibGljEhQKDHBsYXllcl9sZXZlbBgBIAEo",
          "BRItCgxjb21tZW5kYXRpb24YAiABKAsyFy5QbGF5ZXJDb21tZW5kYXRpb25J",
          "bmZvEhYKDmVsZXZhdGVkX3N0YXRlGAMgASgIEiIKGnhwX3RyYWlsX3RpbWVz",
          "dGFtcF9yZWZyZXNoGAQgASgNEhYKDnhwX3RyYWlsX2xldmVsGAUgASgNImYK",
          "GkNTT0FjY291bnRSZWN1cnJpbmdNaXNzaW9uEhIKCmFjY291bnRfaWQYASAB",
          "KA0SEgoKbWlzc2lvbl9pZBgCIAEoDRIOCgZwZXJpb2QYAyABKA0SEAoIcHJv",
          "Z3Jlc3MYBCABKA0ioAEKKENNc2dHQ0NTdHJpa2UxNV92Ml9HQzJDbGllbnRO",
          "b3RpZnlYUFNob3ASIwoIcHJlbWF0Y2gYASABKAsyES5DU09BY2NvdW50WHBT",
          "aG9wEiQKCXBvc3RtYXRjaBgCIAEoCzIRLkNTT0FjY291bnRYcFNob3ASEgoK",
          "Y3VycmVudF94cBgDIAEoDRIVCg1jdXJyZW50X2xldmVsGAQgASgNIi0KK0NN",
          "c2dHQ0NTdHJpa2UxNV92Ml9DbGllbnQyR2NBY2tYUFNob3BUcmFja3MiqQEK",
          "MkNNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1ha2luZ0dDMkNsaWVudFNlYXJj",
          "aFN0YXRzEhYKDmdzX2xvY2F0aW9uX2lkGAEgASgNEhYKDmRhdGFfY2VudGVy",
          "X2lkGAIgASgNEhUKDW51bV9sb2NrZWRfaW4YAyABKA0SGAoQbnVtX2ZvdW5k",
          "X25lYXJieRgEIAEoDRISCgpub3RlX2xldmVsGAUgASgNIi0KG0NNc2dHQ19H",
          "bG9iYWxHYW1lX1N1YnNjcmliZRIOCgZ0aWNrZXQYASABKAQiMQodQ01zZ0dD",
          "X0dsb2JhbEdhbWVfVW5zdWJzY3JpYmUSEAoIdGltZWxlZnQYASABKAUiUAoW",
          "Q01zZ0dDX0dsb2JhbEdhbWVfUGxheRIOCgZ0aWNrZXQYASABKAQSEgoKZ2Ft",
          "ZXRpbWVtcxgCIAEoDRISCgptc3BlcnBvaW50GAMgASgNIj0KJUNNc2dHQ0NT",
          "dHJpa2UxNV92Ml9BY2tub3dsZWRnZVBlbmFsdHkSFAoMYWNrbm93bGVkZ2Vk",
          "GAEgASgFInsKL0NNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnQyR0NSZXF1ZXN0",
          "UHJlc3RpZ2VDb2luEhAKCGRlZmluZGV4GAEgASgNEhEKCXVwZ3JhZGVpZBgC",
          "IAEoBBINCgVob3VycxgDIAEoDRIUCgxwcmVzdGlnZXRpbWUYBCABKA0iRgoo",
          "Q01zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudDJHQ1N0cmVhbVVubG9jaxIOCgZ0",
          "aWNrZXQYASABKAQSCgoCb3MYAiABKAUiPAorQ01zZ0dDQ1N0cmlrZTE1X3Yy",
          "X0NsaWVudFRvR0NSZXF1ZXN0RWxldmF0ZRINCgVzdGFnZRgBIAEoDSJDCiFD",
          "TXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50VG9HQ0NoYXQSEAoIbWF0Y2hfaWQY",
          "ASABKAQSDAoEdGV4dBgCIAEoCSJFCiFDTXNnR0NDU3RyaWtlMTVfdjJfR0NU",
          "b0NsaWVudENoYXQSEgoKYWNjb3VudF9pZBgBIAEoDRIMCgR0ZXh0GAIgASgJ",
          "IkUKJENNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnRBdXRoS2V5Q29kZRIPCgdl",
          "dmVudGlkGAEgASgNEgwKBGNvZGUYAiABKAkiRgoeQ01zZ0dDQ1N0cmlrZTE1",
          "X0dvdHZTeW5jUGFja2V0EiQKBGRhdGEYASABKAsyFi5DRW5naW5lR290dlN5",
          "bmNQYWNrZXQikwIKG1BsYXllckRlY2FsRGlnaXRhbFNpZ25hdHVyZRIRCglz",
          "aWduYXR1cmUYASABKAwSEQoJYWNjb3VudGlkGAIgASgNEg0KBXJ0aW1lGAMg",
          "ASgNEg4KBmVuZHBvcxgEIAMoAhIQCghzdGFydHBvcxgFIAMoAhIMCgRsZWZ0",
          "GAYgAygCEhEKCXR4X2RlZmlkeBgHIAEoDRIQCghlbnRpbmRleBgIIAEoBRIO",
          "CgZoaXRib3gYCSABKA0SFAoMY3JlYXRpb250aW1lGAogASgCEhEKCWVxdWlw",
          "c2xvdBgLIAEoDRIQCgh0cmFjZV9pZBgMIAEoDRIOCgZub3JtYWwYDSADKAIS",
          "DwoHdGludF9pZBgOIAEoDSJmCihDTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50",
          "UGxheWVyRGVjYWxTaWduEioKBGRhdGEYASABKAsyHC5QbGF5ZXJEZWNhbERp",
          "Z2l0YWxTaWduYXR1cmUSDgoGaXRlbWlkGAIgASgEIjQKIUNNc2dHQ0NTdHJp",
          "a2UxNV92Ml9CZXRhRW5yb2xsbWVudBIPCgdlcmVzdWx0GAEgASgNIl8KKENN",
          "c2dHQ0NTdHJpa2UxNV92Ml9DbGllbnRMb2dvbkZhdGFsRXJyb3ISEQoJZXJy",
          "b3Jjb2RlGAEgASgNEg8KB21lc3NhZ2UYAiABKAkSDwoHY291bnRyeRgDIAEo",
          "CSJTCiJDTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50UG9sbFN0YXRlEg4KBnBv",
          "bGxpZBgBIAEoDRINCgVuYW1lcxgCIAMoCRIOCgZ2YWx1ZXMYAyADKAUipAEK",
          "IUNNc2dHQ0NTdHJpa2UxNV92Ml9QYXJ0eV9SZWdpc3RlchIKCgJpZBgBIAEo",
          "DRILCgN2ZXIYAiABKA0SCwoDYXByGAMgASgNEgsKA2FyaxgEIAEoDRILCgNu",
          "YnkYBSABKA0SCwoDZ3JwGAYgASgNEg0KBXNsb3RzGAcgASgNEhAKCGxhdW5j",
          "aGVyGAggASgNEhEKCWdhbWVfdHlwZRgJIAEoDSJ7Ch9DTXNnR0NDU3RyaWtl",
          "MTVfdjJfUGFydHlfU2VhcmNoEgsKA3ZlchgBIAEoDRILCgNhcHIYAiABKA0S",
          "CwoDYXJrGAMgASgNEgwKBGdycHMYBCADKA0SEAoIbGF1bmNoZXIYBSABKA0S",
          "EQoJZ2FtZV90eXBlGAYgASgNItcBCiZDTXNnR0NDU3RyaWtlMTVfdjJfUGFy",
          "dHlfU2VhcmNoUmVzdWx0cxI+CgdlbnRyaWVzGAEgAygLMi0uQ01zZ0dDQ1N0",
          "cmlrZTE1X3YyX1BhcnR5X1NlYXJjaFJlc3VsdHMuRW50cnkabQoFRW50cnkS",
          "CgoCaWQYASABKA0SCwoDZ3JwGAIgASgNEhEKCWdhbWVfdHlwZRgDIAEoDRIL",
          "CgNhcHIYBCABKA0SCwoDYXJrGAUgASgNEgsKA2xvYxgGIAEoDRIRCglhY2Nv",
          "dW50aWQYByABKA0iRQofQ01zZ0dDQ1N0cmlrZTE1X3YyX1BhcnR5X0ludml0",
          "ZRIRCglhY2NvdW50aWQYASABKA0SDwoHbG9iYnlpZBgCIAEoDSLCAQopQ01z",
          "Z0dDQ1N0cmlrZTE1X3YyX0FjY291bnRfUmVxdWVzdENvUGxheXMSQgoHcGxh",
          "eWVycxgBIAMoCzIxLkNNc2dHQ0NTdHJpa2UxNV92Ml9BY2NvdW50X1JlcXVl",
          "c3RDb1BsYXlzLlBsYXllchISCgpzZXJ2ZXJ0aW1lGAIgASgNGj0KBlBsYXll",
          "chIRCglhY2NvdW50aWQYASABKA0SEAoIcnRjb3BsYXkYAiABKA0SDgoGb25s",
          "aW5lGAMgASgIIqQBCipDTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50VG9HQ1Jl",
          "cXVlc3RUaWNrZXQSGwoTYXV0aG9yaXplZF9zdGVhbV9pZBgBIAEoBhIcChRh",
          "dXRob3JpemVkX3B1YmxpY19pcBgCIAEoBxIbChNnYW1lc2VydmVyX3N0ZWFt",
          "X2lkGAMgASgGEh4KFmdhbWVzZXJ2ZXJfc2RyX3JvdXRpbmcYBSABKAkiPgoh",
          "Q01zZ0dDVG9DbGllbnRTdGVhbURhdGFncmFtVGlja2V0EhkKEXNlcmlhbGl6",
          "ZWRfdGlja2V0GBAgASgMIigKJkNNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnRS",
          "ZXF1ZXN0T2ZmZXJzIlwKKENNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnRSZXF1",
          "ZXN0U291dmVuaXISDgoGaXRlbWlkGAEgASgEEg8KB21hdGNoaWQYAiABKAQS",
          "DwoHZXZlbnRpZBgDIAEoBSJGCidDTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50",
          "QWNjb3VudEJhbGFuY2USDgoGYW1vdW50GAEgASgEEgsKA3VybBgCIAEoCSJN",
          "CidDTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50UGFydHlKb2luUmVsYXkSEQoJ",
          "YWNjb3VudGlkGAEgASgNEg8KB2xvYmJ5aWQYAiABKAQilAEKJUNNc2dHQ0NT",
          "dHJpa2UxNV92Ml9DbGllbnRQYXJ0eVdhcm5pbmcSPQoHZW50cmllcxgBIAMo",
          "CzIsLkNNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnRQYXJ0eVdhcm5pbmcuRW50",
          "cnkaLAoFRW50cnkSEQoJYWNjb3VudGlkGAEgASgNEhAKCHdhcm50eXBlGAIg",
          "ASgNIksKI0NNc2dHQ0NTdHJpa2UxNV92Ml9TZXRFdmVudEZhdm9yaXRlEg8K",
          "B2V2ZW50aWQYASABKAQSEwoLaXNfZmF2b3JpdGUYAiABKAgiQgosQ01zZ0dD",
          "Q1N0cmlrZTE1X3YyX0dldEV2ZW50RmF2b3JpdGVzX1JlcXVlc3QSEgoKYWxs",
          "X2V2ZW50cxgBIAEoCCJyCi1DTXNnR0NDU3RyaWtlMTVfdjJfR2V0RXZlbnRG",
          "YXZvcml0ZXNfUmVzcG9uc2USEgoKYWxsX2V2ZW50cxgBIAEoCBIWCg5qc29u",
          "X2Zhdm9yaXRlcxgCIAEoCRIVCg1qc29uX2ZlYXR1cmVkGAMgASgJItUBCiND",
          "TXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50UGVyZlJlcG9ydBI7CgdlbnRyaWVz",
          "GAEgAygLMiouQ01zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudFBlcmZSZXBvcnQu",
          "RW50cnkacQoFRW50cnkSEwoLcGVyZmNvdW50ZXIYASABKA0SDgoGbGVuZ3Ro",
          "GAIgASgNEhEKCXJlZmVyZW5jZRgDIAEoDBIOCgZhY3R1YWwYBCABKAwSEAoI",
          "c291cmNlaWQYBSABKA0SDgoGc3RhdHVzGAYgASgNIlEKDENWRGlhZ25vc3Rp",
          "YxIKCgJpZBgBIAEoDRIQCghleHRlbmRlZBgCIAEoDRINCgV2YWx1ZRgDIAEo",
          "BBIUCgxzdHJpbmdfdmFsdWUYBCABKAki8AMKKUNNc2dHQ0NTdHJpa2UxNV92",
          "Ml9DbGllbnRSZXBvcnRWYWxpZGF0aW9uEhMKC2ZpbGVfcmVwb3J0GAEgASgJ",
          "EhQKDGNvbW1hbmRfbGluZRgCIAEoCRITCgt0b3RhbF9maWxlcxgDIAEoDRIW",
          "Cg5pbnRlcm5hbF9lcnJvchgEIAEoDRISCgp0cnVzdF90aW1lGAUgASgNEhUK",
          "DWNvdW50X3BlbmRpbmcYBiABKA0SFwoPY291bnRfY29tcGxldGVkGAcgASgN",
          "EhIKCnByb2Nlc3NfaWQYCCABKA0SEQoJb3N2ZXJzaW9uGAkgASgFEhsKE2Ns",
          "aWVudHJlcG9ydHZlcnNpb24YCiABKA0SEQoJc3RhdHVzX2lkGAsgASgNEhMK",
          "C2RpYWdub3N0aWMxGAwgASgNEhMKC2RpYWdub3N0aWMyGA0gASgEEhMKC2Rp",
          "YWdub3N0aWMzGA4gASgEEhgKEGxhc3RfbGF1bmNoX2RhdGEYDyABKAkSFAoM",
          "cmVwb3J0X2NvdW50GBAgASgNEhMKC2NsaWVudF90aW1lGBEgASgEEhMKC2Rp",
          "YWdub3N0aWM0GBIgASgEEhMKC2RpYWdub3N0aWM1GBMgASgEEiIKC2RpYWdu",
          "b3N0aWNzGBQgAygLMg0uQ1ZEaWFnbm9zdGljIqgCCixDTXNnR0NDU3RyaWtl",
          "MTVfdjJfR0MyQ2xpZW50UmVmdXNlU2VjdXJlTW9kZRITCgtmaWxlX3JlcG9y",
          "dBgBIAEoCRIbChNvZmZlcl9pbnNlY3VyZV9tb2RlGAIgASgIEhkKEW9mZmVy",
          "X3NlY3VyZV9tb2RlGAMgASgIEhgKEHNob3dfdW5zaWduZWRfdWkYBCABKAgS",
          "EQoJa2lja191c2VyGAUgASgIEhcKD3Nob3dfdHJ1c3RlZF91aRgGIAEoCBIg",
          "ChhzaG93X3dhcm5pbmdfbm90X3RydXN0ZWQYByABKAgSIgoac2hvd193YXJu",
          "aW5nX25vdF90cnVzdGVkXzIYCCABKAgSHwoXZmlsZXNfcHJldmVudGVkX3Ry",
          "dXN0ZWQYCSABKAkiVAotQ01zZ0dDQ1N0cmlrZTE1X3YyX0dDMkNsaWVudFJl",
          "cXVlc3RWYWxpZGF0aW9uEhMKC2Z1bGxfcmVwb3J0GAEgASgIEg4KBm1vZHVs",
          "ZRgCIAEoCSLLAQomQ01zZ0dDQ1N0cmlrZTE1X3YyX0dDMkNsaWVudEluaXRT",
          "eXN0ZW0SDAoEbG9hZBgBIAEoCBIMCgRuYW1lGAIgASgJEhIKCm91dHB1dG5h",
          "bWUYAyABKAkSEAoIa2V5X2RhdGEYBCABKAwSEAoIc2hhX2hhc2gYBSABKAwS",
          "DgoGY29va2llGAYgASgFEhAKCG1hbmlmZXN0GAcgASgJEhYKDnN5c3RlbV9w",
          "YWNrYWdlGAggASgMEhMKC2xvYWRfc3lzdGVtGAkgASgIIqUCCi9DTXNnR0ND",
          "U3RyaWtlMTVfdjJfR0MyQ2xpZW50SW5pdFN5c3RlbV9SZXNwb25zZRIPCgdz",
          "dWNjZXNzGAEgASgIEhIKCmRpYWdub3N0aWMYAiABKAkSEAoIc2hhX2hhc2gY",
          "AyABKAwSEAoIcmVzcG9uc2UYBCABKAUSEwoLZXJyb3JfY29kZTEYBSABKAUS",
          "EwoLZXJyb3JfY29kZTIYBiABKAUSDgoGaGFuZGxlGAcgASgDEkUKDGVpbml0",
          "X3Jlc3VsdBgIIAEoDjISLkVJbml0U3lzdGVtUmVzdWx0OhtrX0VJbml0U3lz",
          "dGVtUmVzdWx0X0ludmFsaWQSEwoLYXV4X3N5c3RlbTEYCSABKAUSEwoLYXV4",
          "X3N5c3RlbTIYCiABKAUiUAovQ01zZ0dDQ1N0cmlrZTE1X3YyX1NldFBsYXll",
          "ckxlYWRlcmJvYXJkU2FmZU5hbWUSHQoVbGVhZGVyYm9hcmRfc2FmZV9uYW1l",
          "GAEgASgJIiUKI0NNc2dSZXF1ZXN0UmVjdXJyaW5nTWlzc2lvblNjaGVkdWxl",
          "IqEBChpDTXNnUmVjdXJyaW5nTWlzc2lvblNjaGVtYRJBCghtaXNzaW9ucxgB",
          "IAMoCzIvLkNNc2dSZWN1cnJpbmdNaXNzaW9uU2NoZW1hLk1pc3Npb25UZW1w",
          "bGF0ZUxpc3QaQAoTTWlzc2lvblRlbXBsYXRlTGlzdBIOCgZwZXJpb2QYASAB",
          "KA0SGQoRbWlzc2lvbl90ZW1wbGF0ZXMYAiADKAwqySoKCkVDc2dvR0NNc2cS",
          "HgoZa19FTXNnR0NDU3RyaWtlMTVfdjJfQmFzZRCMRxIqCiVrX0VNc2dHQ0NT",
          "dHJpa2UxNV92Ml9NYXRjaG1ha2luZ1N0YXJ0EI1HEikKJGtfRU1zZ0dDQ1N0",
          "cmlrZTE1X3YyX01hdGNobWFraW5nU3RvcBCORxI2CjFrX0VNc2dHQ0NTdHJp",
          "a2UxNV92Ml9NYXRjaG1ha2luZ0NsaWVudDJTZXJ2ZXJQaW5nEI9HEjQKL2tf",
          "RU1zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nR0MyQ2xpZW50VXBkYXRl",
          "EJBHEj4KOWtfRU1zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nU2VydmVy",
          "UmVzZXJ2YXRpb25SZXNwb25zZRCSRxI1CjBrX0VNc2dHQ0NTdHJpa2UxNV92",
          "Ml9NYXRjaG1ha2luZ0dDMkNsaWVudFJlc2VydmUQk0cSMwoua19FTXNnR0ND",
          "U3RyaWtlMTVfdjJfTWF0Y2htYWtpbmdDbGllbnQyR0NIZWxsbxCVRxIzCi5r",
          "X0VNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1ha2luZ0dDMkNsaWVudEhlbGxv",
          "EJZHEjUKMGtfRU1zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nR0MyQ2xp",
          "ZW50QWJhbmRvbhCYRxI6CjVrX0VNc2dHQ0NTdHJpa2UxNV92Ml9NYXRjaG1h",
          "a2luZ09wZXJhdG9yMkdDQmxvZ1VwZGF0ZRCdRxI6CjVrX0VNc2dHQ0NTdHJp",
          "a2UxNV92Ml9TZXJ2ZXJOb3RpZmljYXRpb25Gb3JVc2VyUGVuYWx0eRCeRxIs",
          "CidrX0VNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnRSZXBvcnRQbGF5ZXIQn0cS",
          "LAona19FTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50UmVwb3J0U2VydmVyEKBH",
          "Ei0KKGtfRU1zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudENvbW1lbmRQbGF5ZXIQ",
          "oUcSLgopa19FTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50UmVwb3J0UmVzcG9u",
          "c2UQokcSMgota19FTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50Q29tbWVuZFBs",
          "YXllclF1ZXJ5EKNHEjoKNWtfRU1zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudENv",
          "bW1lbmRQbGF5ZXJRdWVyeVJlc3BvbnNlEKRHEigKI2tfRU1zZ0dDQ1N0cmlr",
          "ZTE1X3YyX1dhdGNoSW5mb1VzZXJzEKZHEjUKMGtfRU1zZ0dDQ1N0cmlrZTE1",
          "X3YyX0NsaWVudFJlcXVlc3RQbGF5ZXJzUHJvZmlsZRCnRxIoCiNrX0VNc2dH",
          "Q0NTdHJpa2UxNV92Ml9QbGF5ZXJzUHJvZmlsZRCoRxIzCi5rX0VNc2dHQ0NT",
          "dHJpa2UxNV92Ml9QbGF5ZXJPdmVyd2F0Y2hDYXNlVXBkYXRlEKtHEjcKMmtf",
          "RU1zZ0dDQ1N0cmlrZTE1X3YyX1BsYXllck92ZXJ3YXRjaENhc2VBc3NpZ25t",
          "ZW50EKxHEjMKLmtfRU1zZ0dDQ1N0cmlrZTE1X3YyX1BsYXllck92ZXJ3YXRj",
          "aENhc2VTdGF0dXMQrUcSKgola19FTXNnR0NDU3RyaWtlMTVfdjJfR0MyQ2xp",
          "ZW50VGV4dE1zZxCuRxIqCiVrX0VNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnQy",
          "R0NUZXh0TXNnEK9HEjAKK2tfRU1zZ0dDQ1N0cmlrZTE1X3YyX01hdGNoRW5k",
          "UnVuUmV3YXJkRHJvcHMQsEcSOQo0a19FTXNnR0NDU3RyaWtlMTVfdjJfTWF0",
          "Y2hFbmRSZXdhcmREcm9wc05vdGlmaWNhdGlvbhCxRxI4CjNrX0VNc2dHQ0NT",
          "dHJpa2UxNV92Ml9DbGllbnRSZXF1ZXN0V2F0Y2hJbmZvRnJpZW5kczIQskcS",
          "Iwoea19FTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2hMaXN0ELNHEjoKNWtfRU1z",
          "Z0dDQ1N0cmlrZTE1X3YyX01hdGNoTGlzdFJlcXVlc3RDdXJyZW50TGl2ZUdh",
          "bWVzELRHEjkKNGtfRU1zZ0dDQ1N0cmlrZTE1X3YyX01hdGNoTGlzdFJlcXVl",
          "c3RSZWNlbnRVc2VyR2FtZXMQtUcSNAova19FTXNnR0NDU3RyaWtlMTVfdjJf",
          "R0MyU2VydmVyUmVzZXJ2YXRpb25VcGRhdGUQtkcSOAoza19FTXNnR0NDU3Ry",
          "aWtlMTVfdjJfQ2xpZW50VmFyVmFsdWVOb3RpZmljYXRpb25JbmZvELhHEjkK",
          "NGtfRU1zZ0dDQ1N0cmlrZTE1X3YyX01hdGNoTGlzdFJlcXVlc3RUb3VybmFt",
          "ZW50R2FtZXMQukcSNgoxa19FTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2hMaXN0",
          "UmVxdWVzdEZ1bGxHYW1lSW5mbxC7RxIxCixrX0VNc2dHQ0NTdHJpa2UxNV92",
          "Ml9HaWZ0c0xlYWRlcmJvYXJkUmVxdWVzdBC8RxIyCi1rX0VNc2dHQ0NTdHJp",
          "a2UxNV92Ml9HaWZ0c0xlYWRlcmJvYXJkUmVzcG9uc2UQvUcSOAoza19FTXNn",
          "R0NDU3RyaWtlMTVfdjJfU2VydmVyVmFyVmFsdWVOb3RpZmljYXRpb25JbmZv",
          "EL5HEjAKK2tfRU1zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudFN1Ym1pdFN1cnZl",
          "eVZvdGUQwEcSMQosa19FTXNnR0NDU3RyaWtlMTVfdjJfU2VydmVyMkdDQ2xp",
          "ZW50VmFsaWRhdGUQwUcSOQo0a19FTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2hM",
          "aXN0UmVxdWVzdExpdmVHYW1lRm9yVXNlchDCRxI+CjlrX0VNc2dHQ0NTdHJp",
          "a2UxNV92Ml9DbGllbnQyR0NFY29uUHJldmlld0RhdGFCbG9ja1JlcXVlc3QQ",
          "xEcSPwo6a19FTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50MkdDRWNvblByZXZp",
          "ZXdEYXRhQmxvY2tSZXNwb25zZRDFRxIwCitrX0VNc2dHQ0NTdHJpa2UxNV92",
          "Ml9BY2NvdW50UHJpdmFjeVNldHRpbmdzEMZHEisKJmtfRU1zZ0dDQ1N0cmlr",
          "ZTE1X3YyX1NldE15QWN0aXZpdHlJbmZvEMdHEj8KOmtfRU1zZ0dDQ1N0cmlr",
          "ZTE1X3YyX01hdGNoTGlzdFJlcXVlc3RUb3VybmFtZW50UHJlZGljdGlvbnMQ",
          "yEcSPgo5a19FTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2hMaXN0VXBsb2FkVG91",
          "cm5hbWVudFByZWRpY3Rpb25zEMlHEiYKIWtfRU1zZ0dDQ1N0cmlrZTE1X3Yy",
          "X0RyYWZ0U3VtbWFyeRDKRxI1CjBrX0VNc2dHQ0NTdHJpa2UxNV92Ml9DbGll",
          "bnRSZXF1ZXN0Sm9pbkZyaWVuZERhdGEQy0cSNQowa19FTXNnR0NDU3RyaWtl",
          "MTVfdjJfQ2xpZW50UmVxdWVzdEpvaW5TZXJ2ZXJEYXRhEMxHEjEKLGtfRU1z",
          "Z0dDQ1N0cmlrZTE1X3YyX0dDMkNsaWVudFRvdXJuYW1lbnRJbmZvEM9HEiIK",
          "HWtfRU1zZ0dDX0dsb2JhbEdhbWVfU3Vic2NyaWJlENBHEiQKH2tfRU1zZ0dD",
          "X0dsb2JhbEdhbWVfVW5zdWJzY3JpYmUQ0UcSHQoYa19FTXNnR0NfR2xvYmFs",
          "R2FtZV9QbGF5ENJHEiwKJ2tfRU1zZ0dDQ1N0cmlrZTE1X3YyX0Fja25vd2xl",
          "ZGdlUGVuYWx0eRDTRxI2CjFrX0VNc2dHQ0NTdHJpa2UxNV92Ml9DbGllbnQy",
          "R0NSZXF1ZXN0UHJlc3RpZ2VDb2luENRHEi4KKWtfRU1zZ0dDQ1N0cmlrZTE1",
          "X3YyX0dDMkNsaWVudEdsb2JhbFN0YXRzENVHEi8KKmtfRU1zZ0dDQ1N0cmlr",
          "ZTE1X3YyX0NsaWVudDJHQ1N0cmVhbVVubG9jaxDWRxIyCi1rX0VNc2dHQ0NT",
          "dHJpa2UxNV92Ml9GYW50YXN5UmVxdWVzdENsaWVudERhdGEQ10cSMQosa19F",
          "TXNnR0NDU3RyaWtlMTVfdjJfRmFudGFzeVVwZGF0ZUNsaWVudERhdGEQ2EcS",
          "Nwoya19FTXNnR0NDU3RyaWtlMTVfdjJfR0NUb0NsaWVudFN0ZWFtZGF0YWdy",
          "YW1UaWNrZXQQ2UcSMQosa19FTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50VG9H",
          "Q1JlcXVlc3RUaWNrZXQQ2kcSMgota19FTXNnR0NDU3RyaWtlMTVfdjJfQ2xp",
          "ZW50VG9HQ1JlcXVlc3RFbGV2YXRlENtHEiQKH2tfRU1zZ0dDQ1N0cmlrZTE1",
          "X3YyX0dsb2JhbENoYXQQ3EcSLgopa19FTXNnR0NDU3RyaWtlMTVfdjJfR2xv",
          "YmFsQ2hhdF9TdWJzY3JpYmUQ3UcSMAora19FTXNnR0NDU3RyaWtlMTVfdjJf",
          "R2xvYmFsQ2hhdF9VbnN1YnNjcmliZRDeRxIrCiZrX0VNc2dHQ0NTdHJpa2Ux",
          "NV92Ml9DbGllbnRBdXRoS2V5Q29kZRDfRxIoCiNrX0VNc2dHQ0NTdHJpa2Ux",
          "NV92Ml9Hb3R2U3luY1BhY2tldBDgRxIvCiprX0VNc2dHQ0NTdHJpa2UxNV92",
          "Ml9DbGllbnRQbGF5ZXJEZWNhbFNpZ24Q4UcSLwoqa19FTXNnR0NDU3RyaWtl",
          "MTVfdjJfQ2xpZW50TG9nb25GYXRhbEVycm9yEONHEikKJGtfRU1zZ0dDQ1N0",
          "cmlrZTE1X3YyX0NsaWVudFBvbGxTdGF0ZRDkRxIoCiNrX0VNc2dHQ0NTdHJp",
          "a2UxNV92Ml9QYXJ0eV9SZWdpc3RlchDlRxIqCiVrX0VNc2dHQ0NTdHJpa2Ux",
          "NV92Ml9QYXJ0eV9VbnJlZ2lzdGVyEOZHEiYKIWtfRU1zZ0dDQ1N0cmlrZTE1",
          "X3YyX1BhcnR5X1NlYXJjaBDnRxImCiFrX0VNc2dHQ0NTdHJpa2UxNV92Ml9Q",
          "YXJ0eV9JbnZpdGUQ6EcSMAora19FTXNnR0NDU3RyaWtlMTVfdjJfQWNjb3Vu",
          "dF9SZXF1ZXN0Q29QbGF5cxDpRxIsCidrX0VNc2dHQ0NTdHJpa2UxNV92Ml9D",
          "bGllbnRHQ1JhbmtVcGRhdGUQ6kcSLQooa19FTXNnR0NDU3RyaWtlMTVfdjJf",
          "Q2xpZW50UmVxdWVzdE9mZmVycxDrRxIuCilrX0VNc2dHQ0NTdHJpa2UxNV92",
          "Ml9DbGllbnRBY2NvdW50QmFsYW5jZRDsRxIuCilrX0VNc2dHQ0NTdHJpa2Ux",
          "NV92Ml9DbGllbnRQYXJ0eUpvaW5SZWxheRDtRxIsCidrX0VNc2dHQ0NTdHJp",
          "a2UxNV92Ml9DbGllbnRQYXJ0eVdhcm5pbmcQ7kcSKgola19FTXNnR0NDU3Ry",
          "aWtlMTVfdjJfU2V0RXZlbnRGYXZvcml0ZRDwRxIzCi5rX0VNc2dHQ0NTdHJp",
          "a2UxNV92Ml9HZXRFdmVudEZhdm9yaXRlc19SZXF1ZXN0EPFHEioKJWtfRU1z",
          "Z0dDQ1N0cmlrZTE1X3YyX0NsaWVudFBlcmZSZXBvcnQQ8kcSNAova19FTXNn",
          "R0NDU3RyaWtlMTVfdjJfR2V0RXZlbnRGYXZvcml0ZXNfUmVzcG9uc2UQ80cS",
          "Lwoqa19FTXNnR0NDU3RyaWtlMTVfdjJfQ2xpZW50UmVxdWVzdFNvdXZlbmly",
          "EPRHEjAKK2tfRU1zZ0dDQ1N0cmlrZTE1X3YyX0NsaWVudFJlcG9ydFZhbGlk",
          "YXRpb24Q9UcSMwoua19FTXNnR0NDU3RyaWtlMTVfdjJfR0MyQ2xpZW50UmVm",
          "dXNlU2VjdXJlTW9kZRD2RxI0Ci9rX0VNc2dHQ0NTdHJpa2UxNV92Ml9HQzJD",
          "bGllbnRSZXF1ZXN0VmFsaWRhdGlvbhD3RxIzCi5rX0VNc2dHQ0NTdHJpa2Ux",
          "NV92Ml9DbGllbnRSZWRlZW1NaXNzaW9uUmV3YXJkEPlHEiYKIWtfRU1zZ0dD",
          "Q1N0cmlrZTE1X0NsaWVudERlZXBTdGF0cxD6RxIyCi1rX0VNc2dHQ0NTdHJp",
          "a2UxNV9TdGFydEFncmVlbWVudFNlc3Npb25JbkdhbWUQ+0cSLQooa19FTXNn",
          "R0NDU3RyaWtlMTVfdjJfR0MyQ2xpZW50SW5pdFN5c3RlbRD8RxI2CjFrX0VN",
          "c2dHQ0NTdHJpa2UxNV92Ml9HQzJDbGllbnRJbml0U3lzdGVtX1Jlc3BvbnNl",
          "EP1HEicKImtfRU1zZ0dDQ1N0cmlrZTE1X3YyX1ByaXZhdGVRdWV1ZXMQ/kcS",
          "OQo0a19FTXNnR0NDU3RyaWtlMTVfdjJfTWF0Y2hMaXN0VG91cm5hbWVudE9w",
          "ZXJhdG9yTWdtdBD/RxIoCiNrX0VNc2dHQ0NTdHJpa2UxNV92Ml9CZXRhRW5y",
          "b2xsbWVudBCBSBI2CjFrX0VNc2dHQ0NTdHJpa2UxNV92Ml9TZXRQbGF5ZXJM",
          "ZWFkZXJib2FyZFNhZmVOYW1lEIJIEjAKK2tfRU1zZ0dDQ1N0cmlrZTE1X3Yy",
          "X0NsaWVudFJlZGVlbUZyZWVSZXdhcmQQg0gSLQooa19FTXNnR0NDU3RyaWtl",
          "MTVfdjJfQ2xpZW50TmV0d29ya0NvbmZpZxCESBIvCiprX0VNc2dHQ0NTdHJp",
          "a2UxNV92Ml9HQzJDbGllbnROb3RpZnlYUFNob3AQhUgSMgota19FTXNnR0ND",
          "U3RyaWtlMTVfdjJfQ2xpZW50MkdjQWNrWFBTaG9wVHJhY2tzEIZIEjkKNGtf",
          "RU1zZ0dDQ1N0cmlrZTE1X3YyX01hdGNobWFraW5nR0MyQ2xpZW50U2VhcmNo",
          "U3RhdHMQh0gSLgopa19FTXNnR0NDU3RyaWtlMTVfdjJfUHJlbWllclNlYXNv",
          "blN1bW1hcnkQiEgSOQo0a19FTXNnR0NDU3RyaWtlMTVfdjJfUmVxdWVzdFJl",
          "Y3VycmluZ01pc3Npb25TY2hlZHVsZRCJSBIwCitrX0VNc2dHQ0NTdHJpa2Ux",
          "NV92Ml9SZWN1cnJpbmdNaXNzaW9uU2NoZW1hEIpIEjEKLGtfRU1zZ0dDQ1N0",
          "cmlrZTE1X3YyX1ZvbGF0aWxlSXRlbUNsYWltUmV3YXJkEItIKpgBChJFQ3Nn",
          "b1N0ZWFtVXNlclN0YXQSJgoia19FQ3Nnb1N0ZWFtVXNlclN0YXRfWHBFYXJu",
          "ZWRHYW1lcxABEi0KKWtfRUNzZ29TdGVhbVVzZXJTdGF0X01hdGNoV2luc0Nv",
          "bXBldGl0aXZlEAISKwona19FQ3Nnb1N0ZWFtVXNlclN0YXRfU3Vydml2ZWRE",
          "YW5nZXJab25lEAMqSgoJUXVlc3RUeXBlEhoKFmtfRVF1ZXN0VHlwZV9PcGVy",
          "YXRpb24QARIhCh1rX0VRdWVzdFR5cGVfUmVjdXJyaW5nTWlzc2lvbhACKqEB",
          "ChdFQ2xpZW50UmVwb3J0aW5nVmVyc2lvbhIoCiRrX0VDbGllbnRSZXBvcnRp",
          "bmdWZXJzaW9uX09sZFZlcnNpb24QABIpCiVrX0VDbGllbnRSZXBvcnRpbmdW",
          "ZXJzaW9uX0JldGFWZXJzaW9uEAESMQota19FQ2xpZW50UmVwb3J0aW5nVmVy",
          "c2lvbl9TdXBwb3J0c1RydXN0ZWRNb2RlEAIqvgIKEUVJbml0U3lzdGVtUmVz",
          "dWx0Eh8KG2tfRUluaXRTeXN0ZW1SZXN1bHRfSW52YWxpZBAAEh8KG2tfRUlu",
          "aXRTeXN0ZW1SZXN1bHRfU3VjY2VzcxABEhwKGGtfRUluaXRTeXN0ZW1SZXN1",
          "bHRfTm9uZRACEiAKHGtfRUluaXRTeXN0ZW1SZXN1bHRfTm90Rm91bmQQAxIg",
          "ChxrX0VJbml0U3lzdGVtUmVzdWx0X0V4aXN0aW5nEAQSIgoea19FSW5pdFN5",
          "c3RlbVJlc3VsdF9GYWlsZWRPcGVuEAUSIAoca19FSW5pdFN5c3RlbVJlc3Vs",
          "dF9NaXNtYXRjaBAGEiIKHmtfRUluaXRTeXN0ZW1SZXN1bHRfRmFpbGVkSW5p",
          "dBAHEhsKF2tfRUluaXRTeXN0ZW1SZXN1bHRfTWF4EAg="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesReflection.Descriptor, global::EngineGcmessagesReflection.Descriptor, global::GcsdkGcmessagesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ECsgoGCMsg), typeof(global::ECsgoSteamUserStat), typeof(global::QuestType), typeof(global::EClientReportingVersion), typeof(global::EInitSystemResult), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GameServerPing), global::GameServerPing.Parser, new[]{ "Ping", "Ip", "Instances" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DataCenterPing), global::DataCenterPing.Parser, new[]{ "DataCenterId", "Ping" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DetailedSearchStatistic), global::DetailedSearchStatistic.Parser, new[]{ "GameType", "SearchTimeAvg", "PlayersSearching" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TournamentPlayer), global::TournamentPlayer.Parser, new[]{ "AccountId", "PlayerNick", "PlayerName", "PlayerDob", "PlayerFlag", "PlayerLocation", "PlayerDesc" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TournamentTeam), global::TournamentTeam.Parser, new[]{ "TeamId", "TeamTag", "TeamFlag", "TeamName", "Players" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TournamentEvent), global::TournamentEvent.Parser, new[]{ "EventId", "EventTag", "EventName", "EventTimeStart", "EventTimeEnd", "EventPublic", "EventStageId", "EventStageName", "ActiveSectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GlobalStatistics), global::GlobalStatistics.Parser, new[]{ "PlayersOnline", "ServersOnline", "PlayersSearching", "ServersAvailable", "OngoingMatches", "SearchTimeAvg", "SearchStatistics", "MainPostUrl", "RequiredAppidVersion", "PricesheetVersion", "TwitchStreamsVersion", "ActiveTournamentEventid", "ActiveSurveyId", "Rtime32Cur", "RequiredAppidVersion2" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OperationalStatisticDescription), global::OperationalStatisticDescription.Parser, new[]{ "Name", "Idkey" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OperationalStatisticElement), global::OperationalStatisticElement.Parser, new[]{ "Idkey", "Values" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OperationalStatisticsPacket), global::OperationalStatisticsPacket.Parser, new[]{ "Packetid", "Mstimestamp", "Values" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OperationalVarValue), global::OperationalVarValue.Parser, new[]{ "Name", "Ivalue", "Fvalue", "Svalue" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerRankingInfo), global::PlayerRankingInfo.Parser, new[]{ "AccountId", "RankId", "Wins", "RankChange", "RankTypeId", "TvControl", "RankWindowStats", "LeaderboardName", "RankIfWin", "RankIfLose", "RankIfTie", "PerMapRank", "LeaderboardNameStatus", "HighestRank", "RankExpiry" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PlayerRankingInfo.Types.PerMapRank), global::PlayerRankingInfo.Types.PerMapRank.Parser, new[]{ "MapId", "RankId", "Wins" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerCommendationInfo), global::PlayerCommendationInfo.Parser, new[]{ "CmdFriendly", "CmdTeaching", "CmdLeader" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerMedalsInfo), global::PlayerMedalsInfo.Parser, new[]{ "DisplayItemsDefidx", "FeaturedDisplayItemDefidx" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AccountActivity), global::AccountActivity.Parser, new[]{ "Activity", "Mode", "Map", "Matchid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TournamentMatchSetup), global::TournamentMatchSetup.Parser, new[]{ "EventId", "TeamIdCt", "TeamIdT", "EventStageId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerHltvInfo), global::ServerHltvInfo.Parser, new[]{ "TvUdpPort", "TvWatchKey", "TvSlots", "TvClients", "TvProxies", "TvTime", "GameType", "GameMapgroup", "GameMap", "TvMasterSteamid", "TvLocalSlots", "TvLocalClients", "TvLocalProxies", "TvRelaySlots", "TvRelayClients", "TvRelayProxies", "TvRelayAddress", "TvRelayPort", "TvRelaySteamid", "Flags" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IpAddressMask), global::IpAddressMask.Parser, new[]{ "A", "B", "C", "D", "Bits", "Token" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgCsgoSteamUserStatChange), global::CMsgCsgoSteamUserStatChange.Parser, new[]{ "Ecsgosteamuserstat", "Delta", "Absolute" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::XpProgressData), global::XpProgressData.Parser, new[]{ "XpPoints", "XpCategory" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MatchEndItemUpdates), global::MatchEndItemUpdates.Parser, new[]{ "ItemId", "ItemAttrDefidx", "ItemAttrDeltaValue" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ScoreLeaderboardData), global::ScoreLeaderboardData.Parser, new[]{ "QuestId", "Score", "Accountentries", "Matchentries", "LeaderboardName" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ScoreLeaderboardData.Types.Entry), global::ScoreLeaderboardData.Types.Entry.Parser, new[]{ "Tag", "Val" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ScoreLeaderboardData.Types.AccountEntries), global::ScoreLeaderboardData.Types.AccountEntries.Parser, new[]{ "Accountid", "Entries" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerQuestData), global::PlayerQuestData.Parser, new[]{ "QuesterAccountId", "QuestItemData", "XpProgressData", "TimePlayed", "MmGameMode", "ItemUpdates", "OperationPointsEligible", "Userstatchanges" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PlayerQuestData.Types.QuestItemData), global::PlayerQuestData.Types.QuestItemData.Parser, new[]{ "QuestId", "QuestNormalPointsEarned", "QuestBonusPointsEarned", "QuestNormalPointsRequired", "QuestRewardXp", "QuestPeriod", "QuestType" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeepPlayerStatsEntry), global::DeepPlayerStatsEntry.Parser, new[]{ "Accountid", "MatchId", "MmGameMode", "Mapid", "BStartingCt", "MatchOutcome", "RoundsWon", "RoundsLost", "StatScore", "StatDeaths", "StatMvps", "EnemyKills", "EnemyHeadshots", "Enemy2Ks", "Enemy3Ks", "Enemy4Ks", "TotalDamage", "EngagementsEntryCount", "EngagementsEntryWins", "Engagements1V1Count", "Engagements1V1Wins", "Engagements1V2Count", "Engagements1V2Wins", "UtilityCount", "UtilitySuccess", "FlashCount", "FlashSuccess", "Mates" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeepPlayerMatchEvent), global::DeepPlayerMatchEvent.Parser, new[]{ "Accountid", "MatchId", "EventId", "EventType", "BPlayingCt", "UserPosX", "UserPosY", "UserPosZ", "UserDefidx", "OtherPosX", "OtherPosY", "OtherPosZ", "OtherDefidx", "EventData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGC_ServerQuestUpdateData), global::CMsgGC_ServerQuestUpdateData.Parser, new[]{ "PlayerQuestData", "BinaryData", "MmGameMode", "Missionlbsdata", "Flags" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm), global::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm.Parser, new[]{ "Token", "Stamp", "Exchange", "Retry" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GC2ServerReservationUpdate), global::CMsgGCCStrike15_v2_GC2ServerReservationUpdate.Parser, new[]{ "ViewersExternalTotal", "ViewersExternalSteam" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingStart), global::CMsgGCCStrike15_v2_MatchmakingStart.Parser, new[]{ "AccountIds", "GameType", "TicketData", "ClientVersion", "TournamentMatch", "PrimeOnly", "TvControl", "LobbyId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingStop), global::CMsgGCCStrike15_v2_MatchmakingStop.Parser, new[]{ "Abandon" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note), global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note.Parser, new[]{ "Type", "RegionId", "RegionR", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing), global::CMsgGCCStrike15_v2_MatchmakingClient2ServerPing.Parser, new[]{ "Gameserverpings", "OffsetIndex", "FinalBatch", "DataCenterPings", "MaxPing", "TestToken", "SearchKey", "Notes", "DebugMessage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate), global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate.Parser, new[]{ "Matchmaking", "WaitingAccountIdSessions", "Error", "OngoingmatchAccountIdSessions", "GlobalStats", "FailpingAccountIdSessions", "PenaltyAccountIdSessions", "FailreadyAccountIdSessions", "VacbannedAccountIdSessions", "ServerIpaddressMask", "Notes", "PenaltyAccountIdSessionsGreen", "InsufficientlevelSessions", "VsncheckAccountIdSessions", "LauncherMismatchSessions", "InsecureAccountIdSessions" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDataGCCStrike15_v2_TournamentMatchDraft), global::CDataGCCStrike15_v2_TournamentMatchDraft.Parser, new[]{ "EventId", "EventStageId", "TeamId0", "TeamId1", "MapsCount", "MapsCurrent", "TeamIdStart", "TeamIdVeto1", "TeamIdPickn", "Drafts", "VoteMapid0", "VoteMapid1", "VoteMapid2", "VoteMapid3", "VoteMapid4", "VoteMapid5", "VoteStartingSide", "VotePhase", "VotePhaseStart", "VotePhaseLength" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CDataGCCStrike15_v2_TournamentMatchDraft.Types.Entry), global::CDataGCCStrike15_v2_TournamentMatchDraft.Types.Entry.Parser, new[]{ "Mapid", "TeamIdCt" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CPreMatchInfoData), global::CPreMatchInfoData.Parser, new[]{ "PredictionsPct", "Draft", "Stats", "Wins" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CPreMatchInfoData.Types.TeamStats), global::CPreMatchInfoData.Types.TeamStats.Parser, new[]{ "MatchInfoIdxtxt", "MatchInfoTxt", "MatchInfoTeams" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve), global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.Parser, new[]{ "AccountIds", "GameType", "MatchId", "ServerVersion", "Flags", "Rankings", "EncryptionKey", "EncryptionKeyPub", "PartyIds", "Whitelist", "TvMasterSteamid", "TournamentEvent", "TournamentTeams", "TournamentCastersAccountIds", "TvRelaySteamid", "PreMatchData", "TvControl", "OpVarValues", "SocacheControl", "TeammateColors", "MatchIdAdditional" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse), global::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse.Parser, new[]{ "Reservationid", "Reservation", "Map", "GcReservationSent", "ServerVersion", "TvInfo", "RewardPlayerAccounts", "IdlePlayerAccounts", "RewardItemAttrDefIdx", "RewardItemAttrValue", "RewardItemAttrRewardIdx", "RewardDropList", "TournamentTag", "LegacySteamdatagramPort", "SteamdatagramRouting", "TestToken", "Flags", "SystemLoad", "CpusOnline" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve), global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve.Parser, new[]{ "Serverid", "DirectUdpIp", "DirectUdpPort", "Reservationid", "Reservation", "Map", "ServerAddress", "GsPing", "GsLocationId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats), global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Parser, new[]{ "Reservationid", "Reservation", "Map", "Round", "Kills", "Assists", "Deaths", "Scores", "Pings", "RoundResult", "MatchResult", "TeamScores", "Confirm", "ReservationStage", "MatchDuration", "EnemyKills", "EnemyHeadshots", "Enemy3Ks", "Enemy4Ks", "Enemy5Ks", "Mvps", "SpectatorsCount", "SpectatorsCountTv", "SpectatorsCountLnk", "EnemyKillsAgg", "DropInfo", "BSwitchedTeams", "Enemy2Ks", "PlayerSpawned", "TeamSpawnCount", "MaxRounds", "MapId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Types.DropInfo), global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Types.DropInfo.Parser, new[]{ "AccountMvp" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingClient2GCHello), global::CMsgGCCStrike15_v2_MatchmakingClient2GCHello.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello), global::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello.Parser, new[]{ "AccountId", "Ongoingmatch", "GlobalStats", "PenaltySeconds", "PenaltyReason", "VacBanned", "Ranking", "Commendation", "Medals", "MyCurrentEvent", "MyCurrentEventTeams", "MyCurrentTeam", "MyCurrentEventStages", "SurveyVote", "Activity", "PlayerLevel", "PlayerCurXp", "PlayerXpBonusFlags", "Rankings", "Owcaseid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_AccountPrivacySettings), global::CMsgGCCStrike15_v2_AccountPrivacySettings.Parser, new[]{ "Settings" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_AccountPrivacySettings.Types.Setting), global::CMsgGCCStrike15_v2_AccountPrivacySettings.Types.Setting.Parser, new[]{ "SettingType", "SettingValue" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon), global::CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon.Parser, new[]{ "AccountId", "AbandonedMatch", "PenaltySeconds", "PenaltyReason" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientGCRankUpdate), global::CMsgGCCStrike15_v2_ClientGCRankUpdate.Parser, new[]{ "Rankings" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate), global::CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate.Parser, new[]{ "MainPostUrl" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty), global::CMsgGCCStrike15_v2_ServerNotificationForUserPenalty.Parser, new[]{ "AccountId", "Reason", "Seconds", "CommunicationCooldown" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientReportPlayer), global::CMsgGCCStrike15_v2_ClientReportPlayer.Parser, new[]{ "AccountId", "RptAimbot", "RptWallhack", "RptSpeedhack", "RptTeamharm", "RptTextabuse", "RptVoiceabuse", "MatchId", "ReportFromDemo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientCommendPlayer), global::CMsgGCCStrike15_v2_ClientCommendPlayer.Parser, new[]{ "AccountId", "MatchId", "Commendation", "Tokens" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientReportServer), global::CMsgGCCStrike15_v2_ClientReportServer.Parser, new[]{ "RptPoorperf", "RptAbusivemodels", "RptBadmotd", "RptListingabuse", "RptInventoryabuse", "MatchId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientReportResponse), global::CMsgGCCStrike15_v2_ClientReportResponse.Parser, new[]{ "ConfirmationId", "AccountId", "ServerIp", "ResponseType", "ResponseResult", "Tokens" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends), global::CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends.Parser, new[]{ "RequestId", "AccountIds", "Serverid", "Matchid", "ClientLauncher", "DataCenterPings" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WatchableMatchInfo), global::WatchableMatchInfo.Parser, new[]{ "ServerIp", "TvPort", "TvSpectators", "TvTime", "TvWatchPassword", "ClDecryptdataKey", "ClDecryptdataKeyPub", "GameType", "GameMapgroup", "GameMap", "ServerId", "MatchId", "ReservationId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientRequestJoinFriendData), global::CMsgGCCStrike15_v2_ClientRequestJoinFriendData.Parser, new[]{ "Version", "AccountId", "JoinToken", "JoinIpp", "Res", "Errormsg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientRequestJoinServerData), global::CMsgGCCStrike15_v2_ClientRequestJoinServerData.Parser, new[]{ "Version", "AccountId", "Serverid", "ServerIp", "ServerPort", "Res", "Errormsg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCstrike15_v2_ClientRedeemMissionReward), global::CMsgGCCstrike15_v2_ClientRedeemMissionReward.Parser, new[]{ "CampaignId", "RedeemId", "RedeemableBalance", "ExpectedCost", "BidControl" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCstrike15_v2_ClientRedeemFreeReward), global::CMsgGCCstrike15_v2_ClientRedeemFreeReward.Parser, new[]{ "GenerationTime", "RedeemableBalance", "Items" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded), global::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.Parser, new[]{ "XpProgressData", "AccountId", "CurrentXp", "CurrentLevel", "UpgradedDefidx", "OperationPointsAwarded", "FreeRewards", "XpTrailRemaining", "XpTrailXpNeeded", "XpTrailLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientNetworkConfig), global::CMsgGCCStrike15_v2_ClientNetworkConfig.Parser, new[]{ "Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_ClientDeepStats), global::CMsgGCCStrike15_ClientDeepStats.Parser, new[]{ "AccountId", "Range", "Matches" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsRange), global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsRange.Parser, new[]{ "Begin", "End", "Frozen" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsMatch), global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsMatch.Parser, new[]{ "Player", "Events" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_WatchInfoUsers), global::CMsgGCCStrike15_v2_WatchInfoUsers.Parser, new[]{ "RequestId", "AccountIds", "WatchableMatchInfos", "ExtendedTimeout" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientRequestPlayersProfile), global::CMsgGCCStrike15_v2_ClientRequestPlayersProfile.Parser, new[]{ "RequestIdDeprecated", "AccountIdsDeprecated", "AccountId", "RequestLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_PlayersProfile), global::CMsgGCCStrike15_v2_PlayersProfile.Parser, new[]{ "RequestId", "AccountProfiles" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_PremierSeasonSummary), global::CMsgGCCStrike15_v2_PremierSeasonSummary.Parser, new[]{ "AccountId", "SeasonId", "DataPerWeek", "DataPerMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerWeek), global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerWeek.Parser, new[]{ "WeekId", "RankId", "MatchesPlayed" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerMap), global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerMap.Parser, new[]{ "MapId", "Wins", "Ties", "Losses", "Rounds", "Kills", "Headshots", "Assists", "Deaths", "Mvps", "Rounds3K", "Rounds4K", "Rounds5K" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate), global::CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate.Parser, new[]{ "Caseid", "Suspectid", "Fractionid", "RptAimbot", "RptWallhack", "RptSpeedhack", "RptTeamharm", "Reason" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment), global::CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment.Parser, new[]{ "Caseid", "Caseurl", "Verdict", "Timestamp", "Throttleseconds", "Suspectid", "Fractionid", "Numrounds", "Fractionrounds", "Streakconvictions", "Reason" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus), global::CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus.Parser, new[]{ "Caseid", "Statusid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CClientHeaderOverwatchEvidence), global::CClientHeaderOverwatchEvidence.Parser, new[]{ "Accountid", "Caseid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GC2ClientTextMsg), global::CMsgGCCStrike15_v2_GC2ClientTextMsg.Parser, new[]{ "Id", "Type", "Payload" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Client2GCTextMsg), global::CMsgGCCStrike15_v2_Client2GCTextMsg.Parser, new[]{ "Id", "Args" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchEndRunRewardDrops), global::CMsgGCCStrike15_v2_MatchEndRunRewardDrops.Parser, new[]{ "Serverinfo", "MatchEndQuestData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CEconItemPreviewDataBlock), global::CEconItemPreviewDataBlock.Parser, new[]{ "Accountid", "Itemid", "Defindex", "Paintindex", "Rarity", "Quality", "Paintwear", "Paintseed", "Killeaterscoretype", "Killeatervalue", "Customname", "Stickers", "Inventory", "Origin", "Questid", "Dropreason", "Musicindex", "Entindex", "Petindex", "Keychains", "Style", "Variations", "UpgradeLevel" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CEconItemPreviewDataBlock.Types.Sticker), global::CEconItemPreviewDataBlock.Types.Sticker.Parser, new[]{ "Slot", "StickerId", "Wear", "Scale", "Rotation", "TintId", "OffsetX", "OffsetY", "OffsetZ", "Pattern", "HighlightReel" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification), global::CMsgGCCStrike15_v2_MatchEndRewardDropsNotification.Parser, new[]{ "Iteminfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgItemAcknowledged), global::CMsgItemAcknowledged.Parser, new[]{ "Iteminfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest), global::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest.Parser, new[]{ "ParamS", "ParamA", "ParamD", "ParamM" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse), global::CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse.Parser, new[]{ "Iteminfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames), global::CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser), global::CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser.Parser, new[]{ "Accountid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames), global::CMsgGCCStrike15_v2_MatchListRequestRecentUserGames.Parser, new[]{ "Accountid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchListRequestTournamentGames), global::CMsgGCCStrike15_v2_MatchListRequestTournamentGames.Parser, new[]{ "Eventid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo), global::CMsgGCCStrike15_v2_MatchListRequestFullGameInfo.Parser, new[]{ "Matchid", "Outcomeid", "Token" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDataGCCStrike15_v2_MatchInfo), global::CDataGCCStrike15_v2_MatchInfo.Parser, new[]{ "Matchid", "Matchtime", "Watchablematchinfo", "RoundstatsLegacy", "Roundstatsall" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDataGCCStrike15_v2_TournamentGroupTeam), global::CDataGCCStrike15_v2_TournamentGroupTeam.Parser, new[]{ "TeamId", "Score", "Correctpick" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDataGCCStrike15_v2_TournamentGroup), global::CDataGCCStrike15_v2_TournamentGroup.Parser, new[]{ "Groupid", "Name", "Desc", "PicksDeprecated", "Teams", "StageIds", "Picklockuntiltime", "Pickableteams", "PointsPerPick", "Picks" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CDataGCCStrike15_v2_TournamentGroup.Types.Picks), global::CDataGCCStrike15_v2_TournamentGroup.Types.Picks.Parser, new[]{ "Pickids" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDataGCCStrike15_v2_TournamentSection), global::CDataGCCStrike15_v2_TournamentSection.Parser, new[]{ "Sectionid", "Name", "Desc", "Groups" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDataGCCStrike15_v2_TournamentInfo), global::CDataGCCStrike15_v2_TournamentInfo.Parser, new[]{ "Sections", "TournamentEvent", "TournamentTeams" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchList), global::CMsgGCCStrike15_v2_MatchList.Parser, new[]{ "Msgrequestid", "Accountid", "Servertime", "Matches", "Streams", "Tournamentinfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt), global::CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt.Parser, new[]{ "Eventid", "Matches", "Accountid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Predictions), global::CMsgGCCStrike15_v2_Predictions.Parser, new[]{ "EventId", "GroupMatchTeamPicks" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Predictions.Types.GroupMatchTeamPick), global::CMsgGCCStrike15_v2_Predictions.Types.GroupMatchTeamPick.Parser, new[]{ "Sectionid", "Groupid", "Index", "Teamid", "Itemid" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Fantasy), global::CMsgGCCStrike15_v2_Fantasy.Parser, new[]{ "EventId", "Teams" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Fantasy.Types.FantasySlot), global::CMsgGCCStrike15_v2_Fantasy.Types.FantasySlot.Parser, new[]{ "Type", "Pick", "Itemid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Fantasy.Types.FantasyTeam), global::CMsgGCCStrike15_v2_Fantasy.Types.FantasyTeam.Parser, new[]{ "Sectionid", "Slots" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAttribute_String), global::CAttribute_String.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgLegacySource1ClientWelcome), global::CMsgLegacySource1ClientWelcome.Parser, new[]{ "Version", "GameData", "OutofdateSubscribedCaches", "UptodateSubscribedCaches", "Location", "GameData2", "Rtime32GcWelcomeTimestamp", "Currency", "Balance", "BalanceUrl", "TxnCountryCode" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgLegacySource1ClientWelcome.Types.Location), global::CMsgLegacySource1ClientWelcome.Types.Location.Parser, new[]{ "Latitude", "Longitude", "Country" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgCStrike15Welcome), global::CMsgCStrike15Welcome.Parser, new[]{ "StoreItemHash", "Timeplayedconsecutively", "TimeFirstPlayed", "LastTimePlayed", "LastIpAddress", "Gscookieid", "Uniqueid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo), global::CMsgGCCStrike15_v2_ClientVarValueNotificationInfo.Parser, new[]{ "ValueName", "ValueInt", "ServerAddr", "ServerPort", "ChokedBlocks" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo), global::CMsgGCCStrike15_v2_ServerVarValueNotificationInfo.Parser, new[]{ "Accountid", "Viewangles", "Type", "Userdata" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GiftsLeaderboardRequest), global::CMsgGCCStrike15_v2_GiftsLeaderboardRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse), global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Parser, new[]{ "Servertime", "TimePeriodSeconds", "TotalGiftsGiven", "TotalGivers", "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Types.GiftLeaderboardEntry), global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Types.GiftLeaderboardEntry.Parser, new[]{ "Accountid", "Gifts" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientSubmitSurveyVote), global::CMsgGCCStrike15_v2_ClientSubmitSurveyVote.Parser, new[]{ "SurveyId", "Vote" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Server2GCClientValidate), global::CMsgGCCStrike15_v2_Server2GCClientValidate.Parser, new[]{ "Accountid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GC2ClientTournamentInfo), global::CMsgGCCStrike15_v2_GC2ClientTournamentInfo.Parser, new[]{ "Eventid", "Stageid", "GameType", "Teamids" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOEconCoupon), global::CSOEconCoupon.Parser, new[]{ "Entryid", "Defidx", "ExpirationDate" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOAccountItemPersonalStore), global::CSOAccountItemPersonalStore.Parser, new[]{ "GenerationTime", "RedeemableBalance", "Items" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOAccountXpShop), global::CSOAccountXpShop.Parser, new[]{ "GenerationTime", "RedeemableBalance", "XpTracks" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOAccountXpShopBids), global::CSOAccountXpShopBids.Parser, new[]{ "CampaignId", "RedeemId", "ExpectedCost", "GenerationTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOVolatileItemOffer), global::CSOVolatileItemOffer.Parser, new[]{ "Defidx", "FauxItemid", "GenerationTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOVolatileItemClaimedRewards), global::CSOVolatileItemClaimedRewards.Parser, new[]{ "Defidx", "Reward", "GenerationTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOAccountKeychainRemoveToolCharges), global::CSOAccountKeychainRemoveToolCharges.Parser, new[]{ "Charges" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOQuestProgress), global::CSOQuestProgress.Parser, new[]{ "Questid", "PointsRemaining", "BonusPoints" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOAccountSeasonalOperation), global::CSOAccountSeasonalOperation.Parser, new[]{ "SeasonValue", "TierUnlocked", "PremiumTiers", "MissionId", "MissionsCompleted", "RedeemableBalance", "SeasonPassTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOAccountRecurringSubscription), global::CSOAccountRecurringSubscription.Parser, new[]{ "TimeNextCycle", "TimeInitiated" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOGameAccountSteamChina), global::CSOGameAccountSteamChina.Parser, new[]{ "TimeLastUpdate", "TimeCommsBan", "TimePlayBan" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOPersonaDataPublic), global::CSOPersonaDataPublic.Parser, new[]{ "PlayerLevel", "Commendation", "ElevatedState", "XpTrailTimestampRefresh", "XpTrailLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOAccountRecurringMission), global::CSOAccountRecurringMission.Parser, new[]{ "AccountId", "MissionId", "Period", "Progress" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop), global::CMsgGCCStrike15_v2_GC2ClientNotifyXPShop.Parser, new[]{ "Prematch", "Postmatch", "CurrentXp", "CurrentLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Client2GcAckXPShopTracks), global::CMsgGCCStrike15_v2_Client2GcAckXPShopTracks.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats), global::CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats.Parser, new[]{ "GsLocationId", "DataCenterId", "NumLockedIn", "NumFoundNearby", "NoteLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGC_GlobalGame_Subscribe), global::CMsgGC_GlobalGame_Subscribe.Parser, new[]{ "Ticket" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGC_GlobalGame_Unsubscribe), global::CMsgGC_GlobalGame_Unsubscribe.Parser, new[]{ "Timeleft" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGC_GlobalGame_Play), global::CMsgGC_GlobalGame_Play.Parser, new[]{ "Ticket", "Gametimems", "Msperpoint" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_AcknowledgePenalty), global::CMsgGCCStrike15_v2_AcknowledgePenalty.Parser, new[]{ "Acknowledged" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin), global::CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin.Parser, new[]{ "Defindex", "Upgradeid", "Hours", "Prestigetime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Client2GCStreamUnlock), global::CMsgGCCStrike15_v2_Client2GCStreamUnlock.Parser, new[]{ "Ticket", "Os" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientToGCRequestElevate), global::CMsgGCCStrike15_v2_ClientToGCRequestElevate.Parser, new[]{ "Stage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientToGCChat), global::CMsgGCCStrike15_v2_ClientToGCChat.Parser, new[]{ "MatchId", "Text" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GCToClientChat), global::CMsgGCCStrike15_v2_GCToClientChat.Parser, new[]{ "AccountId", "Text" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientAuthKeyCode), global::CMsgGCCStrike15_v2_ClientAuthKeyCode.Parser, new[]{ "Eventid", "Code" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_GotvSyncPacket), global::CMsgGCCStrike15_GotvSyncPacket.Parser, new[]{ "Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerDecalDigitalSignature), global::PlayerDecalDigitalSignature.Parser, new[]{ "Signature", "Accountid", "Rtime", "Endpos", "Startpos", "Left", "TxDefidx", "Entindex", "Hitbox", "Creationtime", "Equipslot", "TraceId", "Normal", "TintId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientPlayerDecalSign), global::CMsgGCCStrike15_v2_ClientPlayerDecalSign.Parser, new[]{ "Data", "Itemid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_BetaEnrollment), global::CMsgGCCStrike15_v2_BetaEnrollment.Parser, new[]{ "Eresult" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientLogonFatalError), global::CMsgGCCStrike15_v2_ClientLogonFatalError.Parser, new[]{ "Errorcode", "Message", "Country" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientPollState), global::CMsgGCCStrike15_v2_ClientPollState.Parser, new[]{ "Pollid", "Names", "Values" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Party_Register), global::CMsgGCCStrike15_v2_Party_Register.Parser, new[]{ "Id", "Ver", "Apr", "Ark", "Nby", "Grp", "Slots", "Launcher", "GameType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Party_Search), global::CMsgGCCStrike15_v2_Party_Search.Parser, new[]{ "Ver", "Apr", "Ark", "Grps", "Launcher", "GameType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Party_SearchResults), global::CMsgGCCStrike15_v2_Party_SearchResults.Parser, new[]{ "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Party_SearchResults.Types.Entry), global::CMsgGCCStrike15_v2_Party_SearchResults.Types.Entry.Parser, new[]{ "Id", "Grp", "GameType", "Apr", "Ark", "Loc", "Accountid" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Party_Invite), global::CMsgGCCStrike15_v2_Party_Invite.Parser, new[]{ "Accountid", "Lobbyid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Account_RequestCoPlays), global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Parser, new[]{ "Players", "Servertime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Types.Player), global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Types.Player.Parser, new[]{ "Accountid", "Rtcoplay", "Online" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientToGCRequestTicket), global::CMsgGCCStrike15_v2_ClientToGCRequestTicket.Parser, new[]{ "AuthorizedSteamId", "AuthorizedPublicIp", "GameserverSteamId", "GameserverSdrRouting" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCToClientSteamDatagramTicket), global::CMsgGCToClientSteamDatagramTicket.Parser, new[]{ "SerializedTicket" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientRequestOffers), global::CMsgGCCStrike15_v2_ClientRequestOffers.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientRequestSouvenir), global::CMsgGCCStrike15_v2_ClientRequestSouvenir.Parser, new[]{ "Itemid", "Matchid", "Eventid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientAccountBalance), global::CMsgGCCStrike15_v2_ClientAccountBalance.Parser, new[]{ "Amount", "Url" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientPartyJoinRelay), global::CMsgGCCStrike15_v2_ClientPartyJoinRelay.Parser, new[]{ "Accountid", "Lobbyid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientPartyWarning), global::CMsgGCCStrike15_v2_ClientPartyWarning.Parser, new[]{ "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientPartyWarning.Types.Entry), global::CMsgGCCStrike15_v2_ClientPartyWarning.Types.Entry.Parser, new[]{ "Accountid", "Warntype" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_SetEventFavorite), global::CMsgGCCStrike15_v2_SetEventFavorite.Parser, new[]{ "Eventid", "IsFavorite" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GetEventFavorites_Request), global::CMsgGCCStrike15_v2_GetEventFavorites_Request.Parser, new[]{ "AllEvents" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GetEventFavorites_Response), global::CMsgGCCStrike15_v2_GetEventFavorites_Response.Parser, new[]{ "AllEvents", "JsonFavorites", "JsonFeatured" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientPerfReport), global::CMsgGCCStrike15_v2_ClientPerfReport.Parser, new[]{ "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientPerfReport.Types.Entry), global::CMsgGCCStrike15_v2_ClientPerfReport.Types.Entry.Parser, new[]{ "Perfcounter", "Length", "Reference", "Actual", "Sourceid", "Status" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CVDiagnostic), global::CVDiagnostic.Parser, new[]{ "Id", "Extended", "Value", "StringValue" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_ClientReportValidation), global::CMsgGCCStrike15_v2_ClientReportValidation.Parser, new[]{ "FileReport", "CommandLine", "TotalFiles", "InternalError", "TrustTime", "CountPending", "CountCompleted", "ProcessId", "Osversion", "Clientreportversion", "StatusId", "Diagnostic1", "Diagnostic2", "Diagnostic3", "LastLaunchData", "ReportCount", "ClientTime", "Diagnostic4", "Diagnostic5", "Diagnostics" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode), global::CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode.Parser, new[]{ "FileReport", "OfferInsecureMode", "OfferSecureMode", "ShowUnsignedUi", "KickUser", "ShowTrustedUi", "ShowWarningNotTrusted", "ShowWarningNotTrusted2", "FilesPreventedTrusted" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GC2ClientRequestValidation), global::CMsgGCCStrike15_v2_GC2ClientRequestValidation.Parser, new[]{ "FullReport", "Module" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GC2ClientInitSystem), global::CMsgGCCStrike15_v2_GC2ClientInitSystem.Parser, new[]{ "Load", "Name", "Outputname", "KeyData", "ShaHash", "Cookie", "Manifest", "SystemPackage", "LoadSystem" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response), global::CMsgGCCStrike15_v2_GC2ClientInitSystem_Response.Parser, new[]{ "Success", "Diagnostic", "ShaHash", "Response", "ErrorCode1", "ErrorCode2", "Handle", "EinitResult", "AuxSystem1", "AuxSystem2" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName), global::CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName.Parser, new[]{ "LeaderboardSafeName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgRequestRecurringMissionSchedule), global::CMsgRequestRecurringMissionSchedule.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgRecurringMissionSchema), global::CMsgRecurringMissionSchema.Parser, new[]{ "Missions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgRecurringMissionSchema.Types.MissionTemplateList), global::CMsgRecurringMissionSchema.Types.MissionTemplateList.Parser, new[]{ "Period", "MissionTemplates" }, null, null, null, null)})
        }));
  }
  #endregion

}
#region Enums
public enum ECsgoGCMsg {
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Base")] KEmsgGccstrike15V2Base = 9100,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingStart")] KEmsgGccstrike15V2MatchmakingStart = 9101,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingStop")] KEmsgGccstrike15V2MatchmakingStop = 9102,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingClient2ServerPing")] KEmsgGccstrike15V2MatchmakingClient2ServerPing = 9103,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate")] KEmsgGccstrike15V2MatchmakingGc2ClientUpdate = 9104,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingServerReservationResponse")] KEmsgGccstrike15V2MatchmakingServerReservationResponse = 9106,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingGC2ClientReserve")] KEmsgGccstrike15V2MatchmakingGc2ClientReserve = 9107,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingClient2GCHello")] KEmsgGccstrike15V2MatchmakingClient2Gchello = 9109,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingGC2ClientHello")] KEmsgGccstrike15V2MatchmakingGc2ClientHello = 9110,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon")] KEmsgGccstrike15V2MatchmakingGc2ClientAbandon = 9112,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate")] KEmsgGccstrike15V2MatchmakingOperator2GcblogUpdate = 9117,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty")] KEmsgGccstrike15V2ServerNotificationForUserPenalty = 9118,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientReportPlayer")] KEmsgGccstrike15V2ClientReportPlayer = 9119,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientReportServer")] KEmsgGccstrike15V2ClientReportServer = 9120,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientCommendPlayer")] KEmsgGccstrike15V2ClientCommendPlayer = 9121,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientReportResponse")] KEmsgGccstrike15V2ClientReportResponse = 9122,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientCommendPlayerQuery")] KEmsgGccstrike15V2ClientCommendPlayerQuery = 9123,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientCommendPlayerQueryResponse")] KEmsgGccstrike15V2ClientCommendPlayerQueryResponse = 9124,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_WatchInfoUsers")] KEmsgGccstrike15V2WatchInfoUsers = 9126,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientRequestPlayersProfile")] KEmsgGccstrike15V2ClientRequestPlayersProfile = 9127,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_PlayersProfile")] KEmsgGccstrike15V2PlayersProfile = 9128,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate")] KEmsgGccstrike15V2PlayerOverwatchCaseUpdate = 9131,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment")] KEmsgGccstrike15V2PlayerOverwatchCaseAssignment = 9132,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_PlayerOverwatchCaseStatus")] KEmsgGccstrike15V2PlayerOverwatchCaseStatus = 9133,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ClientTextMsg")] KEmsgGccstrike15V2Gc2ClientTextMsg = 9134,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Client2GCTextMsg")] KEmsgGccstrike15V2Client2GctextMsg = 9135,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchEndRunRewardDrops")] KEmsgGccstrike15V2MatchEndRunRewardDrops = 9136,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification")] KEmsgGccstrike15V2MatchEndRewardDropsNotification = 9137,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientRequestWatchInfoFriends2")] KEmsgGccstrike15V2ClientRequestWatchInfoFriends2 = 9138,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchList")] KEmsgGccstrike15V2MatchList = 9139,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames")] KEmsgGccstrike15V2MatchListRequestCurrentLiveGames = 9140,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchListRequestRecentUserGames")] KEmsgGccstrike15V2MatchListRequestRecentUserGames = 9141,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ServerReservationUpdate")] KEmsgGccstrike15V2Gc2ServerReservationUpdate = 9142,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientVarValueNotificationInfo")] KEmsgGccstrike15V2ClientVarValueNotificationInfo = 9144,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchListRequestTournamentGames")] KEmsgGccstrike15V2MatchListRequestTournamentGames = 9146,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchListRequestFullGameInfo")] KEmsgGccstrike15V2MatchListRequestFullGameInfo = 9147,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GiftsLeaderboardRequest")] KEmsgGccstrike15V2GiftsLeaderboardRequest = 9148,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GiftsLeaderboardResponse")] KEmsgGccstrike15V2GiftsLeaderboardResponse = 9149,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ServerVarValueNotificationInfo")] KEmsgGccstrike15V2ServerVarValueNotificationInfo = 9150,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientSubmitSurveyVote")] KEmsgGccstrike15V2ClientSubmitSurveyVote = 9152,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Server2GCClientValidate")] KEmsgGccstrike15V2Server2GcclientValidate = 9153,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchListRequestLiveGameForUser")] KEmsgGccstrike15V2MatchListRequestLiveGameForUser = 9154,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest")] KEmsgGccstrike15V2Client2GceconPreviewDataBlockRequest = 9156,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse")] KEmsgGccstrike15V2Client2GceconPreviewDataBlockResponse = 9157,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_AccountPrivacySettings")] KEmsgGccstrike15V2AccountPrivacySettings = 9158,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_SetMyActivityInfo")] KEmsgGccstrike15V2SetMyActivityInfo = 9159,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchListRequestTournamentPredictions")] KEmsgGccstrike15V2MatchListRequestTournamentPredictions = 9160,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchListUploadTournamentPredictions")] KEmsgGccstrike15V2MatchListUploadTournamentPredictions = 9161,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_DraftSummary")] KEmsgGccstrike15V2DraftSummary = 9162,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientRequestJoinFriendData")] KEmsgGccstrike15V2ClientRequestJoinFriendData = 9163,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientRequestJoinServerData")] KEmsgGccstrike15V2ClientRequestJoinServerData = 9164,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ClientTournamentInfo")] KEmsgGccstrike15V2Gc2ClientTournamentInfo = 9167,
  [pbr::OriginalName("k_EMsgGC_GlobalGame_Subscribe")] KEmsgGcGlobalGameSubscribe = 9168,
  [pbr::OriginalName("k_EMsgGC_GlobalGame_Unsubscribe")] KEmsgGcGlobalGameUnsubscribe = 9169,
  [pbr::OriginalName("k_EMsgGC_GlobalGame_Play")] KEmsgGcGlobalGamePlay = 9170,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_AcknowledgePenalty")] KEmsgGccstrike15V2AcknowledgePenalty = 9171,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin")] KEmsgGccstrike15V2Client2GcrequestPrestigeCoin = 9172,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ClientGlobalStats")] KEmsgGccstrike15V2Gc2ClientGlobalStats = 9173,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Client2GCStreamUnlock")] KEmsgGccstrike15V2Client2GcstreamUnlock = 9174,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_FantasyRequestClientData")] KEmsgGccstrike15V2FantasyRequestClientData = 9175,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_FantasyUpdateClientData")] KEmsgGccstrike15V2FantasyUpdateClientData = 9176,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GCToClientSteamdatagramTicket")] KEmsgGccstrike15V2GctoClientSteamdatagramTicket = 9177,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientToGCRequestTicket")] KEmsgGccstrike15V2ClientToGcrequestTicket = 9178,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientToGCRequestElevate")] KEmsgGccstrike15V2ClientToGcrequestElevate = 9179,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GlobalChat")] KEmsgGccstrike15V2GlobalChat = 9180,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GlobalChat_Subscribe")] KEmsgGccstrike15V2GlobalChatSubscribe = 9181,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GlobalChat_Unsubscribe")] KEmsgGccstrike15V2GlobalChatUnsubscribe = 9182,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientAuthKeyCode")] KEmsgGccstrike15V2ClientAuthKeyCode = 9183,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GotvSyncPacket")] KEmsgGccstrike15V2GotvSyncPacket = 9184,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientPlayerDecalSign")] KEmsgGccstrike15V2ClientPlayerDecalSign = 9185,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientLogonFatalError")] KEmsgGccstrike15V2ClientLogonFatalError = 9187,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientPollState")] KEmsgGccstrike15V2ClientPollState = 9188,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Party_Register")] KEmsgGccstrike15V2PartyRegister = 9189,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Party_Unregister")] KEmsgGccstrike15V2PartyUnregister = 9190,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Party_Search")] KEmsgGccstrike15V2PartySearch = 9191,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Party_Invite")] KEmsgGccstrike15V2PartyInvite = 9192,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Account_RequestCoPlays")] KEmsgGccstrike15V2AccountRequestCoPlays = 9193,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientGCRankUpdate")] KEmsgGccstrike15V2ClientGcrankUpdate = 9194,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientRequestOffers")] KEmsgGccstrike15V2ClientRequestOffers = 9195,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientAccountBalance")] KEmsgGccstrike15V2ClientAccountBalance = 9196,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientPartyJoinRelay")] KEmsgGccstrike15V2ClientPartyJoinRelay = 9197,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientPartyWarning")] KEmsgGccstrike15V2ClientPartyWarning = 9198,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_SetEventFavorite")] KEmsgGccstrike15V2SetEventFavorite = 9200,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GetEventFavorites_Request")] KEmsgGccstrike15V2GetEventFavoritesRequest = 9201,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientPerfReport")] KEmsgGccstrike15V2ClientPerfReport = 9202,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GetEventFavorites_Response")] KEmsgGccstrike15V2GetEventFavoritesResponse = 9203,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientRequestSouvenir")] KEmsgGccstrike15V2ClientRequestSouvenir = 9204,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientReportValidation")] KEmsgGccstrike15V2ClientReportValidation = 9205,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ClientRefuseSecureMode")] KEmsgGccstrike15V2Gc2ClientRefuseSecureMode = 9206,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ClientRequestValidation")] KEmsgGccstrike15V2Gc2ClientRequestValidation = 9207,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientRedeemMissionReward")] KEmsgGccstrike15V2ClientRedeemMissionReward = 9209,
  [pbr::OriginalName("k_EMsgGCCStrike15_ClientDeepStats")] KEmsgGccstrike15ClientDeepStats = 9210,
  [pbr::OriginalName("k_EMsgGCCStrike15_StartAgreementSessionInGame")] KEmsgGccstrike15StartAgreementSessionInGame = 9211,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ClientInitSystem")] KEmsgGccstrike15V2Gc2ClientInitSystem = 9212,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ClientInitSystem_Response")] KEmsgGccstrike15V2Gc2ClientInitSystemResponse = 9213,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_PrivateQueues")] KEmsgGccstrike15V2PrivateQueues = 9214,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt")] KEmsgGccstrike15V2MatchListTournamentOperatorMgmt = 9215,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_BetaEnrollment")] KEmsgGccstrike15V2BetaEnrollment = 9217,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName")] KEmsgGccstrike15V2SetPlayerLeaderboardSafeName = 9218,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientRedeemFreeReward")] KEmsgGccstrike15V2ClientRedeemFreeReward = 9219,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_ClientNetworkConfig")] KEmsgGccstrike15V2ClientNetworkConfig = 9220,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_GC2ClientNotifyXPShop")] KEmsgGccstrike15V2Gc2ClientNotifyXpshop = 9221,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_Client2GcAckXPShopTracks")] KEmsgGccstrike15V2Client2GcAckXpshopTracks = 9222,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats")] KEmsgGccstrike15V2MatchmakingGc2ClientSearchStats = 9223,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_PremierSeasonSummary")] KEmsgGccstrike15V2PremierSeasonSummary = 9224,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_RequestRecurringMissionSchedule")] KEmsgGccstrike15V2RequestRecurringMissionSchedule = 9225,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_RecurringMissionSchema")] KEmsgGccstrike15V2RecurringMissionSchema = 9226,
  [pbr::OriginalName("k_EMsgGCCStrike15_v2_VolatileItemClaimReward")] KEmsgGccstrike15V2VolatileItemClaimReward = 9227,
}

public enum ECsgoSteamUserStat {
  [pbr::OriginalName("k_ECsgoSteamUserStat_XpEarnedGames")] KEcsgoSteamUserStatXpEarnedGames = 1,
  [pbr::OriginalName("k_ECsgoSteamUserStat_MatchWinsCompetitive")] KEcsgoSteamUserStatMatchWinsCompetitive = 2,
  [pbr::OriginalName("k_ECsgoSteamUserStat_SurvivedDangerZone")] KEcsgoSteamUserStatSurvivedDangerZone = 3,
}

public enum QuestType {
  [pbr::OriginalName("k_EQuestType_Operation")] KEquestTypeOperation = 1,
  [pbr::OriginalName("k_EQuestType_RecurringMission")] KEquestTypeRecurringMission = 2,
}

public enum EClientReportingVersion {
  [pbr::OriginalName("k_EClientReportingVersion_OldVersion")] KEclientReportingVersionOldVersion = 0,
  [pbr::OriginalName("k_EClientReportingVersion_BetaVersion")] KEclientReportingVersionBetaVersion = 1,
  [pbr::OriginalName("k_EClientReportingVersion_SupportsTrustedMode")] KEclientReportingVersionSupportsTrustedMode = 2,
}

public enum EInitSystemResult {
  [pbr::OriginalName("k_EInitSystemResult_Invalid")] KEinitSystemResultInvalid = 0,
  [pbr::OriginalName("k_EInitSystemResult_Success")] KEinitSystemResultSuccess = 1,
  [pbr::OriginalName("k_EInitSystemResult_None")] KEinitSystemResultNone = 2,
  [pbr::OriginalName("k_EInitSystemResult_NotFound")] KEinitSystemResultNotFound = 3,
  [pbr::OriginalName("k_EInitSystemResult_Existing")] KEinitSystemResultExisting = 4,
  [pbr::OriginalName("k_EInitSystemResult_FailedOpen")] KEinitSystemResultFailedOpen = 5,
  [pbr::OriginalName("k_EInitSystemResult_Mismatch")] KEinitSystemResultMismatch = 6,
  [pbr::OriginalName("k_EInitSystemResult_FailedInit")] KEinitSystemResultFailedInit = 7,
  [pbr::OriginalName("k_EInitSystemResult_Max")] KEinitSystemResultMax = 8,
}

#endregion

#region Messages
public sealed partial class GameServerPing : pb::IMessage<GameServerPing>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameServerPing> _parser = new pb::MessageParser<GameServerPing>(() => new GameServerPing());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameServerPing> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameServerPing() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameServerPing(GameServerPing other) : this() {
    _hasBits0 = other._hasBits0;
    ping_ = other.ping_;
    ip_ = other.ip_;
    instances_ = other.instances_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameServerPing Clone() {
    return new GameServerPing(this);
  }

  /// <summary>Field number for the "ping" field.</summary>
  public const int PingFieldNumber = 2;
  private readonly static int PingDefaultValue = 0;

  private int ping_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Ping {
    get { if ((_hasBits0 & 1) != 0) { return ping_; } else { return PingDefaultValue; } }
    set {
      _hasBits0 |= 1;
      ping_ = value;
    }
  }
  /// <summary>Gets whether the "ping" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPing {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ping" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPing() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ip" field.</summary>
  public const int IpFieldNumber = 3;
  private readonly static uint IpDefaultValue = 0;

  private uint ip_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ip {
    get { if ((_hasBits0 & 2) != 0) { return ip_; } else { return IpDefaultValue; } }
    set {
      _hasBits0 |= 2;
      ip_ = value;
    }
  }
  /// <summary>Gets whether the "ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "instances" field.</summary>
  public const int InstancesFieldNumber = 5;
  private readonly static uint InstancesDefaultValue = 0;

  private uint instances_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Instances {
    get { if ((_hasBits0 & 4) != 0) { return instances_; } else { return InstancesDefaultValue; } }
    set {
      _hasBits0 |= 4;
      instances_ = value;
    }
  }
  /// <summary>Gets whether the "instances" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInstances {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "instances" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInstances() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameServerPing);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameServerPing other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ping != other.Ping) return false;
    if (Ip != other.Ip) return false;
    if (Instances != other.Instances) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPing) hash ^= Ping.GetHashCode();
    if (HasIp) hash ^= Ip.GetHashCode();
    if (HasInstances) hash ^= Instances.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPing) {
      output.WriteRawTag(16);
      output.WriteInt32(Ping);
    }
    if (HasIp) {
      output.WriteRawTag(24);
      output.WriteUInt32(Ip);
    }
    if (HasInstances) {
      output.WriteRawTag(40);
      output.WriteUInt32(Instances);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPing) {
      output.WriteRawTag(16);
      output.WriteInt32(Ping);
    }
    if (HasIp) {
      output.WriteRawTag(24);
      output.WriteUInt32(Ip);
    }
    if (HasInstances) {
      output.WriteRawTag(40);
      output.WriteUInt32(Instances);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPing) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ping);
    }
    if (HasIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ip);
    }
    if (HasInstances) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Instances);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameServerPing other) {
    if (other == null) {
      return;
    }
    if (other.HasPing) {
      Ping = other.Ping;
    }
    if (other.HasIp) {
      Ip = other.Ip;
    }
    if (other.HasInstances) {
      Instances = other.Instances;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          Ping = input.ReadInt32();
          break;
        }
        case 24: {
          Ip = input.ReadUInt32();
          break;
        }
        case 40: {
          Instances = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 16: {
          Ping = input.ReadInt32();
          break;
        }
        case 24: {
          Ip = input.ReadUInt32();
          break;
        }
        case 40: {
          Instances = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class DataCenterPing : pb::IMessage<DataCenterPing>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<DataCenterPing> _parser = new pb::MessageParser<DataCenterPing>(() => new DataCenterPing());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<DataCenterPing> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DataCenterPing() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DataCenterPing(DataCenterPing other) : this() {
    _hasBits0 = other._hasBits0;
    dataCenterId_ = other.dataCenterId_;
    ping_ = other.ping_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DataCenterPing Clone() {
    return new DataCenterPing(this);
  }

  /// <summary>Field number for the "data_center_id" field.</summary>
  public const int DataCenterIdFieldNumber = 1;
  private readonly static uint DataCenterIdDefaultValue = 0;

  private uint dataCenterId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DataCenterId {
    get { if ((_hasBits0 & 1) != 0) { return dataCenterId_; } else { return DataCenterIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      dataCenterId_ = value;
    }
  }
  /// <summary>Gets whether the "data_center_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDataCenterId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "data_center_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDataCenterId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ping" field.</summary>
  public const int PingFieldNumber = 2;
  private readonly static int PingDefaultValue = 0;

  private int ping_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Ping {
    get { if ((_hasBits0 & 2) != 0) { return ping_; } else { return PingDefaultValue; } }
    set {
      _hasBits0 |= 2;
      ping_ = value;
    }
  }
  /// <summary>Gets whether the "ping" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPing {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "ping" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPing() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as DataCenterPing);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(DataCenterPing other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DataCenterId != other.DataCenterId) return false;
    if (Ping != other.Ping) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDataCenterId) hash ^= DataCenterId.GetHashCode();
    if (HasPing) hash ^= Ping.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDataCenterId) {
      output.WriteRawTag(13);
      output.WriteFixed32(DataCenterId);
    }
    if (HasPing) {
      output.WriteRawTag(16);
      output.WriteSInt32(Ping);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDataCenterId) {
      output.WriteRawTag(13);
      output.WriteFixed32(DataCenterId);
    }
    if (HasPing) {
      output.WriteRawTag(16);
      output.WriteSInt32(Ping);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDataCenterId) {
      size += 1 + 4;
    }
    if (HasPing) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Ping);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(DataCenterPing other) {
    if (other == null) {
      return;
    }
    if (other.HasDataCenterId) {
      DataCenterId = other.DataCenterId;
    }
    if (other.HasPing) {
      Ping = other.Ping;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          DataCenterId = input.ReadFixed32();
          break;
        }
        case 16: {
          Ping = input.ReadSInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          DataCenterId = input.ReadFixed32();
          break;
        }
        case 16: {
          Ping = input.ReadSInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class DetailedSearchStatistic : pb::IMessage<DetailedSearchStatistic>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<DetailedSearchStatistic> _parser = new pb::MessageParser<DetailedSearchStatistic>(() => new DetailedSearchStatistic());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<DetailedSearchStatistic> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DetailedSearchStatistic() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DetailedSearchStatistic(DetailedSearchStatistic other) : this() {
    _hasBits0 = other._hasBits0;
    gameType_ = other.gameType_;
    searchTimeAvg_ = other.searchTimeAvg_;
    playersSearching_ = other.playersSearching_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DetailedSearchStatistic Clone() {
    return new DetailedSearchStatistic(this);
  }

  /// <summary>Field number for the "game_type" field.</summary>
  public const int GameTypeFieldNumber = 1;
  private readonly static uint GameTypeDefaultValue = 0;

  private uint gameType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameType {
    get { if ((_hasBits0 & 1) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gameType_ = value;
    }
  }
  /// <summary>Gets whether the "game_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "game_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "search_time_avg" field.</summary>
  public const int SearchTimeAvgFieldNumber = 2;
  private readonly static uint SearchTimeAvgDefaultValue = 0;

  private uint searchTimeAvg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SearchTimeAvg {
    get { if ((_hasBits0 & 2) != 0) { return searchTimeAvg_; } else { return SearchTimeAvgDefaultValue; } }
    set {
      _hasBits0 |= 2;
      searchTimeAvg_ = value;
    }
  }
  /// <summary>Gets whether the "search_time_avg" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSearchTimeAvg {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "search_time_avg" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSearchTimeAvg() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "players_searching" field.</summary>
  public const int PlayersSearchingFieldNumber = 4;
  private readonly static uint PlayersSearchingDefaultValue = 0;

  private uint playersSearching_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayersSearching {
    get { if ((_hasBits0 & 4) != 0) { return playersSearching_; } else { return PlayersSearchingDefaultValue; } }
    set {
      _hasBits0 |= 4;
      playersSearching_ = value;
    }
  }
  /// <summary>Gets whether the "players_searching" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayersSearching {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "players_searching" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayersSearching() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as DetailedSearchStatistic);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(DetailedSearchStatistic other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GameType != other.GameType) return false;
    if (SearchTimeAvg != other.SearchTimeAvg) return false;
    if (PlayersSearching != other.PlayersSearching) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGameType) hash ^= GameType.GetHashCode();
    if (HasSearchTimeAvg) hash ^= SearchTimeAvg.GetHashCode();
    if (HasPlayersSearching) hash ^= PlayersSearching.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGameType) {
      output.WriteRawTag(8);
      output.WriteUInt32(GameType);
    }
    if (HasSearchTimeAvg) {
      output.WriteRawTag(16);
      output.WriteUInt32(SearchTimeAvg);
    }
    if (HasPlayersSearching) {
      output.WriteRawTag(32);
      output.WriteUInt32(PlayersSearching);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGameType) {
      output.WriteRawTag(8);
      output.WriteUInt32(GameType);
    }
    if (HasSearchTimeAvg) {
      output.WriteRawTag(16);
      output.WriteUInt32(SearchTimeAvg);
    }
    if (HasPlayersSearching) {
      output.WriteRawTag(32);
      output.WriteUInt32(PlayersSearching);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGameType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
    }
    if (HasSearchTimeAvg) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SearchTimeAvg);
    }
    if (HasPlayersSearching) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayersSearching);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(DetailedSearchStatistic other) {
    if (other == null) {
      return;
    }
    if (other.HasGameType) {
      GameType = other.GameType;
    }
    if (other.HasSearchTimeAvg) {
      SearchTimeAvg = other.SearchTimeAvg;
    }
    if (other.HasPlayersSearching) {
      PlayersSearching = other.PlayersSearching;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GameType = input.ReadUInt32();
          break;
        }
        case 16: {
          SearchTimeAvg = input.ReadUInt32();
          break;
        }
        case 32: {
          PlayersSearching = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          GameType = input.ReadUInt32();
          break;
        }
        case 16: {
          SearchTimeAvg = input.ReadUInt32();
          break;
        }
        case 32: {
          PlayersSearching = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class TournamentPlayer : pb::IMessage<TournamentPlayer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TournamentPlayer> _parser = new pb::MessageParser<TournamentPlayer>(() => new TournamentPlayer());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<TournamentPlayer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentPlayer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentPlayer(TournamentPlayer other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    playerNick_ = other.playerNick_;
    playerName_ = other.playerName_;
    playerDob_ = other.playerDob_;
    playerFlag_ = other.playerFlag_;
    playerLocation_ = other.playerLocation_;
    playerDesc_ = other.playerDesc_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentPlayer Clone() {
    return new TournamentPlayer(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "player_nick" field.</summary>
  public const int PlayerNickFieldNumber = 2;
  private readonly static string PlayerNickDefaultValue = "";

  private string playerNick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PlayerNick {
    get { return playerNick_ ?? PlayerNickDefaultValue; }
    set {
      playerNick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "player_nick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerNick {
    get { return playerNick_ != null; }
  }
  /// <summary>Clears the value of the "player_nick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerNick() {
    playerNick_ = null;
  }

  /// <summary>Field number for the "player_name" field.</summary>
  public const int PlayerNameFieldNumber = 3;
  private readonly static string PlayerNameDefaultValue = "";

  private string playerName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PlayerName {
    get { return playerName_ ?? PlayerNameDefaultValue; }
    set {
      playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "player_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerName {
    get { return playerName_ != null; }
  }
  /// <summary>Clears the value of the "player_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerName() {
    playerName_ = null;
  }

  /// <summary>Field number for the "player_dob" field.</summary>
  public const int PlayerDobFieldNumber = 4;
  private readonly static uint PlayerDobDefaultValue = 0;

  private uint playerDob_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerDob {
    get { if ((_hasBits0 & 2) != 0) { return playerDob_; } else { return PlayerDobDefaultValue; } }
    set {
      _hasBits0 |= 2;
      playerDob_ = value;
    }
  }
  /// <summary>Gets whether the "player_dob" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerDob {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "player_dob" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerDob() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "player_flag" field.</summary>
  public const int PlayerFlagFieldNumber = 5;
  private readonly static string PlayerFlagDefaultValue = "";

  private string playerFlag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PlayerFlag {
    get { return playerFlag_ ?? PlayerFlagDefaultValue; }
    set {
      playerFlag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "player_flag" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerFlag {
    get { return playerFlag_ != null; }
  }
  /// <summary>Clears the value of the "player_flag" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerFlag() {
    playerFlag_ = null;
  }

  /// <summary>Field number for the "player_location" field.</summary>
  public const int PlayerLocationFieldNumber = 6;
  private readonly static string PlayerLocationDefaultValue = "";

  private string playerLocation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PlayerLocation {
    get { return playerLocation_ ?? PlayerLocationDefaultValue; }
    set {
      playerLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "player_location" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerLocation {
    get { return playerLocation_ != null; }
  }
  /// <summary>Clears the value of the "player_location" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerLocation() {
    playerLocation_ = null;
  }

  /// <summary>Field number for the "player_desc" field.</summary>
  public const int PlayerDescFieldNumber = 7;
  private readonly static string PlayerDescDefaultValue = "";

  private string playerDesc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PlayerDesc {
    get { return playerDesc_ ?? PlayerDescDefaultValue; }
    set {
      playerDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "player_desc" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerDesc {
    get { return playerDesc_ != null; }
  }
  /// <summary>Clears the value of the "player_desc" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerDesc() {
    playerDesc_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as TournamentPlayer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(TournamentPlayer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (PlayerNick != other.PlayerNick) return false;
    if (PlayerName != other.PlayerName) return false;
    if (PlayerDob != other.PlayerDob) return false;
    if (PlayerFlag != other.PlayerFlag) return false;
    if (PlayerLocation != other.PlayerLocation) return false;
    if (PlayerDesc != other.PlayerDesc) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasPlayerNick) hash ^= PlayerNick.GetHashCode();
    if (HasPlayerName) hash ^= PlayerName.GetHashCode();
    if (HasPlayerDob) hash ^= PlayerDob.GetHashCode();
    if (HasPlayerFlag) hash ^= PlayerFlag.GetHashCode();
    if (HasPlayerLocation) hash ^= PlayerLocation.GetHashCode();
    if (HasPlayerDesc) hash ^= PlayerDesc.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasPlayerNick) {
      output.WriteRawTag(18);
      output.WriteString(PlayerNick);
    }
    if (HasPlayerName) {
      output.WriteRawTag(26);
      output.WriteString(PlayerName);
    }
    if (HasPlayerDob) {
      output.WriteRawTag(32);
      output.WriteUInt32(PlayerDob);
    }
    if (HasPlayerFlag) {
      output.WriteRawTag(42);
      output.WriteString(PlayerFlag);
    }
    if (HasPlayerLocation) {
      output.WriteRawTag(50);
      output.WriteString(PlayerLocation);
    }
    if (HasPlayerDesc) {
      output.WriteRawTag(58);
      output.WriteString(PlayerDesc);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasPlayerNick) {
      output.WriteRawTag(18);
      output.WriteString(PlayerNick);
    }
    if (HasPlayerName) {
      output.WriteRawTag(26);
      output.WriteString(PlayerName);
    }
    if (HasPlayerDob) {
      output.WriteRawTag(32);
      output.WriteUInt32(PlayerDob);
    }
    if (HasPlayerFlag) {
      output.WriteRawTag(42);
      output.WriteString(PlayerFlag);
    }
    if (HasPlayerLocation) {
      output.WriteRawTag(50);
      output.WriteString(PlayerLocation);
    }
    if (HasPlayerDesc) {
      output.WriteRawTag(58);
      output.WriteString(PlayerDesc);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasPlayerNick) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerNick);
    }
    if (HasPlayerName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
    }
    if (HasPlayerDob) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerDob);
    }
    if (HasPlayerFlag) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerFlag);
    }
    if (HasPlayerLocation) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerLocation);
    }
    if (HasPlayerDesc) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerDesc);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(TournamentPlayer other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasPlayerNick) {
      PlayerNick = other.PlayerNick;
    }
    if (other.HasPlayerName) {
      PlayerName = other.PlayerName;
    }
    if (other.HasPlayerDob) {
      PlayerDob = other.PlayerDob;
    }
    if (other.HasPlayerFlag) {
      PlayerFlag = other.PlayerFlag;
    }
    if (other.HasPlayerLocation) {
      PlayerLocation = other.PlayerLocation;
    }
    if (other.HasPlayerDesc) {
      PlayerDesc = other.PlayerDesc;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          PlayerNick = input.ReadString();
          break;
        }
        case 26: {
          PlayerName = input.ReadString();
          break;
        }
        case 32: {
          PlayerDob = input.ReadUInt32();
          break;
        }
        case 42: {
          PlayerFlag = input.ReadString();
          break;
        }
        case 50: {
          PlayerLocation = input.ReadString();
          break;
        }
        case 58: {
          PlayerDesc = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          PlayerNick = input.ReadString();
          break;
        }
        case 26: {
          PlayerName = input.ReadString();
          break;
        }
        case 32: {
          PlayerDob = input.ReadUInt32();
          break;
        }
        case 42: {
          PlayerFlag = input.ReadString();
          break;
        }
        case 50: {
          PlayerLocation = input.ReadString();
          break;
        }
        case 58: {
          PlayerDesc = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class TournamentTeam : pb::IMessage<TournamentTeam>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TournamentTeam> _parser = new pb::MessageParser<TournamentTeam>(() => new TournamentTeam());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<TournamentTeam> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentTeam() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentTeam(TournamentTeam other) : this() {
    _hasBits0 = other._hasBits0;
    teamId_ = other.teamId_;
    teamTag_ = other.teamTag_;
    teamFlag_ = other.teamFlag_;
    teamName_ = other.teamName_;
    players_ = other.players_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentTeam Clone() {
    return new TournamentTeam(this);
  }

  /// <summary>Field number for the "team_id" field.</summary>
  public const int TeamIdFieldNumber = 1;
  private readonly static int TeamIdDefaultValue = 0;

  private int teamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamId {
    get { if ((_hasBits0 & 1) != 0) { return teamId_; } else { return TeamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      teamId_ = value;
    }
  }
  /// <summary>Gets whether the "team_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "team_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "team_tag" field.</summary>
  public const int TeamTagFieldNumber = 2;
  private readonly static string TeamTagDefaultValue = "";

  private string teamTag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TeamTag {
    get { return teamTag_ ?? TeamTagDefaultValue; }
    set {
      teamTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "team_tag" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamTag {
    get { return teamTag_ != null; }
  }
  /// <summary>Clears the value of the "team_tag" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamTag() {
    teamTag_ = null;
  }

  /// <summary>Field number for the "team_flag" field.</summary>
  public const int TeamFlagFieldNumber = 3;
  private readonly static string TeamFlagDefaultValue = "";

  private string teamFlag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TeamFlag {
    get { return teamFlag_ ?? TeamFlagDefaultValue; }
    set {
      teamFlag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "team_flag" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamFlag {
    get { return teamFlag_ != null; }
  }
  /// <summary>Clears the value of the "team_flag" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamFlag() {
    teamFlag_ = null;
  }

  /// <summary>Field number for the "team_name" field.</summary>
  public const int TeamNameFieldNumber = 4;
  private readonly static string TeamNameDefaultValue = "";

  private string teamName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TeamName {
    get { return teamName_ ?? TeamNameDefaultValue; }
    set {
      teamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "team_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamName {
    get { return teamName_ != null; }
  }
  /// <summary>Clears the value of the "team_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamName() {
    teamName_ = null;
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 5;
  private static readonly pb::FieldCodec<global::TournamentPlayer> _repeated_players_codec
      = pb::FieldCodec.ForMessage(42, global::TournamentPlayer.Parser);
  private readonly pbc::RepeatedField<global::TournamentPlayer> players_ = new pbc::RepeatedField<global::TournamentPlayer>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::TournamentPlayer> Players {
    get { return players_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as TournamentTeam);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(TournamentTeam other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TeamId != other.TeamId) return false;
    if (TeamTag != other.TeamTag) return false;
    if (TeamFlag != other.TeamFlag) return false;
    if (TeamName != other.TeamName) return false;
    if(!players_.Equals(other.players_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTeamId) hash ^= TeamId.GetHashCode();
    if (HasTeamTag) hash ^= TeamTag.GetHashCode();
    if (HasTeamFlag) hash ^= TeamFlag.GetHashCode();
    if (HasTeamName) hash ^= TeamName.GetHashCode();
    hash ^= players_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTeamId) {
      output.WriteRawTag(8);
      output.WriteInt32(TeamId);
    }
    if (HasTeamTag) {
      output.WriteRawTag(18);
      output.WriteString(TeamTag);
    }
    if (HasTeamFlag) {
      output.WriteRawTag(26);
      output.WriteString(TeamFlag);
    }
    if (HasTeamName) {
      output.WriteRawTag(34);
      output.WriteString(TeamName);
    }
    players_.WriteTo(output, _repeated_players_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTeamId) {
      output.WriteRawTag(8);
      output.WriteInt32(TeamId);
    }
    if (HasTeamTag) {
      output.WriteRawTag(18);
      output.WriteString(TeamTag);
    }
    if (HasTeamFlag) {
      output.WriteRawTag(26);
      output.WriteString(TeamFlag);
    }
    if (HasTeamName) {
      output.WriteRawTag(34);
      output.WriteString(TeamName);
    }
    players_.WriteTo(ref output, _repeated_players_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTeamId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamId);
    }
    if (HasTeamTag) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamTag);
    }
    if (HasTeamFlag) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamFlag);
    }
    if (HasTeamName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamName);
    }
    size += players_.CalculateSize(_repeated_players_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(TournamentTeam other) {
    if (other == null) {
      return;
    }
    if (other.HasTeamId) {
      TeamId = other.TeamId;
    }
    if (other.HasTeamTag) {
      TeamTag = other.TeamTag;
    }
    if (other.HasTeamFlag) {
      TeamFlag = other.TeamFlag;
    }
    if (other.HasTeamName) {
      TeamName = other.TeamName;
    }
    players_.Add(other.players_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TeamId = input.ReadInt32();
          break;
        }
        case 18: {
          TeamTag = input.ReadString();
          break;
        }
        case 26: {
          TeamFlag = input.ReadString();
          break;
        }
        case 34: {
          TeamName = input.ReadString();
          break;
        }
        case 42: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TeamId = input.ReadInt32();
          break;
        }
        case 18: {
          TeamTag = input.ReadString();
          break;
        }
        case 26: {
          TeamFlag = input.ReadString();
          break;
        }
        case 34: {
          TeamName = input.ReadString();
          break;
        }
        case 42: {
          players_.AddEntriesFrom(ref input, _repeated_players_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class TournamentEvent : pb::IMessage<TournamentEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TournamentEvent> _parser = new pb::MessageParser<TournamentEvent>(() => new TournamentEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<TournamentEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentEvent(TournamentEvent other) : this() {
    _hasBits0 = other._hasBits0;
    eventId_ = other.eventId_;
    eventTag_ = other.eventTag_;
    eventName_ = other.eventName_;
    eventTimeStart_ = other.eventTimeStart_;
    eventTimeEnd_ = other.eventTimeEnd_;
    eventPublic_ = other.eventPublic_;
    eventStageId_ = other.eventStageId_;
    eventStageName_ = other.eventStageName_;
    activeSectionId_ = other.activeSectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentEvent Clone() {
    return new TournamentEvent(this);
  }

  /// <summary>Field number for the "event_id" field.</summary>
  public const int EventIdFieldNumber = 1;
  private readonly static int EventIdDefaultValue = 0;

  private int eventId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EventId {
    get { if ((_hasBits0 & 1) != 0) { return eventId_; } else { return EventIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventId_ = value;
    }
  }
  /// <summary>Gets whether the "event_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "event_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "event_tag" field.</summary>
  public const int EventTagFieldNumber = 2;
  private readonly static string EventTagDefaultValue = "";

  private string eventTag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EventTag {
    get { return eventTag_ ?? EventTagDefaultValue; }
    set {
      eventTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "event_tag" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventTag {
    get { return eventTag_ != null; }
  }
  /// <summary>Clears the value of the "event_tag" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventTag() {
    eventTag_ = null;
  }

  /// <summary>Field number for the "event_name" field.</summary>
  public const int EventNameFieldNumber = 3;
  private readonly static string EventNameDefaultValue = "";

  private string eventName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EventName {
    get { return eventName_ ?? EventNameDefaultValue; }
    set {
      eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "event_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventName {
    get { return eventName_ != null; }
  }
  /// <summary>Clears the value of the "event_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventName() {
    eventName_ = null;
  }

  /// <summary>Field number for the "event_time_start" field.</summary>
  public const int EventTimeStartFieldNumber = 4;
  private readonly static uint EventTimeStartDefaultValue = 0;

  private uint eventTimeStart_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EventTimeStart {
    get { if ((_hasBits0 & 2) != 0) { return eventTimeStart_; } else { return EventTimeStartDefaultValue; } }
    set {
      _hasBits0 |= 2;
      eventTimeStart_ = value;
    }
  }
  /// <summary>Gets whether the "event_time_start" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventTimeStart {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "event_time_start" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventTimeStart() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "event_time_end" field.</summary>
  public const int EventTimeEndFieldNumber = 5;
  private readonly static uint EventTimeEndDefaultValue = 0;

  private uint eventTimeEnd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EventTimeEnd {
    get { if ((_hasBits0 & 4) != 0) { return eventTimeEnd_; } else { return EventTimeEndDefaultValue; } }
    set {
      _hasBits0 |= 4;
      eventTimeEnd_ = value;
    }
  }
  /// <summary>Gets whether the "event_time_end" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventTimeEnd {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "event_time_end" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventTimeEnd() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "event_public" field.</summary>
  public const int EventPublicFieldNumber = 6;
  private readonly static int EventPublicDefaultValue = 0;

  private int eventPublic_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EventPublic {
    get { if ((_hasBits0 & 8) != 0) { return eventPublic_; } else { return EventPublicDefaultValue; } }
    set {
      _hasBits0 |= 8;
      eventPublic_ = value;
    }
  }
  /// <summary>Gets whether the "event_public" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventPublic {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "event_public" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventPublic() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "event_stage_id" field.</summary>
  public const int EventStageIdFieldNumber = 7;
  private readonly static int EventStageIdDefaultValue = 0;

  private int eventStageId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EventStageId {
    get { if ((_hasBits0 & 16) != 0) { return eventStageId_; } else { return EventStageIdDefaultValue; } }
    set {
      _hasBits0 |= 16;
      eventStageId_ = value;
    }
  }
  /// <summary>Gets whether the "event_stage_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventStageId {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "event_stage_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventStageId() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "event_stage_name" field.</summary>
  public const int EventStageNameFieldNumber = 8;
  private readonly static string EventStageNameDefaultValue = "";

  private string eventStageName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EventStageName {
    get { return eventStageName_ ?? EventStageNameDefaultValue; }
    set {
      eventStageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "event_stage_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventStageName {
    get { return eventStageName_ != null; }
  }
  /// <summary>Clears the value of the "event_stage_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventStageName() {
    eventStageName_ = null;
  }

  /// <summary>Field number for the "active_section_id" field.</summary>
  public const int ActiveSectionIdFieldNumber = 9;
  private readonly static uint ActiveSectionIdDefaultValue = 0;

  private uint activeSectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ActiveSectionId {
    get { if ((_hasBits0 & 32) != 0) { return activeSectionId_; } else { return ActiveSectionIdDefaultValue; } }
    set {
      _hasBits0 |= 32;
      activeSectionId_ = value;
    }
  }
  /// <summary>Gets whether the "active_section_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasActiveSectionId {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "active_section_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearActiveSectionId() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as TournamentEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(TournamentEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EventId != other.EventId) return false;
    if (EventTag != other.EventTag) return false;
    if (EventName != other.EventName) return false;
    if (EventTimeStart != other.EventTimeStart) return false;
    if (EventTimeEnd != other.EventTimeEnd) return false;
    if (EventPublic != other.EventPublic) return false;
    if (EventStageId != other.EventStageId) return false;
    if (EventStageName != other.EventStageName) return false;
    if (ActiveSectionId != other.ActiveSectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventId) hash ^= EventId.GetHashCode();
    if (HasEventTag) hash ^= EventTag.GetHashCode();
    if (HasEventName) hash ^= EventName.GetHashCode();
    if (HasEventTimeStart) hash ^= EventTimeStart.GetHashCode();
    if (HasEventTimeEnd) hash ^= EventTimeEnd.GetHashCode();
    if (HasEventPublic) hash ^= EventPublic.GetHashCode();
    if (HasEventStageId) hash ^= EventStageId.GetHashCode();
    if (HasEventStageName) hash ^= EventStageName.GetHashCode();
    if (HasActiveSectionId) hash ^= ActiveSectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteInt32(EventId);
    }
    if (HasEventTag) {
      output.WriteRawTag(18);
      output.WriteString(EventTag);
    }
    if (HasEventName) {
      output.WriteRawTag(26);
      output.WriteString(EventName);
    }
    if (HasEventTimeStart) {
      output.WriteRawTag(32);
      output.WriteUInt32(EventTimeStart);
    }
    if (HasEventTimeEnd) {
      output.WriteRawTag(40);
      output.WriteUInt32(EventTimeEnd);
    }
    if (HasEventPublic) {
      output.WriteRawTag(48);
      output.WriteInt32(EventPublic);
    }
    if (HasEventStageId) {
      output.WriteRawTag(56);
      output.WriteInt32(EventStageId);
    }
    if (HasEventStageName) {
      output.WriteRawTag(66);
      output.WriteString(EventStageName);
    }
    if (HasActiveSectionId) {
      output.WriteRawTag(72);
      output.WriteUInt32(ActiveSectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteInt32(EventId);
    }
    if (HasEventTag) {
      output.WriteRawTag(18);
      output.WriteString(EventTag);
    }
    if (HasEventName) {
      output.WriteRawTag(26);
      output.WriteString(EventName);
    }
    if (HasEventTimeStart) {
      output.WriteRawTag(32);
      output.WriteUInt32(EventTimeStart);
    }
    if (HasEventTimeEnd) {
      output.WriteRawTag(40);
      output.WriteUInt32(EventTimeEnd);
    }
    if (HasEventPublic) {
      output.WriteRawTag(48);
      output.WriteInt32(EventPublic);
    }
    if (HasEventStageId) {
      output.WriteRawTag(56);
      output.WriteInt32(EventStageId);
    }
    if (HasEventStageName) {
      output.WriteRawTag(66);
      output.WriteString(EventStageName);
    }
    if (HasActiveSectionId) {
      output.WriteRawTag(72);
      output.WriteUInt32(ActiveSectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventId);
    }
    if (HasEventTag) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EventTag);
    }
    if (HasEventName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
    }
    if (HasEventTimeStart) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventTimeStart);
    }
    if (HasEventTimeEnd) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventTimeEnd);
    }
    if (HasEventPublic) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventPublic);
    }
    if (HasEventStageId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventStageId);
    }
    if (HasEventStageName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EventStageName);
    }
    if (HasActiveSectionId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActiveSectionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(TournamentEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasEventId) {
      EventId = other.EventId;
    }
    if (other.HasEventTag) {
      EventTag = other.EventTag;
    }
    if (other.HasEventName) {
      EventName = other.EventName;
    }
    if (other.HasEventTimeStart) {
      EventTimeStart = other.EventTimeStart;
    }
    if (other.HasEventTimeEnd) {
      EventTimeEnd = other.EventTimeEnd;
    }
    if (other.HasEventPublic) {
      EventPublic = other.EventPublic;
    }
    if (other.HasEventStageId) {
      EventStageId = other.EventStageId;
    }
    if (other.HasEventStageName) {
      EventStageName = other.EventStageName;
    }
    if (other.HasActiveSectionId) {
      ActiveSectionId = other.ActiveSectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EventId = input.ReadInt32();
          break;
        }
        case 18: {
          EventTag = input.ReadString();
          break;
        }
        case 26: {
          EventName = input.ReadString();
          break;
        }
        case 32: {
          EventTimeStart = input.ReadUInt32();
          break;
        }
        case 40: {
          EventTimeEnd = input.ReadUInt32();
          break;
        }
        case 48: {
          EventPublic = input.ReadInt32();
          break;
        }
        case 56: {
          EventStageId = input.ReadInt32();
          break;
        }
        case 66: {
          EventStageName = input.ReadString();
          break;
        }
        case 72: {
          ActiveSectionId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EventId = input.ReadInt32();
          break;
        }
        case 18: {
          EventTag = input.ReadString();
          break;
        }
        case 26: {
          EventName = input.ReadString();
          break;
        }
        case 32: {
          EventTimeStart = input.ReadUInt32();
          break;
        }
        case 40: {
          EventTimeEnd = input.ReadUInt32();
          break;
        }
        case 48: {
          EventPublic = input.ReadInt32();
          break;
        }
        case 56: {
          EventStageId = input.ReadInt32();
          break;
        }
        case 66: {
          EventStageName = input.ReadString();
          break;
        }
        case 72: {
          ActiveSectionId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class GlobalStatistics : pb::IMessage<GlobalStatistics>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GlobalStatistics> _parser = new pb::MessageParser<GlobalStatistics>(() => new GlobalStatistics());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GlobalStatistics> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GlobalStatistics() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GlobalStatistics(GlobalStatistics other) : this() {
    _hasBits0 = other._hasBits0;
    playersOnline_ = other.playersOnline_;
    serversOnline_ = other.serversOnline_;
    playersSearching_ = other.playersSearching_;
    serversAvailable_ = other.serversAvailable_;
    ongoingMatches_ = other.ongoingMatches_;
    searchTimeAvg_ = other.searchTimeAvg_;
    searchStatistics_ = other.searchStatistics_.Clone();
    mainPostUrl_ = other.mainPostUrl_;
    requiredAppidVersion_ = other.requiredAppidVersion_;
    pricesheetVersion_ = other.pricesheetVersion_;
    twitchStreamsVersion_ = other.twitchStreamsVersion_;
    activeTournamentEventid_ = other.activeTournamentEventid_;
    activeSurveyId_ = other.activeSurveyId_;
    rtime32Cur_ = other.rtime32Cur_;
    requiredAppidVersion2_ = other.requiredAppidVersion2_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GlobalStatistics Clone() {
    return new GlobalStatistics(this);
  }

  /// <summary>Field number for the "players_online" field.</summary>
  public const int PlayersOnlineFieldNumber = 1;
  private readonly static uint PlayersOnlineDefaultValue = 0;

  private uint playersOnline_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayersOnline {
    get { if ((_hasBits0 & 1) != 0) { return playersOnline_; } else { return PlayersOnlineDefaultValue; } }
    set {
      _hasBits0 |= 1;
      playersOnline_ = value;
    }
  }
  /// <summary>Gets whether the "players_online" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayersOnline {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "players_online" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayersOnline() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "servers_online" field.</summary>
  public const int ServersOnlineFieldNumber = 2;
  private readonly static uint ServersOnlineDefaultValue = 0;

  private uint serversOnline_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServersOnline {
    get { if ((_hasBits0 & 2) != 0) { return serversOnline_; } else { return ServersOnlineDefaultValue; } }
    set {
      _hasBits0 |= 2;
      serversOnline_ = value;
    }
  }
  /// <summary>Gets whether the "servers_online" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServersOnline {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "servers_online" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServersOnline() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "players_searching" field.</summary>
  public const int PlayersSearchingFieldNumber = 3;
  private readonly static uint PlayersSearchingDefaultValue = 0;

  private uint playersSearching_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayersSearching {
    get { if ((_hasBits0 & 4) != 0) { return playersSearching_; } else { return PlayersSearchingDefaultValue; } }
    set {
      _hasBits0 |= 4;
      playersSearching_ = value;
    }
  }
  /// <summary>Gets whether the "players_searching" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayersSearching {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "players_searching" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayersSearching() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "servers_available" field.</summary>
  public const int ServersAvailableFieldNumber = 4;
  private readonly static uint ServersAvailableDefaultValue = 0;

  private uint serversAvailable_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServersAvailable {
    get { if ((_hasBits0 & 8) != 0) { return serversAvailable_; } else { return ServersAvailableDefaultValue; } }
    set {
      _hasBits0 |= 8;
      serversAvailable_ = value;
    }
  }
  /// <summary>Gets whether the "servers_available" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServersAvailable {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "servers_available" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServersAvailable() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "ongoing_matches" field.</summary>
  public const int OngoingMatchesFieldNumber = 5;
  private readonly static uint OngoingMatchesDefaultValue = 0;

  private uint ongoingMatches_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint OngoingMatches {
    get { if ((_hasBits0 & 16) != 0) { return ongoingMatches_; } else { return OngoingMatchesDefaultValue; } }
    set {
      _hasBits0 |= 16;
      ongoingMatches_ = value;
    }
  }
  /// <summary>Gets whether the "ongoing_matches" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOngoingMatches {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "ongoing_matches" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOngoingMatches() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "search_time_avg" field.</summary>
  public const int SearchTimeAvgFieldNumber = 6;
  private readonly static uint SearchTimeAvgDefaultValue = 0;

  private uint searchTimeAvg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SearchTimeAvg {
    get { if ((_hasBits0 & 32) != 0) { return searchTimeAvg_; } else { return SearchTimeAvgDefaultValue; } }
    set {
      _hasBits0 |= 32;
      searchTimeAvg_ = value;
    }
  }
  /// <summary>Gets whether the "search_time_avg" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSearchTimeAvg {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "search_time_avg" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSearchTimeAvg() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "search_statistics" field.</summary>
  public const int SearchStatisticsFieldNumber = 7;
  private static readonly pb::FieldCodec<global::DetailedSearchStatistic> _repeated_searchStatistics_codec
      = pb::FieldCodec.ForMessage(58, global::DetailedSearchStatistic.Parser);
  private readonly pbc::RepeatedField<global::DetailedSearchStatistic> searchStatistics_ = new pbc::RepeatedField<global::DetailedSearchStatistic>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::DetailedSearchStatistic> SearchStatistics {
    get { return searchStatistics_; }
  }

  /// <summary>Field number for the "main_post_url" field.</summary>
  public const int MainPostUrlFieldNumber = 8;
  private readonly static string MainPostUrlDefaultValue = "";

  private string mainPostUrl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MainPostUrl {
    get { return mainPostUrl_ ?? MainPostUrlDefaultValue; }
    set {
      mainPostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "main_post_url" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMainPostUrl {
    get { return mainPostUrl_ != null; }
  }
  /// <summary>Clears the value of the "main_post_url" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMainPostUrl() {
    mainPostUrl_ = null;
  }

  /// <summary>Field number for the "required_appid_version" field.</summary>
  public const int RequiredAppidVersionFieldNumber = 9;
  private readonly static uint RequiredAppidVersionDefaultValue = 0;

  private uint requiredAppidVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RequiredAppidVersion {
    get { if ((_hasBits0 & 64) != 0) { return requiredAppidVersion_; } else { return RequiredAppidVersionDefaultValue; } }
    set {
      _hasBits0 |= 64;
      requiredAppidVersion_ = value;
    }
  }
  /// <summary>Gets whether the "required_appid_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRequiredAppidVersion {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "required_appid_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRequiredAppidVersion() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "pricesheet_version" field.</summary>
  public const int PricesheetVersionFieldNumber = 10;
  private readonly static uint PricesheetVersionDefaultValue = 0;

  private uint pricesheetVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PricesheetVersion {
    get { if ((_hasBits0 & 128) != 0) { return pricesheetVersion_; } else { return PricesheetVersionDefaultValue; } }
    set {
      _hasBits0 |= 128;
      pricesheetVersion_ = value;
    }
  }
  /// <summary>Gets whether the "pricesheet_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPricesheetVersion {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "pricesheet_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPricesheetVersion() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "twitch_streams_version" field.</summary>
  public const int TwitchStreamsVersionFieldNumber = 11;
  private readonly static uint TwitchStreamsVersionDefaultValue = 0;

  private uint twitchStreamsVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TwitchStreamsVersion {
    get { if ((_hasBits0 & 256) != 0) { return twitchStreamsVersion_; } else { return TwitchStreamsVersionDefaultValue; } }
    set {
      _hasBits0 |= 256;
      twitchStreamsVersion_ = value;
    }
  }
  /// <summary>Gets whether the "twitch_streams_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTwitchStreamsVersion {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "twitch_streams_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTwitchStreamsVersion() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "active_tournament_eventid" field.</summary>
  public const int ActiveTournamentEventidFieldNumber = 12;
  private readonly static uint ActiveTournamentEventidDefaultValue = 0;

  private uint activeTournamentEventid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ActiveTournamentEventid {
    get { if ((_hasBits0 & 512) != 0) { return activeTournamentEventid_; } else { return ActiveTournamentEventidDefaultValue; } }
    set {
      _hasBits0 |= 512;
      activeTournamentEventid_ = value;
    }
  }
  /// <summary>Gets whether the "active_tournament_eventid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasActiveTournamentEventid {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "active_tournament_eventid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearActiveTournamentEventid() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "active_survey_id" field.</summary>
  public const int ActiveSurveyIdFieldNumber = 13;
  private readonly static uint ActiveSurveyIdDefaultValue = 0;

  private uint activeSurveyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ActiveSurveyId {
    get { if ((_hasBits0 & 1024) != 0) { return activeSurveyId_; } else { return ActiveSurveyIdDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      activeSurveyId_ = value;
    }
  }
  /// <summary>Gets whether the "active_survey_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasActiveSurveyId {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "active_survey_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearActiveSurveyId() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "rtime32_cur" field.</summary>
  public const int Rtime32CurFieldNumber = 14;
  private readonly static uint Rtime32CurDefaultValue = 0;

  private uint rtime32Cur_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32Cur {
    get { if ((_hasBits0 & 2048) != 0) { return rtime32Cur_; } else { return Rtime32CurDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      rtime32Cur_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_cur" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32Cur {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_cur" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32Cur() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "required_appid_version2" field.</summary>
  public const int RequiredAppidVersion2FieldNumber = 16;
  private readonly static uint RequiredAppidVersion2DefaultValue = 0;

  private uint requiredAppidVersion2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RequiredAppidVersion2 {
    get { if ((_hasBits0 & 4096) != 0) { return requiredAppidVersion2_; } else { return RequiredAppidVersion2DefaultValue; } }
    set {
      _hasBits0 |= 4096;
      requiredAppidVersion2_ = value;
    }
  }
  /// <summary>Gets whether the "required_appid_version2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRequiredAppidVersion2 {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "required_appid_version2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRequiredAppidVersion2() {
    _hasBits0 &= ~4096;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GlobalStatistics);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GlobalStatistics other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayersOnline != other.PlayersOnline) return false;
    if (ServersOnline != other.ServersOnline) return false;
    if (PlayersSearching != other.PlayersSearching) return false;
    if (ServersAvailable != other.ServersAvailable) return false;
    if (OngoingMatches != other.OngoingMatches) return false;
    if (SearchTimeAvg != other.SearchTimeAvg) return false;
    if(!searchStatistics_.Equals(other.searchStatistics_)) return false;
    if (MainPostUrl != other.MainPostUrl) return false;
    if (RequiredAppidVersion != other.RequiredAppidVersion) return false;
    if (PricesheetVersion != other.PricesheetVersion) return false;
    if (TwitchStreamsVersion != other.TwitchStreamsVersion) return false;
    if (ActiveTournamentEventid != other.ActiveTournamentEventid) return false;
    if (ActiveSurveyId != other.ActiveSurveyId) return false;
    if (Rtime32Cur != other.Rtime32Cur) return false;
    if (RequiredAppidVersion2 != other.RequiredAppidVersion2) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPlayersOnline) hash ^= PlayersOnline.GetHashCode();
    if (HasServersOnline) hash ^= ServersOnline.GetHashCode();
    if (HasPlayersSearching) hash ^= PlayersSearching.GetHashCode();
    if (HasServersAvailable) hash ^= ServersAvailable.GetHashCode();
    if (HasOngoingMatches) hash ^= OngoingMatches.GetHashCode();
    if (HasSearchTimeAvg) hash ^= SearchTimeAvg.GetHashCode();
    hash ^= searchStatistics_.GetHashCode();
    if (HasMainPostUrl) hash ^= MainPostUrl.GetHashCode();
    if (HasRequiredAppidVersion) hash ^= RequiredAppidVersion.GetHashCode();
    if (HasPricesheetVersion) hash ^= PricesheetVersion.GetHashCode();
    if (HasTwitchStreamsVersion) hash ^= TwitchStreamsVersion.GetHashCode();
    if (HasActiveTournamentEventid) hash ^= ActiveTournamentEventid.GetHashCode();
    if (HasActiveSurveyId) hash ^= ActiveSurveyId.GetHashCode();
    if (HasRtime32Cur) hash ^= Rtime32Cur.GetHashCode();
    if (HasRequiredAppidVersion2) hash ^= RequiredAppidVersion2.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPlayersOnline) {
      output.WriteRawTag(8);
      output.WriteUInt32(PlayersOnline);
    }
    if (HasServersOnline) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServersOnline);
    }
    if (HasPlayersSearching) {
      output.WriteRawTag(24);
      output.WriteUInt32(PlayersSearching);
    }
    if (HasServersAvailable) {
      output.WriteRawTag(32);
      output.WriteUInt32(ServersAvailable);
    }
    if (HasOngoingMatches) {
      output.WriteRawTag(40);
      output.WriteUInt32(OngoingMatches);
    }
    if (HasSearchTimeAvg) {
      output.WriteRawTag(48);
      output.WriteUInt32(SearchTimeAvg);
    }
    searchStatistics_.WriteTo(output, _repeated_searchStatistics_codec);
    if (HasMainPostUrl) {
      output.WriteRawTag(66);
      output.WriteString(MainPostUrl);
    }
    if (HasRequiredAppidVersion) {
      output.WriteRawTag(72);
      output.WriteUInt32(RequiredAppidVersion);
    }
    if (HasPricesheetVersion) {
      output.WriteRawTag(80);
      output.WriteUInt32(PricesheetVersion);
    }
    if (HasTwitchStreamsVersion) {
      output.WriteRawTag(88);
      output.WriteUInt32(TwitchStreamsVersion);
    }
    if (HasActiveTournamentEventid) {
      output.WriteRawTag(96);
      output.WriteUInt32(ActiveTournamentEventid);
    }
    if (HasActiveSurveyId) {
      output.WriteRawTag(104);
      output.WriteUInt32(ActiveSurveyId);
    }
    if (HasRtime32Cur) {
      output.WriteRawTag(112);
      output.WriteUInt32(Rtime32Cur);
    }
    if (HasRequiredAppidVersion2) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(RequiredAppidVersion2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPlayersOnline) {
      output.WriteRawTag(8);
      output.WriteUInt32(PlayersOnline);
    }
    if (HasServersOnline) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServersOnline);
    }
    if (HasPlayersSearching) {
      output.WriteRawTag(24);
      output.WriteUInt32(PlayersSearching);
    }
    if (HasServersAvailable) {
      output.WriteRawTag(32);
      output.WriteUInt32(ServersAvailable);
    }
    if (HasOngoingMatches) {
      output.WriteRawTag(40);
      output.WriteUInt32(OngoingMatches);
    }
    if (HasSearchTimeAvg) {
      output.WriteRawTag(48);
      output.WriteUInt32(SearchTimeAvg);
    }
    searchStatistics_.WriteTo(ref output, _repeated_searchStatistics_codec);
    if (HasMainPostUrl) {
      output.WriteRawTag(66);
      output.WriteString(MainPostUrl);
    }
    if (HasRequiredAppidVersion) {
      output.WriteRawTag(72);
      output.WriteUInt32(RequiredAppidVersion);
    }
    if (HasPricesheetVersion) {
      output.WriteRawTag(80);
      output.WriteUInt32(PricesheetVersion);
    }
    if (HasTwitchStreamsVersion) {
      output.WriteRawTag(88);
      output.WriteUInt32(TwitchStreamsVersion);
    }
    if (HasActiveTournamentEventid) {
      output.WriteRawTag(96);
      output.WriteUInt32(ActiveTournamentEventid);
    }
    if (HasActiveSurveyId) {
      output.WriteRawTag(104);
      output.WriteUInt32(ActiveSurveyId);
    }
    if (HasRtime32Cur) {
      output.WriteRawTag(112);
      output.WriteUInt32(Rtime32Cur);
    }
    if (HasRequiredAppidVersion2) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(RequiredAppidVersion2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPlayersOnline) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayersOnline);
    }
    if (HasServersOnline) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServersOnline);
    }
    if (HasPlayersSearching) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayersSearching);
    }
    if (HasServersAvailable) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServersAvailable);
    }
    if (HasOngoingMatches) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OngoingMatches);
    }
    if (HasSearchTimeAvg) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SearchTimeAvg);
    }
    size += searchStatistics_.CalculateSize(_repeated_searchStatistics_codec);
    if (HasMainPostUrl) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MainPostUrl);
    }
    if (HasRequiredAppidVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredAppidVersion);
    }
    if (HasPricesheetVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PricesheetVersion);
    }
    if (HasTwitchStreamsVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TwitchStreamsVersion);
    }
    if (HasActiveTournamentEventid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActiveTournamentEventid);
    }
    if (HasActiveSurveyId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActiveSurveyId);
    }
    if (HasRtime32Cur) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32Cur);
    }
    if (HasRequiredAppidVersion2) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredAppidVersion2);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GlobalStatistics other) {
    if (other == null) {
      return;
    }
    if (other.HasPlayersOnline) {
      PlayersOnline = other.PlayersOnline;
    }
    if (other.HasServersOnline) {
      ServersOnline = other.ServersOnline;
    }
    if (other.HasPlayersSearching) {
      PlayersSearching = other.PlayersSearching;
    }
    if (other.HasServersAvailable) {
      ServersAvailable = other.ServersAvailable;
    }
    if (other.HasOngoingMatches) {
      OngoingMatches = other.OngoingMatches;
    }
    if (other.HasSearchTimeAvg) {
      SearchTimeAvg = other.SearchTimeAvg;
    }
    searchStatistics_.Add(other.searchStatistics_);
    if (other.HasMainPostUrl) {
      MainPostUrl = other.MainPostUrl;
    }
    if (other.HasRequiredAppidVersion) {
      RequiredAppidVersion = other.RequiredAppidVersion;
    }
    if (other.HasPricesheetVersion) {
      PricesheetVersion = other.PricesheetVersion;
    }
    if (other.HasTwitchStreamsVersion) {
      TwitchStreamsVersion = other.TwitchStreamsVersion;
    }
    if (other.HasActiveTournamentEventid) {
      ActiveTournamentEventid = other.ActiveTournamentEventid;
    }
    if (other.HasActiveSurveyId) {
      ActiveSurveyId = other.ActiveSurveyId;
    }
    if (other.HasRtime32Cur) {
      Rtime32Cur = other.Rtime32Cur;
    }
    if (other.HasRequiredAppidVersion2) {
      RequiredAppidVersion2 = other.RequiredAppidVersion2;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PlayersOnline = input.ReadUInt32();
          break;
        }
        case 16: {
          ServersOnline = input.ReadUInt32();
          break;
        }
        case 24: {
          PlayersSearching = input.ReadUInt32();
          break;
        }
        case 32: {
          ServersAvailable = input.ReadUInt32();
          break;
        }
        case 40: {
          OngoingMatches = input.ReadUInt32();
          break;
        }
        case 48: {
          SearchTimeAvg = input.ReadUInt32();
          break;
        }
        case 58: {
          searchStatistics_.AddEntriesFrom(input, _repeated_searchStatistics_codec);
          break;
        }
        case 66: {
          MainPostUrl = input.ReadString();
          break;
        }
        case 72: {
          RequiredAppidVersion = input.ReadUInt32();
          break;
        }
        case 80: {
          PricesheetVersion = input.ReadUInt32();
          break;
        }
        case 88: {
          TwitchStreamsVersion = input.ReadUInt32();
          break;
        }
        case 96: {
          ActiveTournamentEventid = input.ReadUInt32();
          break;
        }
        case 104: {
          ActiveSurveyId = input.ReadUInt32();
          break;
        }
        case 112: {
          Rtime32Cur = input.ReadUInt32();
          break;
        }
        case 128: {
          RequiredAppidVersion2 = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PlayersOnline = input.ReadUInt32();
          break;
        }
        case 16: {
          ServersOnline = input.ReadUInt32();
          break;
        }
        case 24: {
          PlayersSearching = input.ReadUInt32();
          break;
        }
        case 32: {
          ServersAvailable = input.ReadUInt32();
          break;
        }
        case 40: {
          OngoingMatches = input.ReadUInt32();
          break;
        }
        case 48: {
          SearchTimeAvg = input.ReadUInt32();
          break;
        }
        case 58: {
          searchStatistics_.AddEntriesFrom(ref input, _repeated_searchStatistics_codec);
          break;
        }
        case 66: {
          MainPostUrl = input.ReadString();
          break;
        }
        case 72: {
          RequiredAppidVersion = input.ReadUInt32();
          break;
        }
        case 80: {
          PricesheetVersion = input.ReadUInt32();
          break;
        }
        case 88: {
          TwitchStreamsVersion = input.ReadUInt32();
          break;
        }
        case 96: {
          ActiveTournamentEventid = input.ReadUInt32();
          break;
        }
        case 104: {
          ActiveSurveyId = input.ReadUInt32();
          break;
        }
        case 112: {
          Rtime32Cur = input.ReadUInt32();
          break;
        }
        case 128: {
          RequiredAppidVersion2 = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class OperationalStatisticDescription : pb::IMessage<OperationalStatisticDescription>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<OperationalStatisticDescription> _parser = new pb::MessageParser<OperationalStatisticDescription>(() => new OperationalStatisticDescription());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<OperationalStatisticDescription> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticDescription() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticDescription(OperationalStatisticDescription other) : this() {
    _hasBits0 = other._hasBits0;
    name_ = other.name_;
    idkey_ = other.idkey_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticDescription Clone() {
    return new OperationalStatisticDescription(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "idkey" field.</summary>
  public const int IdkeyFieldNumber = 2;
  private readonly static uint IdkeyDefaultValue = 0;

  private uint idkey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Idkey {
    get { if ((_hasBits0 & 1) != 0) { return idkey_; } else { return IdkeyDefaultValue; } }
    set {
      _hasBits0 |= 1;
      idkey_ = value;
    }
  }
  /// <summary>Gets whether the "idkey" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdkey {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "idkey" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdkey() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as OperationalStatisticDescription);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(OperationalStatisticDescription other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Idkey != other.Idkey) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    if (HasIdkey) hash ^= Idkey.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasIdkey) {
      output.WriteRawTag(16);
      output.WriteUInt32(Idkey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasIdkey) {
      output.WriteRawTag(16);
      output.WriteUInt32(Idkey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasIdkey) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Idkey);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(OperationalStatisticDescription other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasIdkey) {
      Idkey = other.Idkey;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Idkey = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Idkey = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class OperationalStatisticElement : pb::IMessage<OperationalStatisticElement>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<OperationalStatisticElement> _parser = new pb::MessageParser<OperationalStatisticElement>(() => new OperationalStatisticElement());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<OperationalStatisticElement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticElement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticElement(OperationalStatisticElement other) : this() {
    _hasBits0 = other._hasBits0;
    idkey_ = other.idkey_;
    values_ = other.values_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticElement Clone() {
    return new OperationalStatisticElement(this);
  }

  /// <summary>Field number for the "idkey" field.</summary>
  public const int IdkeyFieldNumber = 1;
  private readonly static uint IdkeyDefaultValue = 0;

  private uint idkey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Idkey {
    get { if ((_hasBits0 & 1) != 0) { return idkey_; } else { return IdkeyDefaultValue; } }
    set {
      _hasBits0 |= 1;
      idkey_ = value;
    }
  }
  /// <summary>Gets whether the "idkey" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdkey {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "idkey" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdkey() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "values" field.</summary>
  public const int ValuesFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_values_codec
      = pb::FieldCodec.ForInt32(16);
  private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Values {
    get { return values_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as OperationalStatisticElement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(OperationalStatisticElement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Idkey != other.Idkey) return false;
    if(!values_.Equals(other.values_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasIdkey) hash ^= Idkey.GetHashCode();
    hash ^= values_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasIdkey) {
      output.WriteRawTag(8);
      output.WriteUInt32(Idkey);
    }
    values_.WriteTo(output, _repeated_values_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasIdkey) {
      output.WriteRawTag(8);
      output.WriteUInt32(Idkey);
    }
    values_.WriteTo(ref output, _repeated_values_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasIdkey) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Idkey);
    }
    size += values_.CalculateSize(_repeated_values_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(OperationalStatisticElement other) {
    if (other == null) {
      return;
    }
    if (other.HasIdkey) {
      Idkey = other.Idkey;
    }
    values_.Add(other.values_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Idkey = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          values_.AddEntriesFrom(input, _repeated_values_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Idkey = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          values_.AddEntriesFrom(ref input, _repeated_values_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class OperationalStatisticsPacket : pb::IMessage<OperationalStatisticsPacket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<OperationalStatisticsPacket> _parser = new pb::MessageParser<OperationalStatisticsPacket>(() => new OperationalStatisticsPacket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<OperationalStatisticsPacket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticsPacket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticsPacket(OperationalStatisticsPacket other) : this() {
    _hasBits0 = other._hasBits0;
    packetid_ = other.packetid_;
    mstimestamp_ = other.mstimestamp_;
    values_ = other.values_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalStatisticsPacket Clone() {
    return new OperationalStatisticsPacket(this);
  }

  /// <summary>Field number for the "packetid" field.</summary>
  public const int PacketidFieldNumber = 1;
  private readonly static int PacketidDefaultValue = 0;

  private int packetid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Packetid {
    get { if ((_hasBits0 & 1) != 0) { return packetid_; } else { return PacketidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      packetid_ = value;
    }
  }
  /// <summary>Gets whether the "packetid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "packetid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "mstimestamp" field.</summary>
  public const int MstimestampFieldNumber = 2;
  private readonly static int MstimestampDefaultValue = 0;

  private int mstimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Mstimestamp {
    get { if ((_hasBits0 & 2) != 0) { return mstimestamp_; } else { return MstimestampDefaultValue; } }
    set {
      _hasBits0 |= 2;
      mstimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "mstimestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMstimestamp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "mstimestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMstimestamp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "values" field.</summary>
  public const int ValuesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::OperationalStatisticElement> _repeated_values_codec
      = pb::FieldCodec.ForMessage(26, global::OperationalStatisticElement.Parser);
  private readonly pbc::RepeatedField<global::OperationalStatisticElement> values_ = new pbc::RepeatedField<global::OperationalStatisticElement>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::OperationalStatisticElement> Values {
    get { return values_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as OperationalStatisticsPacket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(OperationalStatisticsPacket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Packetid != other.Packetid) return false;
    if (Mstimestamp != other.Mstimestamp) return false;
    if(!values_.Equals(other.values_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPacketid) hash ^= Packetid.GetHashCode();
    if (HasMstimestamp) hash ^= Mstimestamp.GetHashCode();
    hash ^= values_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPacketid) {
      output.WriteRawTag(8);
      output.WriteInt32(Packetid);
    }
    if (HasMstimestamp) {
      output.WriteRawTag(16);
      output.WriteInt32(Mstimestamp);
    }
    values_.WriteTo(output, _repeated_values_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPacketid) {
      output.WriteRawTag(8);
      output.WriteInt32(Packetid);
    }
    if (HasMstimestamp) {
      output.WriteRawTag(16);
      output.WriteInt32(Mstimestamp);
    }
    values_.WriteTo(ref output, _repeated_values_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPacketid) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Packetid);
    }
    if (HasMstimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mstimestamp);
    }
    size += values_.CalculateSize(_repeated_values_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(OperationalStatisticsPacket other) {
    if (other == null) {
      return;
    }
    if (other.HasPacketid) {
      Packetid = other.Packetid;
    }
    if (other.HasMstimestamp) {
      Mstimestamp = other.Mstimestamp;
    }
    values_.Add(other.values_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Packetid = input.ReadInt32();
          break;
        }
        case 16: {
          Mstimestamp = input.ReadInt32();
          break;
        }
        case 26: {
          values_.AddEntriesFrom(input, _repeated_values_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Packetid = input.ReadInt32();
          break;
        }
        case 16: {
          Mstimestamp = input.ReadInt32();
          break;
        }
        case 26: {
          values_.AddEntriesFrom(ref input, _repeated_values_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class OperationalVarValue : pb::IMessage<OperationalVarValue>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<OperationalVarValue> _parser = new pb::MessageParser<OperationalVarValue>(() => new OperationalVarValue());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<OperationalVarValue> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalVarValue() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalVarValue(OperationalVarValue other) : this() {
    _hasBits0 = other._hasBits0;
    name_ = other.name_;
    ivalue_ = other.ivalue_;
    fvalue_ = other.fvalue_;
    svalue_ = other.svalue_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public OperationalVarValue Clone() {
    return new OperationalVarValue(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "ivalue" field.</summary>
  public const int IvalueFieldNumber = 2;
  private readonly static int IvalueDefaultValue = 0;

  private int ivalue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Ivalue {
    get { if ((_hasBits0 & 1) != 0) { return ivalue_; } else { return IvalueDefaultValue; } }
    set {
      _hasBits0 |= 1;
      ivalue_ = value;
    }
  }
  /// <summary>Gets whether the "ivalue" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIvalue {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ivalue" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIvalue() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "fvalue" field.</summary>
  public const int FvalueFieldNumber = 3;
  private readonly static float FvalueDefaultValue = 0F;

  private float fvalue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Fvalue {
    get { if ((_hasBits0 & 2) != 0) { return fvalue_; } else { return FvalueDefaultValue; } }
    set {
      _hasBits0 |= 2;
      fvalue_ = value;
    }
  }
  /// <summary>Gets whether the "fvalue" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFvalue {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "fvalue" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFvalue() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "svalue" field.</summary>
  public const int SvalueFieldNumber = 4;
  private readonly static pb::ByteString SvalueDefaultValue = pb::ByteString.Empty;

  private pb::ByteString svalue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Svalue {
    get { return svalue_ ?? SvalueDefaultValue; }
    set {
      svalue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "svalue" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSvalue {
    get { return svalue_ != null; }
  }
  /// <summary>Clears the value of the "svalue" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSvalue() {
    svalue_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as OperationalVarValue);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(OperationalVarValue other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Ivalue != other.Ivalue) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Fvalue, other.Fvalue)) return false;
    if (Svalue != other.Svalue) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    if (HasIvalue) hash ^= Ivalue.GetHashCode();
    if (HasFvalue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Fvalue);
    if (HasSvalue) hash ^= Svalue.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasIvalue) {
      output.WriteRawTag(16);
      output.WriteInt32(Ivalue);
    }
    if (HasFvalue) {
      output.WriteRawTag(29);
      output.WriteFloat(Fvalue);
    }
    if (HasSvalue) {
      output.WriteRawTag(34);
      output.WriteBytes(Svalue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasIvalue) {
      output.WriteRawTag(16);
      output.WriteInt32(Ivalue);
    }
    if (HasFvalue) {
      output.WriteRawTag(29);
      output.WriteFloat(Fvalue);
    }
    if (HasSvalue) {
      output.WriteRawTag(34);
      output.WriteBytes(Svalue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasIvalue) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ivalue);
    }
    if (HasFvalue) {
      size += 1 + 4;
    }
    if (HasSvalue) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Svalue);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(OperationalVarValue other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasIvalue) {
      Ivalue = other.Ivalue;
    }
    if (other.HasFvalue) {
      Fvalue = other.Fvalue;
    }
    if (other.HasSvalue) {
      Svalue = other.Svalue;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Ivalue = input.ReadInt32();
          break;
        }
        case 29: {
          Fvalue = input.ReadFloat();
          break;
        }
        case 34: {
          Svalue = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          Ivalue = input.ReadInt32();
          break;
        }
        case 29: {
          Fvalue = input.ReadFloat();
          break;
        }
        case 34: {
          Svalue = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerRankingInfo : pb::IMessage<PlayerRankingInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerRankingInfo> _parser = new pb::MessageParser<PlayerRankingInfo>(() => new PlayerRankingInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerRankingInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerRankingInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerRankingInfo(PlayerRankingInfo other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    rankId_ = other.rankId_;
    wins_ = other.wins_;
    rankChange_ = other.rankChange_;
    rankTypeId_ = other.rankTypeId_;
    tvControl_ = other.tvControl_;
    rankWindowStats_ = other.rankWindowStats_;
    leaderboardName_ = other.leaderboardName_;
    rankIfWin_ = other.rankIfWin_;
    rankIfLose_ = other.rankIfLose_;
    rankIfTie_ = other.rankIfTie_;
    perMapRank_ = other.perMapRank_.Clone();
    leaderboardNameStatus_ = other.leaderboardNameStatus_;
    highestRank_ = other.highestRank_;
    rankExpiry_ = other.rankExpiry_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerRankingInfo Clone() {
    return new PlayerRankingInfo(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "rank_id" field.</summary>
  public const int RankIdFieldNumber = 2;
  private readonly static uint RankIdDefaultValue = 0;

  private uint rankId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RankId {
    get { if ((_hasBits0 & 2) != 0) { return rankId_; } else { return RankIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      rankId_ = value;
    }
  }
  /// <summary>Gets whether the "rank_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRankId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "rank_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRankId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "wins" field.</summary>
  public const int WinsFieldNumber = 3;
  private readonly static uint WinsDefaultValue = 0;

  private uint wins_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Wins {
    get { if ((_hasBits0 & 4) != 0) { return wins_; } else { return WinsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      wins_ = value;
    }
  }
  /// <summary>Gets whether the "wins" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWins {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "wins" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWins() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "rank_change" field.</summary>
  public const int RankChangeFieldNumber = 4;
  private readonly static float RankChangeDefaultValue = 0F;

  private float rankChange_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float RankChange {
    get { if ((_hasBits0 & 8) != 0) { return rankChange_; } else { return RankChangeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      rankChange_ = value;
    }
  }
  /// <summary>Gets whether the "rank_change" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRankChange {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "rank_change" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRankChange() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "rank_type_id" field.</summary>
  public const int RankTypeIdFieldNumber = 6;
  private readonly static uint RankTypeIdDefaultValue = 0;

  private uint rankTypeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RankTypeId {
    get { if ((_hasBits0 & 16) != 0) { return rankTypeId_; } else { return RankTypeIdDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rankTypeId_ = value;
    }
  }
  /// <summary>Gets whether the "rank_type_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRankTypeId {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rank_type_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRankTypeId() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "tv_control" field.</summary>
  public const int TvControlFieldNumber = 7;
  private readonly static uint TvControlDefaultValue = 0;

  private uint tvControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvControl {
    get { if ((_hasBits0 & 32) != 0) { return tvControl_; } else { return TvControlDefaultValue; } }
    set {
      _hasBits0 |= 32;
      tvControl_ = value;
    }
  }
  /// <summary>Gets whether the "tv_control" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvControl {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "tv_control" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvControl() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "rank_window_stats" field.</summary>
  public const int RankWindowStatsFieldNumber = 8;
  private readonly static ulong RankWindowStatsDefaultValue = 0UL;

  private ulong rankWindowStats_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong RankWindowStats {
    get { if ((_hasBits0 & 64) != 0) { return rankWindowStats_; } else { return RankWindowStatsDefaultValue; } }
    set {
      _hasBits0 |= 64;
      rankWindowStats_ = value;
    }
  }
  /// <summary>Gets whether the "rank_window_stats" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRankWindowStats {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "rank_window_stats" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRankWindowStats() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "leaderboard_name" field.</summary>
  public const int LeaderboardNameFieldNumber = 9;
  private readonly static string LeaderboardNameDefaultValue = "";

  private string leaderboardName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LeaderboardName {
    get { return leaderboardName_ ?? LeaderboardNameDefaultValue; }
    set {
      leaderboardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "leaderboard_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLeaderboardName {
    get { return leaderboardName_ != null; }
  }
  /// <summary>Clears the value of the "leaderboard_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLeaderboardName() {
    leaderboardName_ = null;
  }

  /// <summary>Field number for the "rank_if_win" field.</summary>
  public const int RankIfWinFieldNumber = 10;
  private readonly static uint RankIfWinDefaultValue = 0;

  private uint rankIfWin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RankIfWin {
    get { if ((_hasBits0 & 128) != 0) { return rankIfWin_; } else { return RankIfWinDefaultValue; } }
    set {
      _hasBits0 |= 128;
      rankIfWin_ = value;
    }
  }
  /// <summary>Gets whether the "rank_if_win" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRankIfWin {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "rank_if_win" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRankIfWin() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "rank_if_lose" field.</summary>
  public const int RankIfLoseFieldNumber = 11;
  private readonly static uint RankIfLoseDefaultValue = 0;

  private uint rankIfLose_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RankIfLose {
    get { if ((_hasBits0 & 256) != 0) { return rankIfLose_; } else { return RankIfLoseDefaultValue; } }
    set {
      _hasBits0 |= 256;
      rankIfLose_ = value;
    }
  }
  /// <summary>Gets whether the "rank_if_lose" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRankIfLose {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "rank_if_lose" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRankIfLose() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "rank_if_tie" field.</summary>
  public const int RankIfTieFieldNumber = 12;
  private readonly static uint RankIfTieDefaultValue = 0;

  private uint rankIfTie_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RankIfTie {
    get { if ((_hasBits0 & 512) != 0) { return rankIfTie_; } else { return RankIfTieDefaultValue; } }
    set {
      _hasBits0 |= 512;
      rankIfTie_ = value;
    }
  }
  /// <summary>Gets whether the "rank_if_tie" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRankIfTie {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "rank_if_tie" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRankIfTie() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "per_map_rank" field.</summary>
  public const int PerMapRankFieldNumber = 13;
  private static readonly pb::FieldCodec<global::PlayerRankingInfo.Types.PerMapRank> _repeated_perMapRank_codec
      = pb::FieldCodec.ForMessage(106, global::PlayerRankingInfo.Types.PerMapRank.Parser);
  private readonly pbc::RepeatedField<global::PlayerRankingInfo.Types.PerMapRank> perMapRank_ = new pbc::RepeatedField<global::PlayerRankingInfo.Types.PerMapRank>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PlayerRankingInfo.Types.PerMapRank> PerMapRank {
    get { return perMapRank_; }
  }

  /// <summary>Field number for the "leaderboard_name_status" field.</summary>
  public const int LeaderboardNameStatusFieldNumber = 14;
  private readonly static uint LeaderboardNameStatusDefaultValue = 0;

  private uint leaderboardNameStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LeaderboardNameStatus {
    get { if ((_hasBits0 & 1024) != 0) { return leaderboardNameStatus_; } else { return LeaderboardNameStatusDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      leaderboardNameStatus_ = value;
    }
  }
  /// <summary>Gets whether the "leaderboard_name_status" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLeaderboardNameStatus {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "leaderboard_name_status" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLeaderboardNameStatus() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "highest_rank" field.</summary>
  public const int HighestRankFieldNumber = 15;
  private readonly static uint HighestRankDefaultValue = 0;

  private uint highestRank_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HighestRank {
    get { if ((_hasBits0 & 2048) != 0) { return highestRank_; } else { return HighestRankDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      highestRank_ = value;
    }
  }
  /// <summary>Gets whether the "highest_rank" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHighestRank {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "highest_rank" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHighestRank() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "rank_expiry" field.</summary>
  public const int RankExpiryFieldNumber = 16;
  private readonly static uint RankExpiryDefaultValue = 0;

  private uint rankExpiry_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RankExpiry {
    get { if ((_hasBits0 & 4096) != 0) { return rankExpiry_; } else { return RankExpiryDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      rankExpiry_ = value;
    }
  }
  /// <summary>Gets whether the "rank_expiry" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRankExpiry {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "rank_expiry" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRankExpiry() {
    _hasBits0 &= ~4096;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerRankingInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerRankingInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (RankId != other.RankId) return false;
    if (Wins != other.Wins) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RankChange, other.RankChange)) return false;
    if (RankTypeId != other.RankTypeId) return false;
    if (TvControl != other.TvControl) return false;
    if (RankWindowStats != other.RankWindowStats) return false;
    if (LeaderboardName != other.LeaderboardName) return false;
    if (RankIfWin != other.RankIfWin) return false;
    if (RankIfLose != other.RankIfLose) return false;
    if (RankIfTie != other.RankIfTie) return false;
    if(!perMapRank_.Equals(other.perMapRank_)) return false;
    if (LeaderboardNameStatus != other.LeaderboardNameStatus) return false;
    if (HighestRank != other.HighestRank) return false;
    if (RankExpiry != other.RankExpiry) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasRankId) hash ^= RankId.GetHashCode();
    if (HasWins) hash ^= Wins.GetHashCode();
    if (HasRankChange) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RankChange);
    if (HasRankTypeId) hash ^= RankTypeId.GetHashCode();
    if (HasTvControl) hash ^= TvControl.GetHashCode();
    if (HasRankWindowStats) hash ^= RankWindowStats.GetHashCode();
    if (HasLeaderboardName) hash ^= LeaderboardName.GetHashCode();
    if (HasRankIfWin) hash ^= RankIfWin.GetHashCode();
    if (HasRankIfLose) hash ^= RankIfLose.GetHashCode();
    if (HasRankIfTie) hash ^= RankIfTie.GetHashCode();
    hash ^= perMapRank_.GetHashCode();
    if (HasLeaderboardNameStatus) hash ^= LeaderboardNameStatus.GetHashCode();
    if (HasHighestRank) hash ^= HighestRank.GetHashCode();
    if (HasRankExpiry) hash ^= RankExpiry.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasRankId) {
      output.WriteRawTag(16);
      output.WriteUInt32(RankId);
    }
    if (HasWins) {
      output.WriteRawTag(24);
      output.WriteUInt32(Wins);
    }
    if (HasRankChange) {
      output.WriteRawTag(37);
      output.WriteFloat(RankChange);
    }
    if (HasRankTypeId) {
      output.WriteRawTag(48);
      output.WriteUInt32(RankTypeId);
    }
    if (HasTvControl) {
      output.WriteRawTag(56);
      output.WriteUInt32(TvControl);
    }
    if (HasRankWindowStats) {
      output.WriteRawTag(64);
      output.WriteUInt64(RankWindowStats);
    }
    if (HasLeaderboardName) {
      output.WriteRawTag(74);
      output.WriteString(LeaderboardName);
    }
    if (HasRankIfWin) {
      output.WriteRawTag(80);
      output.WriteUInt32(RankIfWin);
    }
    if (HasRankIfLose) {
      output.WriteRawTag(88);
      output.WriteUInt32(RankIfLose);
    }
    if (HasRankIfTie) {
      output.WriteRawTag(96);
      output.WriteUInt32(RankIfTie);
    }
    perMapRank_.WriteTo(output, _repeated_perMapRank_codec);
    if (HasLeaderboardNameStatus) {
      output.WriteRawTag(112);
      output.WriteUInt32(LeaderboardNameStatus);
    }
    if (HasHighestRank) {
      output.WriteRawTag(120);
      output.WriteUInt32(HighestRank);
    }
    if (HasRankExpiry) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(RankExpiry);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasRankId) {
      output.WriteRawTag(16);
      output.WriteUInt32(RankId);
    }
    if (HasWins) {
      output.WriteRawTag(24);
      output.WriteUInt32(Wins);
    }
    if (HasRankChange) {
      output.WriteRawTag(37);
      output.WriteFloat(RankChange);
    }
    if (HasRankTypeId) {
      output.WriteRawTag(48);
      output.WriteUInt32(RankTypeId);
    }
    if (HasTvControl) {
      output.WriteRawTag(56);
      output.WriteUInt32(TvControl);
    }
    if (HasRankWindowStats) {
      output.WriteRawTag(64);
      output.WriteUInt64(RankWindowStats);
    }
    if (HasLeaderboardName) {
      output.WriteRawTag(74);
      output.WriteString(LeaderboardName);
    }
    if (HasRankIfWin) {
      output.WriteRawTag(80);
      output.WriteUInt32(RankIfWin);
    }
    if (HasRankIfLose) {
      output.WriteRawTag(88);
      output.WriteUInt32(RankIfLose);
    }
    if (HasRankIfTie) {
      output.WriteRawTag(96);
      output.WriteUInt32(RankIfTie);
    }
    perMapRank_.WriteTo(ref output, _repeated_perMapRank_codec);
    if (HasLeaderboardNameStatus) {
      output.WriteRawTag(112);
      output.WriteUInt32(LeaderboardNameStatus);
    }
    if (HasHighestRank) {
      output.WriteRawTag(120);
      output.WriteUInt32(HighestRank);
    }
    if (HasRankExpiry) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(RankExpiry);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasRankId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankId);
    }
    if (HasWins) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wins);
    }
    if (HasRankChange) {
      size += 1 + 4;
    }
    if (HasRankTypeId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankTypeId);
    }
    if (HasTvControl) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvControl);
    }
    if (HasRankWindowStats) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RankWindowStats);
    }
    if (HasLeaderboardName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderboardName);
    }
    if (HasRankIfWin) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankIfWin);
    }
    if (HasRankIfLose) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankIfLose);
    }
    if (HasRankIfTie) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankIfTie);
    }
    size += perMapRank_.CalculateSize(_repeated_perMapRank_codec);
    if (HasLeaderboardNameStatus) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeaderboardNameStatus);
    }
    if (HasHighestRank) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HighestRank);
    }
    if (HasRankExpiry) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RankExpiry);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerRankingInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasRankId) {
      RankId = other.RankId;
    }
    if (other.HasWins) {
      Wins = other.Wins;
    }
    if (other.HasRankChange) {
      RankChange = other.RankChange;
    }
    if (other.HasRankTypeId) {
      RankTypeId = other.RankTypeId;
    }
    if (other.HasTvControl) {
      TvControl = other.TvControl;
    }
    if (other.HasRankWindowStats) {
      RankWindowStats = other.RankWindowStats;
    }
    if (other.HasLeaderboardName) {
      LeaderboardName = other.LeaderboardName;
    }
    if (other.HasRankIfWin) {
      RankIfWin = other.RankIfWin;
    }
    if (other.HasRankIfLose) {
      RankIfLose = other.RankIfLose;
    }
    if (other.HasRankIfTie) {
      RankIfTie = other.RankIfTie;
    }
    perMapRank_.Add(other.perMapRank_);
    if (other.HasLeaderboardNameStatus) {
      LeaderboardNameStatus = other.LeaderboardNameStatus;
    }
    if (other.HasHighestRank) {
      HighestRank = other.HighestRank;
    }
    if (other.HasRankExpiry) {
      RankExpiry = other.RankExpiry;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          RankId = input.ReadUInt32();
          break;
        }
        case 24: {
          Wins = input.ReadUInt32();
          break;
        }
        case 37: {
          RankChange = input.ReadFloat();
          break;
        }
        case 48: {
          RankTypeId = input.ReadUInt32();
          break;
        }
        case 56: {
          TvControl = input.ReadUInt32();
          break;
        }
        case 64: {
          RankWindowStats = input.ReadUInt64();
          break;
        }
        case 74: {
          LeaderboardName = input.ReadString();
          break;
        }
        case 80: {
          RankIfWin = input.ReadUInt32();
          break;
        }
        case 88: {
          RankIfLose = input.ReadUInt32();
          break;
        }
        case 96: {
          RankIfTie = input.ReadUInt32();
          break;
        }
        case 106: {
          perMapRank_.AddEntriesFrom(input, _repeated_perMapRank_codec);
          break;
        }
        case 112: {
          LeaderboardNameStatus = input.ReadUInt32();
          break;
        }
        case 120: {
          HighestRank = input.ReadUInt32();
          break;
        }
        case 128: {
          RankExpiry = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          RankId = input.ReadUInt32();
          break;
        }
        case 24: {
          Wins = input.ReadUInt32();
          break;
        }
        case 37: {
          RankChange = input.ReadFloat();
          break;
        }
        case 48: {
          RankTypeId = input.ReadUInt32();
          break;
        }
        case 56: {
          TvControl = input.ReadUInt32();
          break;
        }
        case 64: {
          RankWindowStats = input.ReadUInt64();
          break;
        }
        case 74: {
          LeaderboardName = input.ReadString();
          break;
        }
        case 80: {
          RankIfWin = input.ReadUInt32();
          break;
        }
        case 88: {
          RankIfLose = input.ReadUInt32();
          break;
        }
        case 96: {
          RankIfTie = input.ReadUInt32();
          break;
        }
        case 106: {
          perMapRank_.AddEntriesFrom(ref input, _repeated_perMapRank_codec);
          break;
        }
        case 112: {
          LeaderboardNameStatus = input.ReadUInt32();
          break;
        }
        case 120: {
          HighestRank = input.ReadUInt32();
          break;
        }
        case 128: {
          RankExpiry = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the PlayerRankingInfo message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class PerMapRank : pb::IMessage<PerMapRank>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<PerMapRank> _parser = new pb::MessageParser<PerMapRank>(() => new PerMapRank());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<PerMapRank> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::PlayerRankingInfo.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PerMapRank() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PerMapRank(PerMapRank other) : this() {
        _hasBits0 = other._hasBits0;
        mapId_ = other.mapId_;
        rankId_ = other.rankId_;
        wins_ = other.wins_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PerMapRank Clone() {
        return new PerMapRank(this);
      }

      /// <summary>Field number for the "map_id" field.</summary>
      public const int MapIdFieldNumber = 1;
      private readonly static uint MapIdDefaultValue = 0;

      private uint mapId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MapId {
        get { if ((_hasBits0 & 1) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          mapId_ = value;
        }
      }
      /// <summary>Gets whether the "map_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMapId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "map_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMapId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "rank_id" field.</summary>
      public const int RankIdFieldNumber = 2;
      private readonly static uint RankIdDefaultValue = 0;

      private uint rankId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint RankId {
        get { if ((_hasBits0 & 2) != 0) { return rankId_; } else { return RankIdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          rankId_ = value;
        }
      }
      /// <summary>Gets whether the "rank_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRankId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "rank_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRankId() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "wins" field.</summary>
      public const int WinsFieldNumber = 3;
      private readonly static uint WinsDefaultValue = 0;

      private uint wins_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Wins {
        get { if ((_hasBits0 & 4) != 0) { return wins_; } else { return WinsDefaultValue; } }
        set {
          _hasBits0 |= 4;
          wins_ = value;
        }
      }
      /// <summary>Gets whether the "wins" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasWins {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "wins" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearWins() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as PerMapRank);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(PerMapRank other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (MapId != other.MapId) return false;
        if (RankId != other.RankId) return false;
        if (Wins != other.Wins) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasMapId) hash ^= MapId.GetHashCode();
        if (HasRankId) hash ^= RankId.GetHashCode();
        if (HasWins) hash ^= Wins.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasMapId) {
          output.WriteRawTag(8);
          output.WriteUInt32(MapId);
        }
        if (HasRankId) {
          output.WriteRawTag(16);
          output.WriteUInt32(RankId);
        }
        if (HasWins) {
          output.WriteRawTag(24);
          output.WriteUInt32(Wins);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasMapId) {
          output.WriteRawTag(8);
          output.WriteUInt32(MapId);
        }
        if (HasRankId) {
          output.WriteRawTag(16);
          output.WriteUInt32(RankId);
        }
        if (HasWins) {
          output.WriteRawTag(24);
          output.WriteUInt32(Wins);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasMapId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
        }
        if (HasRankId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankId);
        }
        if (HasWins) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wins);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(PerMapRank other) {
        if (other == null) {
          return;
        }
        if (other.HasMapId) {
          MapId = other.MapId;
        }
        if (other.HasRankId) {
          RankId = other.RankId;
        }
        if (other.HasWins) {
          Wins = other.Wins;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              MapId = input.ReadUInt32();
              break;
            }
            case 16: {
              RankId = input.ReadUInt32();
              break;
            }
            case 24: {
              Wins = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              MapId = input.ReadUInt32();
              break;
            }
            case 16: {
              RankId = input.ReadUInt32();
              break;
            }
            case 24: {
              Wins = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class PlayerCommendationInfo : pb::IMessage<PlayerCommendationInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerCommendationInfo> _parser = new pb::MessageParser<PlayerCommendationInfo>(() => new PlayerCommendationInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerCommendationInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerCommendationInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerCommendationInfo(PlayerCommendationInfo other) : this() {
    _hasBits0 = other._hasBits0;
    cmdFriendly_ = other.cmdFriendly_;
    cmdTeaching_ = other.cmdTeaching_;
    cmdLeader_ = other.cmdLeader_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerCommendationInfo Clone() {
    return new PlayerCommendationInfo(this);
  }

  /// <summary>Field number for the "cmd_friendly" field.</summary>
  public const int CmdFriendlyFieldNumber = 1;
  private readonly static uint CmdFriendlyDefaultValue = 0;

  private uint cmdFriendly_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CmdFriendly {
    get { if ((_hasBits0 & 1) != 0) { return cmdFriendly_; } else { return CmdFriendlyDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cmdFriendly_ = value;
    }
  }
  /// <summary>Gets whether the "cmd_friendly" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCmdFriendly {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "cmd_friendly" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCmdFriendly() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "cmd_teaching" field.</summary>
  public const int CmdTeachingFieldNumber = 2;
  private readonly static uint CmdTeachingDefaultValue = 0;

  private uint cmdTeaching_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CmdTeaching {
    get { if ((_hasBits0 & 2) != 0) { return cmdTeaching_; } else { return CmdTeachingDefaultValue; } }
    set {
      _hasBits0 |= 2;
      cmdTeaching_ = value;
    }
  }
  /// <summary>Gets whether the "cmd_teaching" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCmdTeaching {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "cmd_teaching" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCmdTeaching() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "cmd_leader" field.</summary>
  public const int CmdLeaderFieldNumber = 4;
  private readonly static uint CmdLeaderDefaultValue = 0;

  private uint cmdLeader_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CmdLeader {
    get { if ((_hasBits0 & 4) != 0) { return cmdLeader_; } else { return CmdLeaderDefaultValue; } }
    set {
      _hasBits0 |= 4;
      cmdLeader_ = value;
    }
  }
  /// <summary>Gets whether the "cmd_leader" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCmdLeader {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "cmd_leader" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCmdLeader() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerCommendationInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerCommendationInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CmdFriendly != other.CmdFriendly) return false;
    if (CmdTeaching != other.CmdTeaching) return false;
    if (CmdLeader != other.CmdLeader) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCmdFriendly) hash ^= CmdFriendly.GetHashCode();
    if (HasCmdTeaching) hash ^= CmdTeaching.GetHashCode();
    if (HasCmdLeader) hash ^= CmdLeader.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCmdFriendly) {
      output.WriteRawTag(8);
      output.WriteUInt32(CmdFriendly);
    }
    if (HasCmdTeaching) {
      output.WriteRawTag(16);
      output.WriteUInt32(CmdTeaching);
    }
    if (HasCmdLeader) {
      output.WriteRawTag(32);
      output.WriteUInt32(CmdLeader);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCmdFriendly) {
      output.WriteRawTag(8);
      output.WriteUInt32(CmdFriendly);
    }
    if (HasCmdTeaching) {
      output.WriteRawTag(16);
      output.WriteUInt32(CmdTeaching);
    }
    if (HasCmdLeader) {
      output.WriteRawTag(32);
      output.WriteUInt32(CmdLeader);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCmdFriendly) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CmdFriendly);
    }
    if (HasCmdTeaching) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CmdTeaching);
    }
    if (HasCmdLeader) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CmdLeader);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerCommendationInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasCmdFriendly) {
      CmdFriendly = other.CmdFriendly;
    }
    if (other.HasCmdTeaching) {
      CmdTeaching = other.CmdTeaching;
    }
    if (other.HasCmdLeader) {
      CmdLeader = other.CmdLeader;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CmdFriendly = input.ReadUInt32();
          break;
        }
        case 16: {
          CmdTeaching = input.ReadUInt32();
          break;
        }
        case 32: {
          CmdLeader = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CmdFriendly = input.ReadUInt32();
          break;
        }
        case 16: {
          CmdTeaching = input.ReadUInt32();
          break;
        }
        case 32: {
          CmdLeader = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerMedalsInfo : pb::IMessage<PlayerMedalsInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerMedalsInfo> _parser = new pb::MessageParser<PlayerMedalsInfo>(() => new PlayerMedalsInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerMedalsInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerMedalsInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerMedalsInfo(PlayerMedalsInfo other) : this() {
    _hasBits0 = other._hasBits0;
    displayItemsDefidx_ = other.displayItemsDefidx_.Clone();
    featuredDisplayItemDefidx_ = other.featuredDisplayItemDefidx_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerMedalsInfo Clone() {
    return new PlayerMedalsInfo(this);
  }

  /// <summary>Field number for the "display_items_defidx" field.</summary>
  public const int DisplayItemsDefidxFieldNumber = 7;
  private static readonly pb::FieldCodec<uint> _repeated_displayItemsDefidx_codec
      = pb::FieldCodec.ForUInt32(56);
  private readonly pbc::RepeatedField<uint> displayItemsDefidx_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> DisplayItemsDefidx {
    get { return displayItemsDefidx_; }
  }

  /// <summary>Field number for the "featured_display_item_defidx" field.</summary>
  public const int FeaturedDisplayItemDefidxFieldNumber = 8;
  private readonly static uint FeaturedDisplayItemDefidxDefaultValue = 0;

  private uint featuredDisplayItemDefidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FeaturedDisplayItemDefidx {
    get { if ((_hasBits0 & 1) != 0) { return featuredDisplayItemDefidx_; } else { return FeaturedDisplayItemDefidxDefaultValue; } }
    set {
      _hasBits0 |= 1;
      featuredDisplayItemDefidx_ = value;
    }
  }
  /// <summary>Gets whether the "featured_display_item_defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFeaturedDisplayItemDefidx {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "featured_display_item_defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFeaturedDisplayItemDefidx() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerMedalsInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerMedalsInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!displayItemsDefidx_.Equals(other.displayItemsDefidx_)) return false;
    if (FeaturedDisplayItemDefidx != other.FeaturedDisplayItemDefidx) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= displayItemsDefidx_.GetHashCode();
    if (HasFeaturedDisplayItemDefidx) hash ^= FeaturedDisplayItemDefidx.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    displayItemsDefidx_.WriteTo(output, _repeated_displayItemsDefidx_codec);
    if (HasFeaturedDisplayItemDefidx) {
      output.WriteRawTag(64);
      output.WriteUInt32(FeaturedDisplayItemDefidx);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    displayItemsDefidx_.WriteTo(ref output, _repeated_displayItemsDefidx_codec);
    if (HasFeaturedDisplayItemDefidx) {
      output.WriteRawTag(64);
      output.WriteUInt32(FeaturedDisplayItemDefidx);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += displayItemsDefidx_.CalculateSize(_repeated_displayItemsDefidx_codec);
    if (HasFeaturedDisplayItemDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FeaturedDisplayItemDefidx);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerMedalsInfo other) {
    if (other == null) {
      return;
    }
    displayItemsDefidx_.Add(other.displayItemsDefidx_);
    if (other.HasFeaturedDisplayItemDefidx) {
      FeaturedDisplayItemDefidx = other.FeaturedDisplayItemDefidx;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 58:
        case 56: {
          displayItemsDefidx_.AddEntriesFrom(input, _repeated_displayItemsDefidx_codec);
          break;
        }
        case 64: {
          FeaturedDisplayItemDefidx = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 58:
        case 56: {
          displayItemsDefidx_.AddEntriesFrom(ref input, _repeated_displayItemsDefidx_codec);
          break;
        }
        case 64: {
          FeaturedDisplayItemDefidx = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class AccountActivity : pb::IMessage<AccountActivity>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<AccountActivity> _parser = new pb::MessageParser<AccountActivity>(() => new AccountActivity());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<AccountActivity> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AccountActivity() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AccountActivity(AccountActivity other) : this() {
    _hasBits0 = other._hasBits0;
    activity_ = other.activity_;
    mode_ = other.mode_;
    map_ = other.map_;
    matchid_ = other.matchid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AccountActivity Clone() {
    return new AccountActivity(this);
  }

  /// <summary>Field number for the "activity" field.</summary>
  public const int ActivityFieldNumber = 1;
  private readonly static uint ActivityDefaultValue = 0;

  private uint activity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Activity {
    get { if ((_hasBits0 & 1) != 0) { return activity_; } else { return ActivityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      activity_ = value;
    }
  }
  /// <summary>Gets whether the "activity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasActivity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "activity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearActivity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "mode" field.</summary>
  public const int ModeFieldNumber = 2;
  private readonly static uint ModeDefaultValue = 0;

  private uint mode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Mode {
    get { if ((_hasBits0 & 2) != 0) { return mode_; } else { return ModeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      mode_ = value;
    }
  }
  /// <summary>Gets whether the "mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMode {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMode() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "map" field.</summary>
  public const int MapFieldNumber = 3;
  private readonly static uint MapDefaultValue = 0;

  private uint map_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Map {
    get { if ((_hasBits0 & 4) != 0) { return map_; } else { return MapDefaultValue; } }
    set {
      _hasBits0 |= 4;
      map_ = value;
    }
  }
  /// <summary>Gets whether the "map" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMap {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "map" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMap() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "matchid" field.</summary>
  public const int MatchidFieldNumber = 4;
  private readonly static ulong MatchidDefaultValue = 0UL;

  private ulong matchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Matchid {
    get { if ((_hasBits0 & 8) != 0) { return matchid_; } else { return MatchidDefaultValue; } }
    set {
      _hasBits0 |= 8;
      matchid_ = value;
    }
  }
  /// <summary>Gets whether the "matchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchid {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "matchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchid() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as AccountActivity);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(AccountActivity other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Activity != other.Activity) return false;
    if (Mode != other.Mode) return false;
    if (Map != other.Map) return false;
    if (Matchid != other.Matchid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasActivity) hash ^= Activity.GetHashCode();
    if (HasMode) hash ^= Mode.GetHashCode();
    if (HasMap) hash ^= Map.GetHashCode();
    if (HasMatchid) hash ^= Matchid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasActivity) {
      output.WriteRawTag(8);
      output.WriteUInt32(Activity);
    }
    if (HasMode) {
      output.WriteRawTag(16);
      output.WriteUInt32(Mode);
    }
    if (HasMap) {
      output.WriteRawTag(24);
      output.WriteUInt32(Map);
    }
    if (HasMatchid) {
      output.WriteRawTag(32);
      output.WriteUInt64(Matchid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasActivity) {
      output.WriteRawTag(8);
      output.WriteUInt32(Activity);
    }
    if (HasMode) {
      output.WriteRawTag(16);
      output.WriteUInt32(Mode);
    }
    if (HasMap) {
      output.WriteRawTag(24);
      output.WriteUInt32(Map);
    }
    if (HasMatchid) {
      output.WriteRawTag(32);
      output.WriteUInt64(Matchid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasActivity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Activity);
    }
    if (HasMode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mode);
    }
    if (HasMap) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Map);
    }
    if (HasMatchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Matchid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(AccountActivity other) {
    if (other == null) {
      return;
    }
    if (other.HasActivity) {
      Activity = other.Activity;
    }
    if (other.HasMode) {
      Mode = other.Mode;
    }
    if (other.HasMap) {
      Map = other.Map;
    }
    if (other.HasMatchid) {
      Matchid = other.Matchid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Activity = input.ReadUInt32();
          break;
        }
        case 16: {
          Mode = input.ReadUInt32();
          break;
        }
        case 24: {
          Map = input.ReadUInt32();
          break;
        }
        case 32: {
          Matchid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Activity = input.ReadUInt32();
          break;
        }
        case 16: {
          Mode = input.ReadUInt32();
          break;
        }
        case 24: {
          Map = input.ReadUInt32();
          break;
        }
        case 32: {
          Matchid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class TournamentMatchSetup : pb::IMessage<TournamentMatchSetup>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TournamentMatchSetup> _parser = new pb::MessageParser<TournamentMatchSetup>(() => new TournamentMatchSetup());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<TournamentMatchSetup> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentMatchSetup() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentMatchSetup(TournamentMatchSetup other) : this() {
    _hasBits0 = other._hasBits0;
    eventId_ = other.eventId_;
    teamIdCt_ = other.teamIdCt_;
    teamIdT_ = other.teamIdT_;
    eventStageId_ = other.eventStageId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TournamentMatchSetup Clone() {
    return new TournamentMatchSetup(this);
  }

  /// <summary>Field number for the "event_id" field.</summary>
  public const int EventIdFieldNumber = 1;
  private readonly static int EventIdDefaultValue = 0;

  private int eventId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EventId {
    get { if ((_hasBits0 & 1) != 0) { return eventId_; } else { return EventIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventId_ = value;
    }
  }
  /// <summary>Gets whether the "event_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "event_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "team_id_ct" field.</summary>
  public const int TeamIdCtFieldNumber = 2;
  private readonly static int TeamIdCtDefaultValue = 0;

  private int teamIdCt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamIdCt {
    get { if ((_hasBits0 & 2) != 0) { return teamIdCt_; } else { return TeamIdCtDefaultValue; } }
    set {
      _hasBits0 |= 2;
      teamIdCt_ = value;
    }
  }
  /// <summary>Gets whether the "team_id_ct" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamIdCt {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "team_id_ct" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamIdCt() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "team_id_t" field.</summary>
  public const int TeamIdTFieldNumber = 3;
  private readonly static int TeamIdTDefaultValue = 0;

  private int teamIdT_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamIdT {
    get { if ((_hasBits0 & 4) != 0) { return teamIdT_; } else { return TeamIdTDefaultValue; } }
    set {
      _hasBits0 |= 4;
      teamIdT_ = value;
    }
  }
  /// <summary>Gets whether the "team_id_t" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamIdT {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "team_id_t" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamIdT() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "event_stage_id" field.</summary>
  public const int EventStageIdFieldNumber = 4;
  private readonly static int EventStageIdDefaultValue = 0;

  private int eventStageId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EventStageId {
    get { if ((_hasBits0 & 8) != 0) { return eventStageId_; } else { return EventStageIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      eventStageId_ = value;
    }
  }
  /// <summary>Gets whether the "event_stage_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventStageId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "event_stage_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventStageId() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as TournamentMatchSetup);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(TournamentMatchSetup other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EventId != other.EventId) return false;
    if (TeamIdCt != other.TeamIdCt) return false;
    if (TeamIdT != other.TeamIdT) return false;
    if (EventStageId != other.EventStageId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventId) hash ^= EventId.GetHashCode();
    if (HasTeamIdCt) hash ^= TeamIdCt.GetHashCode();
    if (HasTeamIdT) hash ^= TeamIdT.GetHashCode();
    if (HasEventStageId) hash ^= EventStageId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteInt32(EventId);
    }
    if (HasTeamIdCt) {
      output.WriteRawTag(16);
      output.WriteInt32(TeamIdCt);
    }
    if (HasTeamIdT) {
      output.WriteRawTag(24);
      output.WriteInt32(TeamIdT);
    }
    if (HasEventStageId) {
      output.WriteRawTag(32);
      output.WriteInt32(EventStageId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteInt32(EventId);
    }
    if (HasTeamIdCt) {
      output.WriteRawTag(16);
      output.WriteInt32(TeamIdCt);
    }
    if (HasTeamIdT) {
      output.WriteRawTag(24);
      output.WriteInt32(TeamIdT);
    }
    if (HasEventStageId) {
      output.WriteRawTag(32);
      output.WriteInt32(EventStageId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventId);
    }
    if (HasTeamIdCt) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamIdCt);
    }
    if (HasTeamIdT) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamIdT);
    }
    if (HasEventStageId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventStageId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(TournamentMatchSetup other) {
    if (other == null) {
      return;
    }
    if (other.HasEventId) {
      EventId = other.EventId;
    }
    if (other.HasTeamIdCt) {
      TeamIdCt = other.TeamIdCt;
    }
    if (other.HasTeamIdT) {
      TeamIdT = other.TeamIdT;
    }
    if (other.HasEventStageId) {
      EventStageId = other.EventStageId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EventId = input.ReadInt32();
          break;
        }
        case 16: {
          TeamIdCt = input.ReadInt32();
          break;
        }
        case 24: {
          TeamIdT = input.ReadInt32();
          break;
        }
        case 32: {
          EventStageId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EventId = input.ReadInt32();
          break;
        }
        case 16: {
          TeamIdCt = input.ReadInt32();
          break;
        }
        case 24: {
          TeamIdT = input.ReadInt32();
          break;
        }
        case 32: {
          EventStageId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ServerHltvInfo : pb::IMessage<ServerHltvInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ServerHltvInfo> _parser = new pb::MessageParser<ServerHltvInfo>(() => new ServerHltvInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ServerHltvInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ServerHltvInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ServerHltvInfo(ServerHltvInfo other) : this() {
    _hasBits0 = other._hasBits0;
    tvUdpPort_ = other.tvUdpPort_;
    tvWatchKey_ = other.tvWatchKey_;
    tvSlots_ = other.tvSlots_;
    tvClients_ = other.tvClients_;
    tvProxies_ = other.tvProxies_;
    tvTime_ = other.tvTime_;
    gameType_ = other.gameType_;
    gameMapgroup_ = other.gameMapgroup_;
    gameMap_ = other.gameMap_;
    tvMasterSteamid_ = other.tvMasterSteamid_;
    tvLocalSlots_ = other.tvLocalSlots_;
    tvLocalClients_ = other.tvLocalClients_;
    tvLocalProxies_ = other.tvLocalProxies_;
    tvRelaySlots_ = other.tvRelaySlots_;
    tvRelayClients_ = other.tvRelayClients_;
    tvRelayProxies_ = other.tvRelayProxies_;
    tvRelayAddress_ = other.tvRelayAddress_;
    tvRelayPort_ = other.tvRelayPort_;
    tvRelaySteamid_ = other.tvRelaySteamid_;
    flags_ = other.flags_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ServerHltvInfo Clone() {
    return new ServerHltvInfo(this);
  }

  /// <summary>Field number for the "tv_udp_port" field.</summary>
  public const int TvUdpPortFieldNumber = 1;
  private readonly static uint TvUdpPortDefaultValue = 0;

  private uint tvUdpPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvUdpPort {
    get { if ((_hasBits0 & 1) != 0) { return tvUdpPort_; } else { return TvUdpPortDefaultValue; } }
    set {
      _hasBits0 |= 1;
      tvUdpPort_ = value;
    }
  }
  /// <summary>Gets whether the "tv_udp_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvUdpPort {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "tv_udp_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvUdpPort() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "tv_watch_key" field.</summary>
  public const int TvWatchKeyFieldNumber = 2;
  private readonly static ulong TvWatchKeyDefaultValue = 0UL;

  private ulong tvWatchKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TvWatchKey {
    get { if ((_hasBits0 & 2) != 0) { return tvWatchKey_; } else { return TvWatchKeyDefaultValue; } }
    set {
      _hasBits0 |= 2;
      tvWatchKey_ = value;
    }
  }
  /// <summary>Gets whether the "tv_watch_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvWatchKey {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "tv_watch_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvWatchKey() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "tv_slots" field.</summary>
  public const int TvSlotsFieldNumber = 3;
  private readonly static uint TvSlotsDefaultValue = 0;

  private uint tvSlots_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvSlots {
    get { if ((_hasBits0 & 4) != 0) { return tvSlots_; } else { return TvSlotsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      tvSlots_ = value;
    }
  }
  /// <summary>Gets whether the "tv_slots" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvSlots {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "tv_slots" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvSlots() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "tv_clients" field.</summary>
  public const int TvClientsFieldNumber = 4;
  private readonly static uint TvClientsDefaultValue = 0;

  private uint tvClients_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvClients {
    get { if ((_hasBits0 & 8) != 0) { return tvClients_; } else { return TvClientsDefaultValue; } }
    set {
      _hasBits0 |= 8;
      tvClients_ = value;
    }
  }
  /// <summary>Gets whether the "tv_clients" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvClients {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "tv_clients" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvClients() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "tv_proxies" field.</summary>
  public const int TvProxiesFieldNumber = 5;
  private readonly static uint TvProxiesDefaultValue = 0;

  private uint tvProxies_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvProxies {
    get { if ((_hasBits0 & 16) != 0) { return tvProxies_; } else { return TvProxiesDefaultValue; } }
    set {
      _hasBits0 |= 16;
      tvProxies_ = value;
    }
  }
  /// <summary>Gets whether the "tv_proxies" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvProxies {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "tv_proxies" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvProxies() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "tv_time" field.</summary>
  public const int TvTimeFieldNumber = 6;
  private readonly static uint TvTimeDefaultValue = 0;

  private uint tvTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvTime {
    get { if ((_hasBits0 & 32) != 0) { return tvTime_; } else { return TvTimeDefaultValue; } }
    set {
      _hasBits0 |= 32;
      tvTime_ = value;
    }
  }
  /// <summary>Gets whether the "tv_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvTime {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "tv_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvTime() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "game_type" field.</summary>
  public const int GameTypeFieldNumber = 8;
  private readonly static uint GameTypeDefaultValue = 0;

  private uint gameType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameType {
    get { if ((_hasBits0 & 64) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
    set {
      _hasBits0 |= 64;
      gameType_ = value;
    }
  }
  /// <summary>Gets whether the "game_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameType {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "game_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameType() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "game_mapgroup" field.</summary>
  public const int GameMapgroupFieldNumber = 9;
  private readonly static string GameMapgroupDefaultValue = "";

  private string gameMapgroup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameMapgroup {
    get { return gameMapgroup_ ?? GameMapgroupDefaultValue; }
    set {
      gameMapgroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_mapgroup" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameMapgroup {
    get { return gameMapgroup_ != null; }
  }
  /// <summary>Clears the value of the "game_mapgroup" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameMapgroup() {
    gameMapgroup_ = null;
  }

  /// <summary>Field number for the "game_map" field.</summary>
  public const int GameMapFieldNumber = 10;
  private readonly static string GameMapDefaultValue = "";

  private string gameMap_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameMap {
    get { return gameMap_ ?? GameMapDefaultValue; }
    set {
      gameMap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_map" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameMap {
    get { return gameMap_ != null; }
  }
  /// <summary>Clears the value of the "game_map" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameMap() {
    gameMap_ = null;
  }

  /// <summary>Field number for the "tv_master_steamid" field.</summary>
  public const int TvMasterSteamidFieldNumber = 11;
  private readonly static ulong TvMasterSteamidDefaultValue = 0UL;

  private ulong tvMasterSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TvMasterSteamid {
    get { if ((_hasBits0 & 128) != 0) { return tvMasterSteamid_; } else { return TvMasterSteamidDefaultValue; } }
    set {
      _hasBits0 |= 128;
      tvMasterSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "tv_master_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvMasterSteamid {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "tv_master_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvMasterSteamid() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "tv_local_slots" field.</summary>
  public const int TvLocalSlotsFieldNumber = 12;
  private readonly static uint TvLocalSlotsDefaultValue = 0;

  private uint tvLocalSlots_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvLocalSlots {
    get { if ((_hasBits0 & 256) != 0) { return tvLocalSlots_; } else { return TvLocalSlotsDefaultValue; } }
    set {
      _hasBits0 |= 256;
      tvLocalSlots_ = value;
    }
  }
  /// <summary>Gets whether the "tv_local_slots" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvLocalSlots {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "tv_local_slots" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvLocalSlots() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "tv_local_clients" field.</summary>
  public const int TvLocalClientsFieldNumber = 13;
  private readonly static uint TvLocalClientsDefaultValue = 0;

  private uint tvLocalClients_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvLocalClients {
    get { if ((_hasBits0 & 512) != 0) { return tvLocalClients_; } else { return TvLocalClientsDefaultValue; } }
    set {
      _hasBits0 |= 512;
      tvLocalClients_ = value;
    }
  }
  /// <summary>Gets whether the "tv_local_clients" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvLocalClients {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "tv_local_clients" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvLocalClients() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "tv_local_proxies" field.</summary>
  public const int TvLocalProxiesFieldNumber = 14;
  private readonly static uint TvLocalProxiesDefaultValue = 0;

  private uint tvLocalProxies_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvLocalProxies {
    get { if ((_hasBits0 & 1024) != 0) { return tvLocalProxies_; } else { return TvLocalProxiesDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      tvLocalProxies_ = value;
    }
  }
  /// <summary>Gets whether the "tv_local_proxies" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvLocalProxies {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "tv_local_proxies" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvLocalProxies() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "tv_relay_slots" field.</summary>
  public const int TvRelaySlotsFieldNumber = 15;
  private readonly static uint TvRelaySlotsDefaultValue = 0;

  private uint tvRelaySlots_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvRelaySlots {
    get { if ((_hasBits0 & 2048) != 0) { return tvRelaySlots_; } else { return TvRelaySlotsDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      tvRelaySlots_ = value;
    }
  }
  /// <summary>Gets whether the "tv_relay_slots" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvRelaySlots {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "tv_relay_slots" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvRelaySlots() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "tv_relay_clients" field.</summary>
  public const int TvRelayClientsFieldNumber = 16;
  private readonly static uint TvRelayClientsDefaultValue = 0;

  private uint tvRelayClients_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvRelayClients {
    get { if ((_hasBits0 & 4096) != 0) { return tvRelayClients_; } else { return TvRelayClientsDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      tvRelayClients_ = value;
    }
  }
  /// <summary>Gets whether the "tv_relay_clients" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvRelayClients {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "tv_relay_clients" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvRelayClients() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "tv_relay_proxies" field.</summary>
  public const int TvRelayProxiesFieldNumber = 17;
  private readonly static uint TvRelayProxiesDefaultValue = 0;

  private uint tvRelayProxies_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvRelayProxies {
    get { if ((_hasBits0 & 8192) != 0) { return tvRelayProxies_; } else { return TvRelayProxiesDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      tvRelayProxies_ = value;
    }
  }
  /// <summary>Gets whether the "tv_relay_proxies" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvRelayProxies {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "tv_relay_proxies" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvRelayProxies() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "tv_relay_address" field.</summary>
  public const int TvRelayAddressFieldNumber = 18;
  private readonly static uint TvRelayAddressDefaultValue = 0;

  private uint tvRelayAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvRelayAddress {
    get { if ((_hasBits0 & 16384) != 0) { return tvRelayAddress_; } else { return TvRelayAddressDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      tvRelayAddress_ = value;
    }
  }
  /// <summary>Gets whether the "tv_relay_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvRelayAddress {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "tv_relay_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvRelayAddress() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "tv_relay_port" field.</summary>
  public const int TvRelayPortFieldNumber = 19;
  private readonly static uint TvRelayPortDefaultValue = 0;

  private uint tvRelayPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvRelayPort {
    get { if ((_hasBits0 & 32768) != 0) { return tvRelayPort_; } else { return TvRelayPortDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      tvRelayPort_ = value;
    }
  }
  /// <summary>Gets whether the "tv_relay_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvRelayPort {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "tv_relay_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvRelayPort() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "tv_relay_steamid" field.</summary>
  public const int TvRelaySteamidFieldNumber = 20;
  private readonly static ulong TvRelaySteamidDefaultValue = 0UL;

  private ulong tvRelaySteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TvRelaySteamid {
    get { if ((_hasBits0 & 65536) != 0) { return tvRelaySteamid_; } else { return TvRelaySteamidDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      tvRelaySteamid_ = value;
    }
  }
  /// <summary>Gets whether the "tv_relay_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvRelaySteamid {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "tv_relay_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvRelaySteamid() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 21;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 131072) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 131072;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~131072;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ServerHltvInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ServerHltvInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TvUdpPort != other.TvUdpPort) return false;
    if (TvWatchKey != other.TvWatchKey) return false;
    if (TvSlots != other.TvSlots) return false;
    if (TvClients != other.TvClients) return false;
    if (TvProxies != other.TvProxies) return false;
    if (TvTime != other.TvTime) return false;
    if (GameType != other.GameType) return false;
    if (GameMapgroup != other.GameMapgroup) return false;
    if (GameMap != other.GameMap) return false;
    if (TvMasterSteamid != other.TvMasterSteamid) return false;
    if (TvLocalSlots != other.TvLocalSlots) return false;
    if (TvLocalClients != other.TvLocalClients) return false;
    if (TvLocalProxies != other.TvLocalProxies) return false;
    if (TvRelaySlots != other.TvRelaySlots) return false;
    if (TvRelayClients != other.TvRelayClients) return false;
    if (TvRelayProxies != other.TvRelayProxies) return false;
    if (TvRelayAddress != other.TvRelayAddress) return false;
    if (TvRelayPort != other.TvRelayPort) return false;
    if (TvRelaySteamid != other.TvRelaySteamid) return false;
    if (Flags != other.Flags) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTvUdpPort) hash ^= TvUdpPort.GetHashCode();
    if (HasTvWatchKey) hash ^= TvWatchKey.GetHashCode();
    if (HasTvSlots) hash ^= TvSlots.GetHashCode();
    if (HasTvClients) hash ^= TvClients.GetHashCode();
    if (HasTvProxies) hash ^= TvProxies.GetHashCode();
    if (HasTvTime) hash ^= TvTime.GetHashCode();
    if (HasGameType) hash ^= GameType.GetHashCode();
    if (HasGameMapgroup) hash ^= GameMapgroup.GetHashCode();
    if (HasGameMap) hash ^= GameMap.GetHashCode();
    if (HasTvMasterSteamid) hash ^= TvMasterSteamid.GetHashCode();
    if (HasTvLocalSlots) hash ^= TvLocalSlots.GetHashCode();
    if (HasTvLocalClients) hash ^= TvLocalClients.GetHashCode();
    if (HasTvLocalProxies) hash ^= TvLocalProxies.GetHashCode();
    if (HasTvRelaySlots) hash ^= TvRelaySlots.GetHashCode();
    if (HasTvRelayClients) hash ^= TvRelayClients.GetHashCode();
    if (HasTvRelayProxies) hash ^= TvRelayProxies.GetHashCode();
    if (HasTvRelayAddress) hash ^= TvRelayAddress.GetHashCode();
    if (HasTvRelayPort) hash ^= TvRelayPort.GetHashCode();
    if (HasTvRelaySteamid) hash ^= TvRelaySteamid.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTvUdpPort) {
      output.WriteRawTag(8);
      output.WriteUInt32(TvUdpPort);
    }
    if (HasTvWatchKey) {
      output.WriteRawTag(16);
      output.WriteUInt64(TvWatchKey);
    }
    if (HasTvSlots) {
      output.WriteRawTag(24);
      output.WriteUInt32(TvSlots);
    }
    if (HasTvClients) {
      output.WriteRawTag(32);
      output.WriteUInt32(TvClients);
    }
    if (HasTvProxies) {
      output.WriteRawTag(40);
      output.WriteUInt32(TvProxies);
    }
    if (HasTvTime) {
      output.WriteRawTag(48);
      output.WriteUInt32(TvTime);
    }
    if (HasGameType) {
      output.WriteRawTag(64);
      output.WriteUInt32(GameType);
    }
    if (HasGameMapgroup) {
      output.WriteRawTag(74);
      output.WriteString(GameMapgroup);
    }
    if (HasGameMap) {
      output.WriteRawTag(82);
      output.WriteString(GameMap);
    }
    if (HasTvMasterSteamid) {
      output.WriteRawTag(88);
      output.WriteUInt64(TvMasterSteamid);
    }
    if (HasTvLocalSlots) {
      output.WriteRawTag(96);
      output.WriteUInt32(TvLocalSlots);
    }
    if (HasTvLocalClients) {
      output.WriteRawTag(104);
      output.WriteUInt32(TvLocalClients);
    }
    if (HasTvLocalProxies) {
      output.WriteRawTag(112);
      output.WriteUInt32(TvLocalProxies);
    }
    if (HasTvRelaySlots) {
      output.WriteRawTag(120);
      output.WriteUInt32(TvRelaySlots);
    }
    if (HasTvRelayClients) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(TvRelayClients);
    }
    if (HasTvRelayProxies) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(TvRelayProxies);
    }
    if (HasTvRelayAddress) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(TvRelayAddress);
    }
    if (HasTvRelayPort) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(TvRelayPort);
    }
    if (HasTvRelaySteamid) {
      output.WriteRawTag(160, 1);
      output.WriteUInt64(TvRelaySteamid);
    }
    if (HasFlags) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(Flags);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTvUdpPort) {
      output.WriteRawTag(8);
      output.WriteUInt32(TvUdpPort);
    }
    if (HasTvWatchKey) {
      output.WriteRawTag(16);
      output.WriteUInt64(TvWatchKey);
    }
    if (HasTvSlots) {
      output.WriteRawTag(24);
      output.WriteUInt32(TvSlots);
    }
    if (HasTvClients) {
      output.WriteRawTag(32);
      output.WriteUInt32(TvClients);
    }
    if (HasTvProxies) {
      output.WriteRawTag(40);
      output.WriteUInt32(TvProxies);
    }
    if (HasTvTime) {
      output.WriteRawTag(48);
      output.WriteUInt32(TvTime);
    }
    if (HasGameType) {
      output.WriteRawTag(64);
      output.WriteUInt32(GameType);
    }
    if (HasGameMapgroup) {
      output.WriteRawTag(74);
      output.WriteString(GameMapgroup);
    }
    if (HasGameMap) {
      output.WriteRawTag(82);
      output.WriteString(GameMap);
    }
    if (HasTvMasterSteamid) {
      output.WriteRawTag(88);
      output.WriteUInt64(TvMasterSteamid);
    }
    if (HasTvLocalSlots) {
      output.WriteRawTag(96);
      output.WriteUInt32(TvLocalSlots);
    }
    if (HasTvLocalClients) {
      output.WriteRawTag(104);
      output.WriteUInt32(TvLocalClients);
    }
    if (HasTvLocalProxies) {
      output.WriteRawTag(112);
      output.WriteUInt32(TvLocalProxies);
    }
    if (HasTvRelaySlots) {
      output.WriteRawTag(120);
      output.WriteUInt32(TvRelaySlots);
    }
    if (HasTvRelayClients) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(TvRelayClients);
    }
    if (HasTvRelayProxies) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(TvRelayProxies);
    }
    if (HasTvRelayAddress) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(TvRelayAddress);
    }
    if (HasTvRelayPort) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(TvRelayPort);
    }
    if (HasTvRelaySteamid) {
      output.WriteRawTag(160, 1);
      output.WriteUInt64(TvRelaySteamid);
    }
    if (HasFlags) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(Flags);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTvUdpPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvUdpPort);
    }
    if (HasTvWatchKey) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TvWatchKey);
    }
    if (HasTvSlots) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvSlots);
    }
    if (HasTvClients) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvClients);
    }
    if (HasTvProxies) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvProxies);
    }
    if (HasTvTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvTime);
    }
    if (HasGameType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
    }
    if (HasGameMapgroup) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameMapgroup);
    }
    if (HasGameMap) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameMap);
    }
    if (HasTvMasterSteamid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TvMasterSteamid);
    }
    if (HasTvLocalSlots) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvLocalSlots);
    }
    if (HasTvLocalClients) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvLocalClients);
    }
    if (HasTvLocalProxies) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvLocalProxies);
    }
    if (HasTvRelaySlots) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvRelaySlots);
    }
    if (HasTvRelayClients) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TvRelayClients);
    }
    if (HasTvRelayProxies) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TvRelayProxies);
    }
    if (HasTvRelayAddress) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TvRelayAddress);
    }
    if (HasTvRelayPort) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TvRelayPort);
    }
    if (HasTvRelaySteamid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TvRelaySteamid);
    }
    if (HasFlags) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ServerHltvInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasTvUdpPort) {
      TvUdpPort = other.TvUdpPort;
    }
    if (other.HasTvWatchKey) {
      TvWatchKey = other.TvWatchKey;
    }
    if (other.HasTvSlots) {
      TvSlots = other.TvSlots;
    }
    if (other.HasTvClients) {
      TvClients = other.TvClients;
    }
    if (other.HasTvProxies) {
      TvProxies = other.TvProxies;
    }
    if (other.HasTvTime) {
      TvTime = other.TvTime;
    }
    if (other.HasGameType) {
      GameType = other.GameType;
    }
    if (other.HasGameMapgroup) {
      GameMapgroup = other.GameMapgroup;
    }
    if (other.HasGameMap) {
      GameMap = other.GameMap;
    }
    if (other.HasTvMasterSteamid) {
      TvMasterSteamid = other.TvMasterSteamid;
    }
    if (other.HasTvLocalSlots) {
      TvLocalSlots = other.TvLocalSlots;
    }
    if (other.HasTvLocalClients) {
      TvLocalClients = other.TvLocalClients;
    }
    if (other.HasTvLocalProxies) {
      TvLocalProxies = other.TvLocalProxies;
    }
    if (other.HasTvRelaySlots) {
      TvRelaySlots = other.TvRelaySlots;
    }
    if (other.HasTvRelayClients) {
      TvRelayClients = other.TvRelayClients;
    }
    if (other.HasTvRelayProxies) {
      TvRelayProxies = other.TvRelayProxies;
    }
    if (other.HasTvRelayAddress) {
      TvRelayAddress = other.TvRelayAddress;
    }
    if (other.HasTvRelayPort) {
      TvRelayPort = other.TvRelayPort;
    }
    if (other.HasTvRelaySteamid) {
      TvRelaySteamid = other.TvRelaySteamid;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TvUdpPort = input.ReadUInt32();
          break;
        }
        case 16: {
          TvWatchKey = input.ReadUInt64();
          break;
        }
        case 24: {
          TvSlots = input.ReadUInt32();
          break;
        }
        case 32: {
          TvClients = input.ReadUInt32();
          break;
        }
        case 40: {
          TvProxies = input.ReadUInt32();
          break;
        }
        case 48: {
          TvTime = input.ReadUInt32();
          break;
        }
        case 64: {
          GameType = input.ReadUInt32();
          break;
        }
        case 74: {
          GameMapgroup = input.ReadString();
          break;
        }
        case 82: {
          GameMap = input.ReadString();
          break;
        }
        case 88: {
          TvMasterSteamid = input.ReadUInt64();
          break;
        }
        case 96: {
          TvLocalSlots = input.ReadUInt32();
          break;
        }
        case 104: {
          TvLocalClients = input.ReadUInt32();
          break;
        }
        case 112: {
          TvLocalProxies = input.ReadUInt32();
          break;
        }
        case 120: {
          TvRelaySlots = input.ReadUInt32();
          break;
        }
        case 128: {
          TvRelayClients = input.ReadUInt32();
          break;
        }
        case 136: {
          TvRelayProxies = input.ReadUInt32();
          break;
        }
        case 144: {
          TvRelayAddress = input.ReadUInt32();
          break;
        }
        case 152: {
          TvRelayPort = input.ReadUInt32();
          break;
        }
        case 160: {
          TvRelaySteamid = input.ReadUInt64();
          break;
        }
        case 168: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TvUdpPort = input.ReadUInt32();
          break;
        }
        case 16: {
          TvWatchKey = input.ReadUInt64();
          break;
        }
        case 24: {
          TvSlots = input.ReadUInt32();
          break;
        }
        case 32: {
          TvClients = input.ReadUInt32();
          break;
        }
        case 40: {
          TvProxies = input.ReadUInt32();
          break;
        }
        case 48: {
          TvTime = input.ReadUInt32();
          break;
        }
        case 64: {
          GameType = input.ReadUInt32();
          break;
        }
        case 74: {
          GameMapgroup = input.ReadString();
          break;
        }
        case 82: {
          GameMap = input.ReadString();
          break;
        }
        case 88: {
          TvMasterSteamid = input.ReadUInt64();
          break;
        }
        case 96: {
          TvLocalSlots = input.ReadUInt32();
          break;
        }
        case 104: {
          TvLocalClients = input.ReadUInt32();
          break;
        }
        case 112: {
          TvLocalProxies = input.ReadUInt32();
          break;
        }
        case 120: {
          TvRelaySlots = input.ReadUInt32();
          break;
        }
        case 128: {
          TvRelayClients = input.ReadUInt32();
          break;
        }
        case 136: {
          TvRelayProxies = input.ReadUInt32();
          break;
        }
        case 144: {
          TvRelayAddress = input.ReadUInt32();
          break;
        }
        case 152: {
          TvRelayPort = input.ReadUInt32();
          break;
        }
        case 160: {
          TvRelaySteamid = input.ReadUInt64();
          break;
        }
        case 168: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class IpAddressMask : pb::IMessage<IpAddressMask>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<IpAddressMask> _parser = new pb::MessageParser<IpAddressMask>(() => new IpAddressMask());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<IpAddressMask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public IpAddressMask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public IpAddressMask(IpAddressMask other) : this() {
    _hasBits0 = other._hasBits0;
    a_ = other.a_;
    b_ = other.b_;
    c_ = other.c_;
    d_ = other.d_;
    bits_ = other.bits_;
    token_ = other.token_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public IpAddressMask Clone() {
    return new IpAddressMask(this);
  }

  /// <summary>Field number for the "a" field.</summary>
  public const int AFieldNumber = 1;
  private readonly static uint ADefaultValue = 0;

  private uint a_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint A {
    get { if ((_hasBits0 & 1) != 0) { return a_; } else { return ADefaultValue; } }
    set {
      _hasBits0 |= 1;
      a_ = value;
    }
  }
  /// <summary>Gets whether the "a" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasA {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "a" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearA() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "b" field.</summary>
  public const int BFieldNumber = 2;
  private readonly static uint BDefaultValue = 0;

  private uint b_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint B {
    get { if ((_hasBits0 & 2) != 0) { return b_; } else { return BDefaultValue; } }
    set {
      _hasBits0 |= 2;
      b_ = value;
    }
  }
  /// <summary>Gets whether the "b" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasB {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "b" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearB() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "c" field.</summary>
  public const int CFieldNumber = 3;
  private readonly static uint CDefaultValue = 0;

  private uint c_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint C {
    get { if ((_hasBits0 & 4) != 0) { return c_; } else { return CDefaultValue; } }
    set {
      _hasBits0 |= 4;
      c_ = value;
    }
  }
  /// <summary>Gets whether the "c" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasC {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "c" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearC() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "d" field.</summary>
  public const int DFieldNumber = 4;
  private readonly static uint DDefaultValue = 0;

  private uint d_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint D {
    get { if ((_hasBits0 & 8) != 0) { return d_; } else { return DDefaultValue; } }
    set {
      _hasBits0 |= 8;
      d_ = value;
    }
  }
  /// <summary>Gets whether the "d" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasD {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "d" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearD() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "bits" field.</summary>
  public const int BitsFieldNumber = 5;
  private readonly static uint BitsDefaultValue = 0;

  private uint bits_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Bits {
    get { if ((_hasBits0 & 16) != 0) { return bits_; } else { return BitsDefaultValue; } }
    set {
      _hasBits0 |= 16;
      bits_ = value;
    }
  }
  /// <summary>Gets whether the "bits" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBits {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "bits" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBits() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 6;
  private readonly static uint TokenDefaultValue = 0;

  private uint token_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Token {
    get { if ((_hasBits0 & 32) != 0) { return token_; } else { return TokenDefaultValue; } }
    set {
      _hasBits0 |= 32;
      token_ = value;
    }
  }
  /// <summary>Gets whether the "token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToken {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToken() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as IpAddressMask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(IpAddressMask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (A != other.A) return false;
    if (B != other.B) return false;
    if (C != other.C) return false;
    if (D != other.D) return false;
    if (Bits != other.Bits) return false;
    if (Token != other.Token) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasA) hash ^= A.GetHashCode();
    if (HasB) hash ^= B.GetHashCode();
    if (HasC) hash ^= C.GetHashCode();
    if (HasD) hash ^= D.GetHashCode();
    if (HasBits) hash ^= Bits.GetHashCode();
    if (HasToken) hash ^= Token.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasA) {
      output.WriteRawTag(8);
      output.WriteUInt32(A);
    }
    if (HasB) {
      output.WriteRawTag(16);
      output.WriteUInt32(B);
    }
    if (HasC) {
      output.WriteRawTag(24);
      output.WriteUInt32(C);
    }
    if (HasD) {
      output.WriteRawTag(32);
      output.WriteUInt32(D);
    }
    if (HasBits) {
      output.WriteRawTag(40);
      output.WriteUInt32(Bits);
    }
    if (HasToken) {
      output.WriteRawTag(48);
      output.WriteUInt32(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasA) {
      output.WriteRawTag(8);
      output.WriteUInt32(A);
    }
    if (HasB) {
      output.WriteRawTag(16);
      output.WriteUInt32(B);
    }
    if (HasC) {
      output.WriteRawTag(24);
      output.WriteUInt32(C);
    }
    if (HasD) {
      output.WriteRawTag(32);
      output.WriteUInt32(D);
    }
    if (HasBits) {
      output.WriteRawTag(40);
      output.WriteUInt32(Bits);
    }
    if (HasToken) {
      output.WriteRawTag(48);
      output.WriteUInt32(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasA) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(A);
    }
    if (HasB) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(B);
    }
    if (HasC) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(C);
    }
    if (HasD) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(D);
    }
    if (HasBits) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bits);
    }
    if (HasToken) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Token);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(IpAddressMask other) {
    if (other == null) {
      return;
    }
    if (other.HasA) {
      A = other.A;
    }
    if (other.HasB) {
      B = other.B;
    }
    if (other.HasC) {
      C = other.C;
    }
    if (other.HasD) {
      D = other.D;
    }
    if (other.HasBits) {
      Bits = other.Bits;
    }
    if (other.HasToken) {
      Token = other.Token;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          A = input.ReadUInt32();
          break;
        }
        case 16: {
          B = input.ReadUInt32();
          break;
        }
        case 24: {
          C = input.ReadUInt32();
          break;
        }
        case 32: {
          D = input.ReadUInt32();
          break;
        }
        case 40: {
          Bits = input.ReadUInt32();
          break;
        }
        case 48: {
          Token = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          A = input.ReadUInt32();
          break;
        }
        case 16: {
          B = input.ReadUInt32();
          break;
        }
        case 24: {
          C = input.ReadUInt32();
          break;
        }
        case 32: {
          D = input.ReadUInt32();
          break;
        }
        case 40: {
          Bits = input.ReadUInt32();
          break;
        }
        case 48: {
          Token = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgCsgoSteamUserStatChange : pb::IMessage<CMsgCsgoSteamUserStatChange>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgCsgoSteamUserStatChange> _parser = new pb::MessageParser<CMsgCsgoSteamUserStatChange>(() => new CMsgCsgoSteamUserStatChange());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgCsgoSteamUserStatChange> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgCsgoSteamUserStatChange() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgCsgoSteamUserStatChange(CMsgCsgoSteamUserStatChange other) : this() {
    _hasBits0 = other._hasBits0;
    ecsgosteamuserstat_ = other.ecsgosteamuserstat_;
    delta_ = other.delta_;
    absolute_ = other.absolute_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgCsgoSteamUserStatChange Clone() {
    return new CMsgCsgoSteamUserStatChange(this);
  }

  /// <summary>Field number for the "ecsgosteamuserstat" field.</summary>
  public const int EcsgosteamuserstatFieldNumber = 1;
  private readonly static int EcsgosteamuserstatDefaultValue = 0;

  private int ecsgosteamuserstat_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Ecsgosteamuserstat {
    get { if ((_hasBits0 & 1) != 0) { return ecsgosteamuserstat_; } else { return EcsgosteamuserstatDefaultValue; } }
    set {
      _hasBits0 |= 1;
      ecsgosteamuserstat_ = value;
    }
  }
  /// <summary>Gets whether the "ecsgosteamuserstat" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEcsgosteamuserstat {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ecsgosteamuserstat" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEcsgosteamuserstat() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "delta" field.</summary>
  public const int DeltaFieldNumber = 2;
  private readonly static int DeltaDefaultValue = 0;

  private int delta_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Delta {
    get { if ((_hasBits0 & 2) != 0) { return delta_; } else { return DeltaDefaultValue; } }
    set {
      _hasBits0 |= 2;
      delta_ = value;
    }
  }
  /// <summary>Gets whether the "delta" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDelta {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "delta" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDelta() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "absolute" field.</summary>
  public const int AbsoluteFieldNumber = 3;
  private readonly static bool AbsoluteDefaultValue = false;

  private bool absolute_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Absolute {
    get { if ((_hasBits0 & 4) != 0) { return absolute_; } else { return AbsoluteDefaultValue; } }
    set {
      _hasBits0 |= 4;
      absolute_ = value;
    }
  }
  /// <summary>Gets whether the "absolute" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAbsolute {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "absolute" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAbsolute() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgCsgoSteamUserStatChange);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgCsgoSteamUserStatChange other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ecsgosteamuserstat != other.Ecsgosteamuserstat) return false;
    if (Delta != other.Delta) return false;
    if (Absolute != other.Absolute) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEcsgosteamuserstat) hash ^= Ecsgosteamuserstat.GetHashCode();
    if (HasDelta) hash ^= Delta.GetHashCode();
    if (HasAbsolute) hash ^= Absolute.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEcsgosteamuserstat) {
      output.WriteRawTag(8);
      output.WriteInt32(Ecsgosteamuserstat);
    }
    if (HasDelta) {
      output.WriteRawTag(16);
      output.WriteInt32(Delta);
    }
    if (HasAbsolute) {
      output.WriteRawTag(24);
      output.WriteBool(Absolute);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEcsgosteamuserstat) {
      output.WriteRawTag(8);
      output.WriteInt32(Ecsgosteamuserstat);
    }
    if (HasDelta) {
      output.WriteRawTag(16);
      output.WriteInt32(Delta);
    }
    if (HasAbsolute) {
      output.WriteRawTag(24);
      output.WriteBool(Absolute);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEcsgosteamuserstat) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ecsgosteamuserstat);
    }
    if (HasDelta) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Delta);
    }
    if (HasAbsolute) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgCsgoSteamUserStatChange other) {
    if (other == null) {
      return;
    }
    if (other.HasEcsgosteamuserstat) {
      Ecsgosteamuserstat = other.Ecsgosteamuserstat;
    }
    if (other.HasDelta) {
      Delta = other.Delta;
    }
    if (other.HasAbsolute) {
      Absolute = other.Absolute;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ecsgosteamuserstat = input.ReadInt32();
          break;
        }
        case 16: {
          Delta = input.ReadInt32();
          break;
        }
        case 24: {
          Absolute = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ecsgosteamuserstat = input.ReadInt32();
          break;
        }
        case 16: {
          Delta = input.ReadInt32();
          break;
        }
        case 24: {
          Absolute = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class XpProgressData : pb::IMessage<XpProgressData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<XpProgressData> _parser = new pb::MessageParser<XpProgressData>(() => new XpProgressData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<XpProgressData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public XpProgressData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public XpProgressData(XpProgressData other) : this() {
    _hasBits0 = other._hasBits0;
    xpPoints_ = other.xpPoints_;
    xpCategory_ = other.xpCategory_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public XpProgressData Clone() {
    return new XpProgressData(this);
  }

  /// <summary>Field number for the "xp_points" field.</summary>
  public const int XpPointsFieldNumber = 1;
  private readonly static uint XpPointsDefaultValue = 0;

  private uint xpPoints_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint XpPoints {
    get { if ((_hasBits0 & 1) != 0) { return xpPoints_; } else { return XpPointsDefaultValue; } }
    set {
      _hasBits0 |= 1;
      xpPoints_ = value;
    }
  }
  /// <summary>Gets whether the "xp_points" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXpPoints {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "xp_points" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXpPoints() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "xp_category" field.</summary>
  public const int XpCategoryFieldNumber = 2;
  private readonly static int XpCategoryDefaultValue = 0;

  private int xpCategory_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int XpCategory {
    get { if ((_hasBits0 & 2) != 0) { return xpCategory_; } else { return XpCategoryDefaultValue; } }
    set {
      _hasBits0 |= 2;
      xpCategory_ = value;
    }
  }
  /// <summary>Gets whether the "xp_category" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXpCategory {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "xp_category" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXpCategory() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as XpProgressData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(XpProgressData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (XpPoints != other.XpPoints) return false;
    if (XpCategory != other.XpCategory) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasXpPoints) hash ^= XpPoints.GetHashCode();
    if (HasXpCategory) hash ^= XpCategory.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasXpPoints) {
      output.WriteRawTag(8);
      output.WriteUInt32(XpPoints);
    }
    if (HasXpCategory) {
      output.WriteRawTag(16);
      output.WriteInt32(XpCategory);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasXpPoints) {
      output.WriteRawTag(8);
      output.WriteUInt32(XpPoints);
    }
    if (HasXpCategory) {
      output.WriteRawTag(16);
      output.WriteInt32(XpCategory);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasXpPoints) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XpPoints);
    }
    if (HasXpCategory) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(XpCategory);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(XpProgressData other) {
    if (other == null) {
      return;
    }
    if (other.HasXpPoints) {
      XpPoints = other.XpPoints;
    }
    if (other.HasXpCategory) {
      XpCategory = other.XpCategory;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          XpPoints = input.ReadUInt32();
          break;
        }
        case 16: {
          XpCategory = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          XpPoints = input.ReadUInt32();
          break;
        }
        case 16: {
          XpCategory = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MatchEndItemUpdates : pb::IMessage<MatchEndItemUpdates>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MatchEndItemUpdates> _parser = new pb::MessageParser<MatchEndItemUpdates>(() => new MatchEndItemUpdates());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<MatchEndItemUpdates> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MatchEndItemUpdates() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MatchEndItemUpdates(MatchEndItemUpdates other) : this() {
    _hasBits0 = other._hasBits0;
    itemId_ = other.itemId_;
    itemAttrDefidx_ = other.itemAttrDefidx_;
    itemAttrDeltaValue_ = other.itemAttrDeltaValue_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MatchEndItemUpdates Clone() {
    return new MatchEndItemUpdates(this);
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private readonly static ulong ItemIdDefaultValue = 0UL;

  private ulong itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ItemId {
    get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      itemId_ = value;
    }
  }
  /// <summary>Gets whether the "item_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasItemId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "item_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearItemId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "item_attr_defidx" field.</summary>
  public const int ItemAttrDefidxFieldNumber = 2;
  private readonly static uint ItemAttrDefidxDefaultValue = 0;

  private uint itemAttrDefidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ItemAttrDefidx {
    get { if ((_hasBits0 & 2) != 0) { return itemAttrDefidx_; } else { return ItemAttrDefidxDefaultValue; } }
    set {
      _hasBits0 |= 2;
      itemAttrDefidx_ = value;
    }
  }
  /// <summary>Gets whether the "item_attr_defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasItemAttrDefidx {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "item_attr_defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearItemAttrDefidx() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "item_attr_delta_value" field.</summary>
  public const int ItemAttrDeltaValueFieldNumber = 3;
  private readonly static uint ItemAttrDeltaValueDefaultValue = 0;

  private uint itemAttrDeltaValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ItemAttrDeltaValue {
    get { if ((_hasBits0 & 4) != 0) { return itemAttrDeltaValue_; } else { return ItemAttrDeltaValueDefaultValue; } }
    set {
      _hasBits0 |= 4;
      itemAttrDeltaValue_ = value;
    }
  }
  /// <summary>Gets whether the "item_attr_delta_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasItemAttrDeltaValue {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "item_attr_delta_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearItemAttrDeltaValue() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as MatchEndItemUpdates);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(MatchEndItemUpdates other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (ItemAttrDefidx != other.ItemAttrDefidx) return false;
    if (ItemAttrDeltaValue != other.ItemAttrDeltaValue) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasItemId) hash ^= ItemId.GetHashCode();
    if (HasItemAttrDefidx) hash ^= ItemAttrDefidx.GetHashCode();
    if (HasItemAttrDeltaValue) hash ^= ItemAttrDeltaValue.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasItemId) {
      output.WriteRawTag(8);
      output.WriteUInt64(ItemId);
    }
    if (HasItemAttrDefidx) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemAttrDefidx);
    }
    if (HasItemAttrDeltaValue) {
      output.WriteRawTag(24);
      output.WriteUInt32(ItemAttrDeltaValue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasItemId) {
      output.WriteRawTag(8);
      output.WriteUInt64(ItemId);
    }
    if (HasItemAttrDefidx) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemAttrDefidx);
    }
    if (HasItemAttrDeltaValue) {
      output.WriteRawTag(24);
      output.WriteUInt32(ItemAttrDeltaValue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasItemId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
    }
    if (HasItemAttrDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemAttrDefidx);
    }
    if (HasItemAttrDeltaValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemAttrDeltaValue);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(MatchEndItemUpdates other) {
    if (other == null) {
      return;
    }
    if (other.HasItemId) {
      ItemId = other.ItemId;
    }
    if (other.HasItemAttrDefidx) {
      ItemAttrDefidx = other.ItemAttrDefidx;
    }
    if (other.HasItemAttrDeltaValue) {
      ItemAttrDeltaValue = other.ItemAttrDeltaValue;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadUInt64();
          break;
        }
        case 16: {
          ItemAttrDefidx = input.ReadUInt32();
          break;
        }
        case 24: {
          ItemAttrDeltaValue = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ItemId = input.ReadUInt64();
          break;
        }
        case 16: {
          ItemAttrDefidx = input.ReadUInt32();
          break;
        }
        case 24: {
          ItemAttrDeltaValue = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ScoreLeaderboardData : pb::IMessage<ScoreLeaderboardData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ScoreLeaderboardData> _parser = new pb::MessageParser<ScoreLeaderboardData>(() => new ScoreLeaderboardData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ScoreLeaderboardData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ScoreLeaderboardData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ScoreLeaderboardData(ScoreLeaderboardData other) : this() {
    _hasBits0 = other._hasBits0;
    questId_ = other.questId_;
    score_ = other.score_;
    accountentries_ = other.accountentries_.Clone();
    matchentries_ = other.matchentries_.Clone();
    leaderboardName_ = other.leaderboardName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ScoreLeaderboardData Clone() {
    return new ScoreLeaderboardData(this);
  }

  /// <summary>Field number for the "quest_id" field.</summary>
  public const int QuestIdFieldNumber = 1;
  private readonly static ulong QuestIdDefaultValue = 0UL;

  private ulong questId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong QuestId {
    get { if ((_hasBits0 & 1) != 0) { return questId_; } else { return QuestIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      questId_ = value;
    }
  }
  /// <summary>Gets whether the "quest_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQuestId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "quest_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQuestId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 2;
  private readonly static uint ScoreDefaultValue = 0;

  private uint score_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Score {
    get { if ((_hasBits0 & 2) != 0) { return score_; } else { return ScoreDefaultValue; } }
    set {
      _hasBits0 |= 2;
      score_ = value;
    }
  }
  /// <summary>Gets whether the "score" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScore {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "score" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScore() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "accountentries" field.</summary>
  public const int AccountentriesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ScoreLeaderboardData.Types.AccountEntries> _repeated_accountentries_codec
      = pb::FieldCodec.ForMessage(26, global::ScoreLeaderboardData.Types.AccountEntries.Parser);
  private readonly pbc::RepeatedField<global::ScoreLeaderboardData.Types.AccountEntries> accountentries_ = new pbc::RepeatedField<global::ScoreLeaderboardData.Types.AccountEntries>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ScoreLeaderboardData.Types.AccountEntries> Accountentries {
    get { return accountentries_; }
  }

  /// <summary>Field number for the "matchentries" field.</summary>
  public const int MatchentriesFieldNumber = 5;
  private static readonly pb::FieldCodec<global::ScoreLeaderboardData.Types.Entry> _repeated_matchentries_codec
      = pb::FieldCodec.ForMessage(42, global::ScoreLeaderboardData.Types.Entry.Parser);
  private readonly pbc::RepeatedField<global::ScoreLeaderboardData.Types.Entry> matchentries_ = new pbc::RepeatedField<global::ScoreLeaderboardData.Types.Entry>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ScoreLeaderboardData.Types.Entry> Matchentries {
    get { return matchentries_; }
  }

  /// <summary>Field number for the "leaderboard_name" field.</summary>
  public const int LeaderboardNameFieldNumber = 6;
  private readonly static string LeaderboardNameDefaultValue = "";

  private string leaderboardName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LeaderboardName {
    get { return leaderboardName_ ?? LeaderboardNameDefaultValue; }
    set {
      leaderboardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "leaderboard_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLeaderboardName {
    get { return leaderboardName_ != null; }
  }
  /// <summary>Clears the value of the "leaderboard_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLeaderboardName() {
    leaderboardName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ScoreLeaderboardData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ScoreLeaderboardData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (QuestId != other.QuestId) return false;
    if (Score != other.Score) return false;
    if(!accountentries_.Equals(other.accountentries_)) return false;
    if(!matchentries_.Equals(other.matchentries_)) return false;
    if (LeaderboardName != other.LeaderboardName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasQuestId) hash ^= QuestId.GetHashCode();
    if (HasScore) hash ^= Score.GetHashCode();
    hash ^= accountentries_.GetHashCode();
    hash ^= matchentries_.GetHashCode();
    if (HasLeaderboardName) hash ^= LeaderboardName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasQuestId) {
      output.WriteRawTag(8);
      output.WriteUInt64(QuestId);
    }
    if (HasScore) {
      output.WriteRawTag(16);
      output.WriteUInt32(Score);
    }
    accountentries_.WriteTo(output, _repeated_accountentries_codec);
    matchentries_.WriteTo(output, _repeated_matchentries_codec);
    if (HasLeaderboardName) {
      output.WriteRawTag(50);
      output.WriteString(LeaderboardName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasQuestId) {
      output.WriteRawTag(8);
      output.WriteUInt64(QuestId);
    }
    if (HasScore) {
      output.WriteRawTag(16);
      output.WriteUInt32(Score);
    }
    accountentries_.WriteTo(ref output, _repeated_accountentries_codec);
    matchentries_.WriteTo(ref output, _repeated_matchentries_codec);
    if (HasLeaderboardName) {
      output.WriteRawTag(50);
      output.WriteString(LeaderboardName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasQuestId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(QuestId);
    }
    if (HasScore) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Score);
    }
    size += accountentries_.CalculateSize(_repeated_accountentries_codec);
    size += matchentries_.CalculateSize(_repeated_matchentries_codec);
    if (HasLeaderboardName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderboardName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ScoreLeaderboardData other) {
    if (other == null) {
      return;
    }
    if (other.HasQuestId) {
      QuestId = other.QuestId;
    }
    if (other.HasScore) {
      Score = other.Score;
    }
    accountentries_.Add(other.accountentries_);
    matchentries_.Add(other.matchentries_);
    if (other.HasLeaderboardName) {
      LeaderboardName = other.LeaderboardName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          QuestId = input.ReadUInt64();
          break;
        }
        case 16: {
          Score = input.ReadUInt32();
          break;
        }
        case 26: {
          accountentries_.AddEntriesFrom(input, _repeated_accountentries_codec);
          break;
        }
        case 42: {
          matchentries_.AddEntriesFrom(input, _repeated_matchentries_codec);
          break;
        }
        case 50: {
          LeaderboardName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          QuestId = input.ReadUInt64();
          break;
        }
        case 16: {
          Score = input.ReadUInt32();
          break;
        }
        case 26: {
          accountentries_.AddEntriesFrom(ref input, _repeated_accountentries_codec);
          break;
        }
        case 42: {
          matchentries_.AddEntriesFrom(ref input, _repeated_matchentries_codec);
          break;
        }
        case 50: {
          LeaderboardName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the ScoreLeaderboardData message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Entry : pb::IMessage<Entry>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Entry> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ScoreLeaderboardData.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry(Entry other) : this() {
        _hasBits0 = other._hasBits0;
        tag_ = other.tag_;
        val_ = other.val_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry Clone() {
        return new Entry(this);
      }

      /// <summary>Field number for the "tag" field.</summary>
      public const int TagFieldNumber = 1;
      private readonly static uint TagDefaultValue = 0;

      private uint tag_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Tag {
        get { if ((_hasBits0 & 1) != 0) { return tag_; } else { return TagDefaultValue; } }
        set {
          _hasBits0 |= 1;
          tag_ = value;
        }
      }
      /// <summary>Gets whether the "tag" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTag {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "tag" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTag() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "val" field.</summary>
      public const int ValFieldNumber = 2;
      private readonly static uint ValDefaultValue = 0;

      private uint val_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Val {
        get { if ((_hasBits0 & 2) != 0) { return val_; } else { return ValDefaultValue; } }
        set {
          _hasBits0 |= 2;
          val_ = value;
        }
      }
      /// <summary>Gets whether the "val" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVal {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "val" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVal() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Entry);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Entry other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Tag != other.Tag) return false;
        if (Val != other.Val) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTag) hash ^= Tag.GetHashCode();
        if (HasVal) hash ^= Val.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTag) {
          output.WriteRawTag(8);
          output.WriteUInt32(Tag);
        }
        if (HasVal) {
          output.WriteRawTag(16);
          output.WriteUInt32(Val);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTag) {
          output.WriteRawTag(8);
          output.WriteUInt32(Tag);
        }
        if (HasVal) {
          output.WriteRawTag(16);
          output.WriteUInt32(Val);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTag) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tag);
        }
        if (HasVal) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Val);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Entry other) {
        if (other == null) {
          return;
        }
        if (other.HasTag) {
          Tag = other.Tag;
        }
        if (other.HasVal) {
          Val = other.Val;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Tag = input.ReadUInt32();
              break;
            }
            case 16: {
              Val = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Tag = input.ReadUInt32();
              break;
            }
            case 16: {
              Val = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class AccountEntries : pb::IMessage<AccountEntries>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<AccountEntries> _parser = new pb::MessageParser<AccountEntries>(() => new AccountEntries());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<AccountEntries> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ScoreLeaderboardData.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AccountEntries() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AccountEntries(AccountEntries other) : this() {
        _hasBits0 = other._hasBits0;
        accountid_ = other.accountid_;
        entries_ = other.entries_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AccountEntries Clone() {
        return new AccountEntries(this);
      }

      /// <summary>Field number for the "accountid" field.</summary>
      public const int AccountidFieldNumber = 1;
      private readonly static uint AccountidDefaultValue = 0;

      private uint accountid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Accountid {
        get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountid_ = value;
        }
      }
      /// <summary>Gets whether the "accountid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "accountid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "entries" field.</summary>
      public const int EntriesFieldNumber = 2;
      private static readonly pb::FieldCodec<global::ScoreLeaderboardData.Types.Entry> _repeated_entries_codec
          = pb::FieldCodec.ForMessage(18, global::ScoreLeaderboardData.Types.Entry.Parser);
      private readonly pbc::RepeatedField<global::ScoreLeaderboardData.Types.Entry> entries_ = new pbc::RepeatedField<global::ScoreLeaderboardData.Types.Entry>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::ScoreLeaderboardData.Types.Entry> Entries {
        get { return entries_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as AccountEntries);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(AccountEntries other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Accountid != other.Accountid) return false;
        if(!entries_.Equals(other.entries_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountid) hash ^= Accountid.GetHashCode();
        hash ^= entries_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Accountid);
        }
        entries_.WriteTo(output, _repeated_entries_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Accountid);
        }
        entries_.WriteTo(ref output, _repeated_entries_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
        }
        size += entries_.CalculateSize(_repeated_entries_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(AccountEntries other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountid) {
          Accountid = other.Accountid;
        }
        entries_.Add(other.entries_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Accountid = input.ReadUInt32();
              break;
            }
            case 18: {
              entries_.AddEntriesFrom(input, _repeated_entries_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Accountid = input.ReadUInt32();
              break;
            }
            case 18: {
              entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class PlayerQuestData : pb::IMessage<PlayerQuestData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerQuestData> _parser = new pb::MessageParser<PlayerQuestData>(() => new PlayerQuestData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerQuestData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerQuestData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerQuestData(PlayerQuestData other) : this() {
    _hasBits0 = other._hasBits0;
    questerAccountId_ = other.questerAccountId_;
    questItemData_ = other.questItemData_.Clone();
    xpProgressData_ = other.xpProgressData_.Clone();
    timePlayed_ = other.timePlayed_;
    mmGameMode_ = other.mmGameMode_;
    itemUpdates_ = other.itemUpdates_.Clone();
    operationPointsEligible_ = other.operationPointsEligible_;
    userstatchanges_ = other.userstatchanges_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerQuestData Clone() {
    return new PlayerQuestData(this);
  }

  /// <summary>Field number for the "quester_account_id" field.</summary>
  public const int QuesterAccountIdFieldNumber = 1;
  private readonly static uint QuesterAccountIdDefaultValue = 0;

  private uint questerAccountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QuesterAccountId {
    get { if ((_hasBits0 & 1) != 0) { return questerAccountId_; } else { return QuesterAccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      questerAccountId_ = value;
    }
  }
  /// <summary>Gets whether the "quester_account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQuesterAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "quester_account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQuesterAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "quest_item_data" field.</summary>
  public const int QuestItemDataFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PlayerQuestData.Types.QuestItemData> _repeated_questItemData_codec
      = pb::FieldCodec.ForMessage(18, global::PlayerQuestData.Types.QuestItemData.Parser);
  private readonly pbc::RepeatedField<global::PlayerQuestData.Types.QuestItemData> questItemData_ = new pbc::RepeatedField<global::PlayerQuestData.Types.QuestItemData>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PlayerQuestData.Types.QuestItemData> QuestItemData {
    get { return questItemData_; }
  }

  /// <summary>Field number for the "xp_progress_data" field.</summary>
  public const int XpProgressDataFieldNumber = 3;
  private static readonly pb::FieldCodec<global::XpProgressData> _repeated_xpProgressData_codec
      = pb::FieldCodec.ForMessage(26, global::XpProgressData.Parser);
  private readonly pbc::RepeatedField<global::XpProgressData> xpProgressData_ = new pbc::RepeatedField<global::XpProgressData>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::XpProgressData> XpProgressData {
    get { return xpProgressData_; }
  }

  /// <summary>Field number for the "time_played" field.</summary>
  public const int TimePlayedFieldNumber = 4;
  private readonly static uint TimePlayedDefaultValue = 0;

  private uint timePlayed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimePlayed {
    get { if ((_hasBits0 & 2) != 0) { return timePlayed_; } else { return TimePlayedDefaultValue; } }
    set {
      _hasBits0 |= 2;
      timePlayed_ = value;
    }
  }
  /// <summary>Gets whether the "time_played" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimePlayed {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "time_played" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimePlayed() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "mm_game_mode" field.</summary>
  public const int MmGameModeFieldNumber = 5;
  private readonly static uint MmGameModeDefaultValue = 0;

  private uint mmGameMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MmGameMode {
    get { if ((_hasBits0 & 4) != 0) { return mmGameMode_; } else { return MmGameModeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      mmGameMode_ = value;
    }
  }
  /// <summary>Gets whether the "mm_game_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMmGameMode {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "mm_game_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMmGameMode() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "item_updates" field.</summary>
  public const int ItemUpdatesFieldNumber = 6;
  private static readonly pb::FieldCodec<global::MatchEndItemUpdates> _repeated_itemUpdates_codec
      = pb::FieldCodec.ForMessage(50, global::MatchEndItemUpdates.Parser);
  private readonly pbc::RepeatedField<global::MatchEndItemUpdates> itemUpdates_ = new pbc::RepeatedField<global::MatchEndItemUpdates>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::MatchEndItemUpdates> ItemUpdates {
    get { return itemUpdates_; }
  }

  /// <summary>Field number for the "operation_points_eligible" field.</summary>
  public const int OperationPointsEligibleFieldNumber = 7;
  private readonly static bool OperationPointsEligibleDefaultValue = false;

  private bool operationPointsEligible_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool OperationPointsEligible {
    get { if ((_hasBits0 & 8) != 0) { return operationPointsEligible_; } else { return OperationPointsEligibleDefaultValue; } }
    set {
      _hasBits0 |= 8;
      operationPointsEligible_ = value;
    }
  }
  /// <summary>Gets whether the "operation_points_eligible" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOperationPointsEligible {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "operation_points_eligible" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOperationPointsEligible() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "userstatchanges" field.</summary>
  public const int UserstatchangesFieldNumber = 8;
  private static readonly pb::FieldCodec<global::CMsgCsgoSteamUserStatChange> _repeated_userstatchanges_codec
      = pb::FieldCodec.ForMessage(66, global::CMsgCsgoSteamUserStatChange.Parser);
  private readonly pbc::RepeatedField<global::CMsgCsgoSteamUserStatChange> userstatchanges_ = new pbc::RepeatedField<global::CMsgCsgoSteamUserStatChange>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgCsgoSteamUserStatChange> Userstatchanges {
    get { return userstatchanges_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerQuestData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerQuestData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (QuesterAccountId != other.QuesterAccountId) return false;
    if(!questItemData_.Equals(other.questItemData_)) return false;
    if(!xpProgressData_.Equals(other.xpProgressData_)) return false;
    if (TimePlayed != other.TimePlayed) return false;
    if (MmGameMode != other.MmGameMode) return false;
    if(!itemUpdates_.Equals(other.itemUpdates_)) return false;
    if (OperationPointsEligible != other.OperationPointsEligible) return false;
    if(!userstatchanges_.Equals(other.userstatchanges_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasQuesterAccountId) hash ^= QuesterAccountId.GetHashCode();
    hash ^= questItemData_.GetHashCode();
    hash ^= xpProgressData_.GetHashCode();
    if (HasTimePlayed) hash ^= TimePlayed.GetHashCode();
    if (HasMmGameMode) hash ^= MmGameMode.GetHashCode();
    hash ^= itemUpdates_.GetHashCode();
    if (HasOperationPointsEligible) hash ^= OperationPointsEligible.GetHashCode();
    hash ^= userstatchanges_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasQuesterAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(QuesterAccountId);
    }
    questItemData_.WriteTo(output, _repeated_questItemData_codec);
    xpProgressData_.WriteTo(output, _repeated_xpProgressData_codec);
    if (HasTimePlayed) {
      output.WriteRawTag(32);
      output.WriteUInt32(TimePlayed);
    }
    if (HasMmGameMode) {
      output.WriteRawTag(40);
      output.WriteUInt32(MmGameMode);
    }
    itemUpdates_.WriteTo(output, _repeated_itemUpdates_codec);
    if (HasOperationPointsEligible) {
      output.WriteRawTag(56);
      output.WriteBool(OperationPointsEligible);
    }
    userstatchanges_.WriteTo(output, _repeated_userstatchanges_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasQuesterAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(QuesterAccountId);
    }
    questItemData_.WriteTo(ref output, _repeated_questItemData_codec);
    xpProgressData_.WriteTo(ref output, _repeated_xpProgressData_codec);
    if (HasTimePlayed) {
      output.WriteRawTag(32);
      output.WriteUInt32(TimePlayed);
    }
    if (HasMmGameMode) {
      output.WriteRawTag(40);
      output.WriteUInt32(MmGameMode);
    }
    itemUpdates_.WriteTo(ref output, _repeated_itemUpdates_codec);
    if (HasOperationPointsEligible) {
      output.WriteRawTag(56);
      output.WriteBool(OperationPointsEligible);
    }
    userstatchanges_.WriteTo(ref output, _repeated_userstatchanges_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasQuesterAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuesterAccountId);
    }
    size += questItemData_.CalculateSize(_repeated_questItemData_codec);
    size += xpProgressData_.CalculateSize(_repeated_xpProgressData_codec);
    if (HasTimePlayed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimePlayed);
    }
    if (HasMmGameMode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MmGameMode);
    }
    size += itemUpdates_.CalculateSize(_repeated_itemUpdates_codec);
    if (HasOperationPointsEligible) {
      size += 1 + 1;
    }
    size += userstatchanges_.CalculateSize(_repeated_userstatchanges_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerQuestData other) {
    if (other == null) {
      return;
    }
    if (other.HasQuesterAccountId) {
      QuesterAccountId = other.QuesterAccountId;
    }
    questItemData_.Add(other.questItemData_);
    xpProgressData_.Add(other.xpProgressData_);
    if (other.HasTimePlayed) {
      TimePlayed = other.TimePlayed;
    }
    if (other.HasMmGameMode) {
      MmGameMode = other.MmGameMode;
    }
    itemUpdates_.Add(other.itemUpdates_);
    if (other.HasOperationPointsEligible) {
      OperationPointsEligible = other.OperationPointsEligible;
    }
    userstatchanges_.Add(other.userstatchanges_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          QuesterAccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          questItemData_.AddEntriesFrom(input, _repeated_questItemData_codec);
          break;
        }
        case 26: {
          xpProgressData_.AddEntriesFrom(input, _repeated_xpProgressData_codec);
          break;
        }
        case 32: {
          TimePlayed = input.ReadUInt32();
          break;
        }
        case 40: {
          MmGameMode = input.ReadUInt32();
          break;
        }
        case 50: {
          itemUpdates_.AddEntriesFrom(input, _repeated_itemUpdates_codec);
          break;
        }
        case 56: {
          OperationPointsEligible = input.ReadBool();
          break;
        }
        case 66: {
          userstatchanges_.AddEntriesFrom(input, _repeated_userstatchanges_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          QuesterAccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          questItemData_.AddEntriesFrom(ref input, _repeated_questItemData_codec);
          break;
        }
        case 26: {
          xpProgressData_.AddEntriesFrom(ref input, _repeated_xpProgressData_codec);
          break;
        }
        case 32: {
          TimePlayed = input.ReadUInt32();
          break;
        }
        case 40: {
          MmGameMode = input.ReadUInt32();
          break;
        }
        case 50: {
          itemUpdates_.AddEntriesFrom(ref input, _repeated_itemUpdates_codec);
          break;
        }
        case 56: {
          OperationPointsEligible = input.ReadBool();
          break;
        }
        case 66: {
          userstatchanges_.AddEntriesFrom(ref input, _repeated_userstatchanges_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the PlayerQuestData message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class QuestItemData : pb::IMessage<QuestItemData>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<QuestItemData> _parser = new pb::MessageParser<QuestItemData>(() => new QuestItemData());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<QuestItemData> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::PlayerQuestData.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public QuestItemData() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public QuestItemData(QuestItemData other) : this() {
        _hasBits0 = other._hasBits0;
        questId_ = other.questId_;
        questNormalPointsEarned_ = other.questNormalPointsEarned_;
        questBonusPointsEarned_ = other.questBonusPointsEarned_;
        questNormalPointsRequired_ = other.questNormalPointsRequired_.Clone();
        questRewardXp_ = other.questRewardXp_.Clone();
        questPeriod_ = other.questPeriod_;
        questType_ = other.questType_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public QuestItemData Clone() {
        return new QuestItemData(this);
      }

      /// <summary>Field number for the "quest_id" field.</summary>
      public const int QuestIdFieldNumber = 1;
      private readonly static ulong QuestIdDefaultValue = 0UL;

      private ulong questId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong QuestId {
        get { if ((_hasBits0 & 1) != 0) { return questId_; } else { return QuestIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          questId_ = value;
        }
      }
      /// <summary>Gets whether the "quest_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasQuestId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "quest_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearQuestId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "quest_normal_points_earned" field.</summary>
      public const int QuestNormalPointsEarnedFieldNumber = 2;
      private readonly static int QuestNormalPointsEarnedDefaultValue = 0;

      private int questNormalPointsEarned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int QuestNormalPointsEarned {
        get { if ((_hasBits0 & 2) != 0) { return questNormalPointsEarned_; } else { return QuestNormalPointsEarnedDefaultValue; } }
        set {
          _hasBits0 |= 2;
          questNormalPointsEarned_ = value;
        }
      }
      /// <summary>Gets whether the "quest_normal_points_earned" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasQuestNormalPointsEarned {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "quest_normal_points_earned" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearQuestNormalPointsEarned() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "quest_bonus_points_earned" field.</summary>
      public const int QuestBonusPointsEarnedFieldNumber = 3;
      private readonly static int QuestBonusPointsEarnedDefaultValue = 0;

      private int questBonusPointsEarned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int QuestBonusPointsEarned {
        get { if ((_hasBits0 & 4) != 0) { return questBonusPointsEarned_; } else { return QuestBonusPointsEarnedDefaultValue; } }
        set {
          _hasBits0 |= 4;
          questBonusPointsEarned_ = value;
        }
      }
      /// <summary>Gets whether the "quest_bonus_points_earned" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasQuestBonusPointsEarned {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "quest_bonus_points_earned" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearQuestBonusPointsEarned() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "quest_normal_points_required" field.</summary>
      public const int QuestNormalPointsRequiredFieldNumber = 4;
      private static readonly pb::FieldCodec<int> _repeated_questNormalPointsRequired_codec
          = pb::FieldCodec.ForInt32(32);
      private readonly pbc::RepeatedField<int> questNormalPointsRequired_ = new pbc::RepeatedField<int>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<int> QuestNormalPointsRequired {
        get { return questNormalPointsRequired_; }
      }

      /// <summary>Field number for the "quest_reward_xp" field.</summary>
      public const int QuestRewardXpFieldNumber = 5;
      private static readonly pb::FieldCodec<int> _repeated_questRewardXp_codec
          = pb::FieldCodec.ForInt32(40);
      private readonly pbc::RepeatedField<int> questRewardXp_ = new pbc::RepeatedField<int>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<int> QuestRewardXp {
        get { return questRewardXp_; }
      }

      /// <summary>Field number for the "quest_period" field.</summary>
      public const int QuestPeriodFieldNumber = 6;
      private readonly static int QuestPeriodDefaultValue = 0;

      private int questPeriod_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int QuestPeriod {
        get { if ((_hasBits0 & 8) != 0) { return questPeriod_; } else { return QuestPeriodDefaultValue; } }
        set {
          _hasBits0 |= 8;
          questPeriod_ = value;
        }
      }
      /// <summary>Gets whether the "quest_period" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasQuestPeriod {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "quest_period" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearQuestPeriod() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "quest_type" field.</summary>
      public const int QuestTypeFieldNumber = 7;
      private readonly static global::QuestType QuestTypeDefaultValue = global::QuestType.KEquestTypeOperation;

      private global::QuestType questType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::QuestType QuestType {
        get { if ((_hasBits0 & 16) != 0) { return questType_; } else { return QuestTypeDefaultValue; } }
        set {
          _hasBits0 |= 16;
          questType_ = value;
        }
      }
      /// <summary>Gets whether the "quest_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasQuestType {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "quest_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearQuestType() {
        _hasBits0 &= ~16;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as QuestItemData);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(QuestItemData other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (QuestId != other.QuestId) return false;
        if (QuestNormalPointsEarned != other.QuestNormalPointsEarned) return false;
        if (QuestBonusPointsEarned != other.QuestBonusPointsEarned) return false;
        if(!questNormalPointsRequired_.Equals(other.questNormalPointsRequired_)) return false;
        if(!questRewardXp_.Equals(other.questRewardXp_)) return false;
        if (QuestPeriod != other.QuestPeriod) return false;
        if (QuestType != other.QuestType) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasQuestId) hash ^= QuestId.GetHashCode();
        if (HasQuestNormalPointsEarned) hash ^= QuestNormalPointsEarned.GetHashCode();
        if (HasQuestBonusPointsEarned) hash ^= QuestBonusPointsEarned.GetHashCode();
        hash ^= questNormalPointsRequired_.GetHashCode();
        hash ^= questRewardXp_.GetHashCode();
        if (HasQuestPeriod) hash ^= QuestPeriod.GetHashCode();
        if (HasQuestType) hash ^= QuestType.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasQuestId) {
          output.WriteRawTag(8);
          output.WriteUInt64(QuestId);
        }
        if (HasQuestNormalPointsEarned) {
          output.WriteRawTag(16);
          output.WriteInt32(QuestNormalPointsEarned);
        }
        if (HasQuestBonusPointsEarned) {
          output.WriteRawTag(24);
          output.WriteInt32(QuestBonusPointsEarned);
        }
        questNormalPointsRequired_.WriteTo(output, _repeated_questNormalPointsRequired_codec);
        questRewardXp_.WriteTo(output, _repeated_questRewardXp_codec);
        if (HasQuestPeriod) {
          output.WriteRawTag(48);
          output.WriteInt32(QuestPeriod);
        }
        if (HasQuestType) {
          output.WriteRawTag(56);
          output.WriteEnum((int) QuestType);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasQuestId) {
          output.WriteRawTag(8);
          output.WriteUInt64(QuestId);
        }
        if (HasQuestNormalPointsEarned) {
          output.WriteRawTag(16);
          output.WriteInt32(QuestNormalPointsEarned);
        }
        if (HasQuestBonusPointsEarned) {
          output.WriteRawTag(24);
          output.WriteInt32(QuestBonusPointsEarned);
        }
        questNormalPointsRequired_.WriteTo(ref output, _repeated_questNormalPointsRequired_codec);
        questRewardXp_.WriteTo(ref output, _repeated_questRewardXp_codec);
        if (HasQuestPeriod) {
          output.WriteRawTag(48);
          output.WriteInt32(QuestPeriod);
        }
        if (HasQuestType) {
          output.WriteRawTag(56);
          output.WriteEnum((int) QuestType);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasQuestId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(QuestId);
        }
        if (HasQuestNormalPointsEarned) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestNormalPointsEarned);
        }
        if (HasQuestBonusPointsEarned) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestBonusPointsEarned);
        }
        size += questNormalPointsRequired_.CalculateSize(_repeated_questNormalPointsRequired_codec);
        size += questRewardXp_.CalculateSize(_repeated_questRewardXp_codec);
        if (HasQuestPeriod) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestPeriod);
        }
        if (HasQuestType) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(QuestItemData other) {
        if (other == null) {
          return;
        }
        if (other.HasQuestId) {
          QuestId = other.QuestId;
        }
        if (other.HasQuestNormalPointsEarned) {
          QuestNormalPointsEarned = other.QuestNormalPointsEarned;
        }
        if (other.HasQuestBonusPointsEarned) {
          QuestBonusPointsEarned = other.QuestBonusPointsEarned;
        }
        questNormalPointsRequired_.Add(other.questNormalPointsRequired_);
        questRewardXp_.Add(other.questRewardXp_);
        if (other.HasQuestPeriod) {
          QuestPeriod = other.QuestPeriod;
        }
        if (other.HasQuestType) {
          QuestType = other.QuestType;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              QuestId = input.ReadUInt64();
              break;
            }
            case 16: {
              QuestNormalPointsEarned = input.ReadInt32();
              break;
            }
            case 24: {
              QuestBonusPointsEarned = input.ReadInt32();
              break;
            }
            case 34:
            case 32: {
              questNormalPointsRequired_.AddEntriesFrom(input, _repeated_questNormalPointsRequired_codec);
              break;
            }
            case 42:
            case 40: {
              questRewardXp_.AddEntriesFrom(input, _repeated_questRewardXp_codec);
              break;
            }
            case 48: {
              QuestPeriod = input.ReadInt32();
              break;
            }
            case 56: {
              QuestType = (global::QuestType) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              QuestId = input.ReadUInt64();
              break;
            }
            case 16: {
              QuestNormalPointsEarned = input.ReadInt32();
              break;
            }
            case 24: {
              QuestBonusPointsEarned = input.ReadInt32();
              break;
            }
            case 34:
            case 32: {
              questNormalPointsRequired_.AddEntriesFrom(ref input, _repeated_questNormalPointsRequired_codec);
              break;
            }
            case 42:
            case 40: {
              questRewardXp_.AddEntriesFrom(ref input, _repeated_questRewardXp_codec);
              break;
            }
            case 48: {
              QuestPeriod = input.ReadInt32();
              break;
            }
            case 56: {
              QuestType = (global::QuestType) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class DeepPlayerStatsEntry : pb::IMessage<DeepPlayerStatsEntry>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<DeepPlayerStatsEntry> _parser = new pb::MessageParser<DeepPlayerStatsEntry>(() => new DeepPlayerStatsEntry());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<DeepPlayerStatsEntry> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DeepPlayerStatsEntry() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DeepPlayerStatsEntry(DeepPlayerStatsEntry other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    matchId_ = other.matchId_;
    mmGameMode_ = other.mmGameMode_;
    mapid_ = other.mapid_;
    bStartingCt_ = other.bStartingCt_;
    matchOutcome_ = other.matchOutcome_;
    roundsWon_ = other.roundsWon_;
    roundsLost_ = other.roundsLost_;
    statScore_ = other.statScore_;
    statDeaths_ = other.statDeaths_;
    statMvps_ = other.statMvps_;
    enemyKills_ = other.enemyKills_;
    enemyHeadshots_ = other.enemyHeadshots_;
    enemy2Ks_ = other.enemy2Ks_;
    enemy3Ks_ = other.enemy3Ks_;
    enemy4Ks_ = other.enemy4Ks_;
    totalDamage_ = other.totalDamage_;
    engagementsEntryCount_ = other.engagementsEntryCount_;
    engagementsEntryWins_ = other.engagementsEntryWins_;
    engagements1V1Count_ = other.engagements1V1Count_;
    engagements1V1Wins_ = other.engagements1V1Wins_;
    engagements1V2Count_ = other.engagements1V2Count_;
    engagements1V2Wins_ = other.engagements1V2Wins_;
    utilityCount_ = other.utilityCount_;
    utilitySuccess_ = other.utilitySuccess_;
    flashCount_ = other.flashCount_;
    flashSuccess_ = other.flashSuccess_;
    mates_ = other.mates_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DeepPlayerStatsEntry Clone() {
    return new DeepPlayerStatsEntry(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 2;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 2) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "mm_game_mode" field.</summary>
  public const int MmGameModeFieldNumber = 3;
  private readonly static uint MmGameModeDefaultValue = 0;

  private uint mmGameMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MmGameMode {
    get { if ((_hasBits0 & 4) != 0) { return mmGameMode_; } else { return MmGameModeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      mmGameMode_ = value;
    }
  }
  /// <summary>Gets whether the "mm_game_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMmGameMode {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "mm_game_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMmGameMode() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "mapid" field.</summary>
  public const int MapidFieldNumber = 4;
  private readonly static uint MapidDefaultValue = 0;

  private uint mapid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Mapid {
    get { if ((_hasBits0 & 8) != 0) { return mapid_; } else { return MapidDefaultValue; } }
    set {
      _hasBits0 |= 8;
      mapid_ = value;
    }
  }
  /// <summary>Gets whether the "mapid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMapid {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "mapid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMapid() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "b_starting_ct" field.</summary>
  public const int BStartingCtFieldNumber = 5;
  private readonly static bool BStartingCtDefaultValue = false;

  private bool bStartingCt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BStartingCt {
    get { if ((_hasBits0 & 16) != 0) { return bStartingCt_; } else { return BStartingCtDefaultValue; } }
    set {
      _hasBits0 |= 16;
      bStartingCt_ = value;
    }
  }
  /// <summary>Gets whether the "b_starting_ct" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBStartingCt {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "b_starting_ct" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBStartingCt() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "match_outcome" field.</summary>
  public const int MatchOutcomeFieldNumber = 6;
  private readonly static uint MatchOutcomeDefaultValue = 0;

  private uint matchOutcome_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MatchOutcome {
    get { if ((_hasBits0 & 32) != 0) { return matchOutcome_; } else { return MatchOutcomeDefaultValue; } }
    set {
      _hasBits0 |= 32;
      matchOutcome_ = value;
    }
  }
  /// <summary>Gets whether the "match_outcome" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchOutcome {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "match_outcome" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchOutcome() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "rounds_won" field.</summary>
  public const int RoundsWonFieldNumber = 7;
  private readonly static uint RoundsWonDefaultValue = 0;

  private uint roundsWon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RoundsWon {
    get { if ((_hasBits0 & 64) != 0) { return roundsWon_; } else { return RoundsWonDefaultValue; } }
    set {
      _hasBits0 |= 64;
      roundsWon_ = value;
    }
  }
  /// <summary>Gets whether the "rounds_won" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRoundsWon {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "rounds_won" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRoundsWon() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "rounds_lost" field.</summary>
  public const int RoundsLostFieldNumber = 8;
  private readonly static uint RoundsLostDefaultValue = 0;

  private uint roundsLost_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RoundsLost {
    get { if ((_hasBits0 & 128) != 0) { return roundsLost_; } else { return RoundsLostDefaultValue; } }
    set {
      _hasBits0 |= 128;
      roundsLost_ = value;
    }
  }
  /// <summary>Gets whether the "rounds_lost" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRoundsLost {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "rounds_lost" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRoundsLost() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "stat_score" field.</summary>
  public const int StatScoreFieldNumber = 9;
  private readonly static uint StatScoreDefaultValue = 0;

  private uint statScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StatScore {
    get { if ((_hasBits0 & 256) != 0) { return statScore_; } else { return StatScoreDefaultValue; } }
    set {
      _hasBits0 |= 256;
      statScore_ = value;
    }
  }
  /// <summary>Gets whether the "stat_score" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStatScore {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "stat_score" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStatScore() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "stat_deaths" field.</summary>
  public const int StatDeathsFieldNumber = 12;
  private readonly static uint StatDeathsDefaultValue = 0;

  private uint statDeaths_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StatDeaths {
    get { if ((_hasBits0 & 512) != 0) { return statDeaths_; } else { return StatDeathsDefaultValue; } }
    set {
      _hasBits0 |= 512;
      statDeaths_ = value;
    }
  }
  /// <summary>Gets whether the "stat_deaths" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStatDeaths {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "stat_deaths" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStatDeaths() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "stat_mvps" field.</summary>
  public const int StatMvpsFieldNumber = 13;
  private readonly static uint StatMvpsDefaultValue = 0;

  private uint statMvps_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StatMvps {
    get { if ((_hasBits0 & 1024) != 0) { return statMvps_; } else { return StatMvpsDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      statMvps_ = value;
    }
  }
  /// <summary>Gets whether the "stat_mvps" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStatMvps {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "stat_mvps" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStatMvps() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "enemy_kills" field.</summary>
  public const int EnemyKillsFieldNumber = 14;
  private readonly static uint EnemyKillsDefaultValue = 0;

  private uint enemyKills_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EnemyKills {
    get { if ((_hasBits0 & 2048) != 0) { return enemyKills_; } else { return EnemyKillsDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      enemyKills_ = value;
    }
  }
  /// <summary>Gets whether the "enemy_kills" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEnemyKills {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "enemy_kills" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEnemyKills() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "enemy_headshots" field.</summary>
  public const int EnemyHeadshotsFieldNumber = 15;
  private readonly static uint EnemyHeadshotsDefaultValue = 0;

  private uint enemyHeadshots_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EnemyHeadshots {
    get { if ((_hasBits0 & 4096) != 0) { return enemyHeadshots_; } else { return EnemyHeadshotsDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      enemyHeadshots_ = value;
    }
  }
  /// <summary>Gets whether the "enemy_headshots" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEnemyHeadshots {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "enemy_headshots" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEnemyHeadshots() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "enemy_2ks" field.</summary>
  public const int Enemy2KsFieldNumber = 16;
  private readonly static uint Enemy2KsDefaultValue = 0;

  private uint enemy2Ks_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Enemy2Ks {
    get { if ((_hasBits0 & 8192) != 0) { return enemy2Ks_; } else { return Enemy2KsDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      enemy2Ks_ = value;
    }
  }
  /// <summary>Gets whether the "enemy_2ks" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEnemy2Ks {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "enemy_2ks" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEnemy2Ks() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "enemy_3ks" field.</summary>
  public const int Enemy3KsFieldNumber = 17;
  private readonly static uint Enemy3KsDefaultValue = 0;

  private uint enemy3Ks_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Enemy3Ks {
    get { if ((_hasBits0 & 16384) != 0) { return enemy3Ks_; } else { return Enemy3KsDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      enemy3Ks_ = value;
    }
  }
  /// <summary>Gets whether the "enemy_3ks" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEnemy3Ks {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "enemy_3ks" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEnemy3Ks() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "enemy_4ks" field.</summary>
  public const int Enemy4KsFieldNumber = 18;
  private readonly static uint Enemy4KsDefaultValue = 0;

  private uint enemy4Ks_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Enemy4Ks {
    get { if ((_hasBits0 & 32768) != 0) { return enemy4Ks_; } else { return Enemy4KsDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      enemy4Ks_ = value;
    }
  }
  /// <summary>Gets whether the "enemy_4ks" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEnemy4Ks {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "enemy_4ks" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEnemy4Ks() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "total_damage" field.</summary>
  public const int TotalDamageFieldNumber = 19;
  private readonly static uint TotalDamageDefaultValue = 0;

  private uint totalDamage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TotalDamage {
    get { if ((_hasBits0 & 65536) != 0) { return totalDamage_; } else { return TotalDamageDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      totalDamage_ = value;
    }
  }
  /// <summary>Gets whether the "total_damage" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalDamage {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "total_damage" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalDamage() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "engagements_entry_count" field.</summary>
  public const int EngagementsEntryCountFieldNumber = 23;
  private readonly static uint EngagementsEntryCountDefaultValue = 0;

  private uint engagementsEntryCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EngagementsEntryCount {
    get { if ((_hasBits0 & 131072) != 0) { return engagementsEntryCount_; } else { return EngagementsEntryCountDefaultValue; } }
    set {
      _hasBits0 |= 131072;
      engagementsEntryCount_ = value;
    }
  }
  /// <summary>Gets whether the "engagements_entry_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEngagementsEntryCount {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "engagements_entry_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEngagementsEntryCount() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "engagements_entry_wins" field.</summary>
  public const int EngagementsEntryWinsFieldNumber = 24;
  private readonly static uint EngagementsEntryWinsDefaultValue = 0;

  private uint engagementsEntryWins_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EngagementsEntryWins {
    get { if ((_hasBits0 & 262144) != 0) { return engagementsEntryWins_; } else { return EngagementsEntryWinsDefaultValue; } }
    set {
      _hasBits0 |= 262144;
      engagementsEntryWins_ = value;
    }
  }
  /// <summary>Gets whether the "engagements_entry_wins" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEngagementsEntryWins {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "engagements_entry_wins" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEngagementsEntryWins() {
    _hasBits0 &= ~262144;
  }

  /// <summary>Field number for the "engagements_1v1_count" field.</summary>
  public const int Engagements1V1CountFieldNumber = 25;
  private readonly static uint Engagements1V1CountDefaultValue = 0;

  private uint engagements1V1Count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Engagements1V1Count {
    get { if ((_hasBits0 & 524288) != 0) { return engagements1V1Count_; } else { return Engagements1V1CountDefaultValue; } }
    set {
      _hasBits0 |= 524288;
      engagements1V1Count_ = value;
    }
  }
  /// <summary>Gets whether the "engagements_1v1_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEngagements1V1Count {
    get { return (_hasBits0 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "engagements_1v1_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEngagements1V1Count() {
    _hasBits0 &= ~524288;
  }

  /// <summary>Field number for the "engagements_1v1_wins" field.</summary>
  public const int Engagements1V1WinsFieldNumber = 26;
  private readonly static uint Engagements1V1WinsDefaultValue = 0;

  private uint engagements1V1Wins_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Engagements1V1Wins {
    get { if ((_hasBits0 & 1048576) != 0) { return engagements1V1Wins_; } else { return Engagements1V1WinsDefaultValue; } }
    set {
      _hasBits0 |= 1048576;
      engagements1V1Wins_ = value;
    }
  }
  /// <summary>Gets whether the "engagements_1v1_wins" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEngagements1V1Wins {
    get { return (_hasBits0 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "engagements_1v1_wins" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEngagements1V1Wins() {
    _hasBits0 &= ~1048576;
  }

  /// <summary>Field number for the "engagements_1v2_count" field.</summary>
  public const int Engagements1V2CountFieldNumber = 27;
  private readonly static uint Engagements1V2CountDefaultValue = 0;

  private uint engagements1V2Count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Engagements1V2Count {
    get { if ((_hasBits0 & 2097152) != 0) { return engagements1V2Count_; } else { return Engagements1V2CountDefaultValue; } }
    set {
      _hasBits0 |= 2097152;
      engagements1V2Count_ = value;
    }
  }
  /// <summary>Gets whether the "engagements_1v2_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEngagements1V2Count {
    get { return (_hasBits0 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "engagements_1v2_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEngagements1V2Count() {
    _hasBits0 &= ~2097152;
  }

  /// <summary>Field number for the "engagements_1v2_wins" field.</summary>
  public const int Engagements1V2WinsFieldNumber = 28;
  private readonly static uint Engagements1V2WinsDefaultValue = 0;

  private uint engagements1V2Wins_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Engagements1V2Wins {
    get { if ((_hasBits0 & 4194304) != 0) { return engagements1V2Wins_; } else { return Engagements1V2WinsDefaultValue; } }
    set {
      _hasBits0 |= 4194304;
      engagements1V2Wins_ = value;
    }
  }
  /// <summary>Gets whether the "engagements_1v2_wins" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEngagements1V2Wins {
    get { return (_hasBits0 & 4194304) != 0; }
  }
  /// <summary>Clears the value of the "engagements_1v2_wins" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEngagements1V2Wins() {
    _hasBits0 &= ~4194304;
  }

  /// <summary>Field number for the "utility_count" field.</summary>
  public const int UtilityCountFieldNumber = 29;
  private readonly static uint UtilityCountDefaultValue = 0;

  private uint utilityCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UtilityCount {
    get { if ((_hasBits0 & 8388608) != 0) { return utilityCount_; } else { return UtilityCountDefaultValue; } }
    set {
      _hasBits0 |= 8388608;
      utilityCount_ = value;
    }
  }
  /// <summary>Gets whether the "utility_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUtilityCount {
    get { return (_hasBits0 & 8388608) != 0; }
  }
  /// <summary>Clears the value of the "utility_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUtilityCount() {
    _hasBits0 &= ~8388608;
  }

  /// <summary>Field number for the "utility_success" field.</summary>
  public const int UtilitySuccessFieldNumber = 30;
  private readonly static uint UtilitySuccessDefaultValue = 0;

  private uint utilitySuccess_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UtilitySuccess {
    get { if ((_hasBits0 & 16777216) != 0) { return utilitySuccess_; } else { return UtilitySuccessDefaultValue; } }
    set {
      _hasBits0 |= 16777216;
      utilitySuccess_ = value;
    }
  }
  /// <summary>Gets whether the "utility_success" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUtilitySuccess {
    get { return (_hasBits0 & 16777216) != 0; }
  }
  /// <summary>Clears the value of the "utility_success" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUtilitySuccess() {
    _hasBits0 &= ~16777216;
  }

  /// <summary>Field number for the "flash_count" field.</summary>
  public const int FlashCountFieldNumber = 32;
  private readonly static uint FlashCountDefaultValue = 0;

  private uint flashCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FlashCount {
    get { if ((_hasBits0 & 33554432) != 0) { return flashCount_; } else { return FlashCountDefaultValue; } }
    set {
      _hasBits0 |= 33554432;
      flashCount_ = value;
    }
  }
  /// <summary>Gets whether the "flash_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlashCount {
    get { return (_hasBits0 & 33554432) != 0; }
  }
  /// <summary>Clears the value of the "flash_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlashCount() {
    _hasBits0 &= ~33554432;
  }

  /// <summary>Field number for the "flash_success" field.</summary>
  public const int FlashSuccessFieldNumber = 33;
  private readonly static uint FlashSuccessDefaultValue = 0;

  private uint flashSuccess_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FlashSuccess {
    get { if ((_hasBits0 & 67108864) != 0) { return flashSuccess_; } else { return FlashSuccessDefaultValue; } }
    set {
      _hasBits0 |= 67108864;
      flashSuccess_ = value;
    }
  }
  /// <summary>Gets whether the "flash_success" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlashSuccess {
    get { return (_hasBits0 & 67108864) != 0; }
  }
  /// <summary>Clears the value of the "flash_success" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlashSuccess() {
    _hasBits0 &= ~67108864;
  }

  /// <summary>Field number for the "mates" field.</summary>
  public const int MatesFieldNumber = 34;
  private static readonly pb::FieldCodec<uint> _repeated_mates_codec
      = pb::FieldCodec.ForUInt32(272);
  private readonly pbc::RepeatedField<uint> mates_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> Mates {
    get { return mates_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as DeepPlayerStatsEntry);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(DeepPlayerStatsEntry other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    if (MatchId != other.MatchId) return false;
    if (MmGameMode != other.MmGameMode) return false;
    if (Mapid != other.Mapid) return false;
    if (BStartingCt != other.BStartingCt) return false;
    if (MatchOutcome != other.MatchOutcome) return false;
    if (RoundsWon != other.RoundsWon) return false;
    if (RoundsLost != other.RoundsLost) return false;
    if (StatScore != other.StatScore) return false;
    if (StatDeaths != other.StatDeaths) return false;
    if (StatMvps != other.StatMvps) return false;
    if (EnemyKills != other.EnemyKills) return false;
    if (EnemyHeadshots != other.EnemyHeadshots) return false;
    if (Enemy2Ks != other.Enemy2Ks) return false;
    if (Enemy3Ks != other.Enemy3Ks) return false;
    if (Enemy4Ks != other.Enemy4Ks) return false;
    if (TotalDamage != other.TotalDamage) return false;
    if (EngagementsEntryCount != other.EngagementsEntryCount) return false;
    if (EngagementsEntryWins != other.EngagementsEntryWins) return false;
    if (Engagements1V1Count != other.Engagements1V1Count) return false;
    if (Engagements1V1Wins != other.Engagements1V1Wins) return false;
    if (Engagements1V2Count != other.Engagements1V2Count) return false;
    if (Engagements1V2Wins != other.Engagements1V2Wins) return false;
    if (UtilityCount != other.UtilityCount) return false;
    if (UtilitySuccess != other.UtilitySuccess) return false;
    if (FlashCount != other.FlashCount) return false;
    if (FlashSuccess != other.FlashSuccess) return false;
    if(!mates_.Equals(other.mates_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (HasMmGameMode) hash ^= MmGameMode.GetHashCode();
    if (HasMapid) hash ^= Mapid.GetHashCode();
    if (HasBStartingCt) hash ^= BStartingCt.GetHashCode();
    if (HasMatchOutcome) hash ^= MatchOutcome.GetHashCode();
    if (HasRoundsWon) hash ^= RoundsWon.GetHashCode();
    if (HasRoundsLost) hash ^= RoundsLost.GetHashCode();
    if (HasStatScore) hash ^= StatScore.GetHashCode();
    if (HasStatDeaths) hash ^= StatDeaths.GetHashCode();
    if (HasStatMvps) hash ^= StatMvps.GetHashCode();
    if (HasEnemyKills) hash ^= EnemyKills.GetHashCode();
    if (HasEnemyHeadshots) hash ^= EnemyHeadshots.GetHashCode();
    if (HasEnemy2Ks) hash ^= Enemy2Ks.GetHashCode();
    if (HasEnemy3Ks) hash ^= Enemy3Ks.GetHashCode();
    if (HasEnemy4Ks) hash ^= Enemy4Ks.GetHashCode();
    if (HasTotalDamage) hash ^= TotalDamage.GetHashCode();
    if (HasEngagementsEntryCount) hash ^= EngagementsEntryCount.GetHashCode();
    if (HasEngagementsEntryWins) hash ^= EngagementsEntryWins.GetHashCode();
    if (HasEngagements1V1Count) hash ^= Engagements1V1Count.GetHashCode();
    if (HasEngagements1V1Wins) hash ^= Engagements1V1Wins.GetHashCode();
    if (HasEngagements1V2Count) hash ^= Engagements1V2Count.GetHashCode();
    if (HasEngagements1V2Wins) hash ^= Engagements1V2Wins.GetHashCode();
    if (HasUtilityCount) hash ^= UtilityCount.GetHashCode();
    if (HasUtilitySuccess) hash ^= UtilitySuccess.GetHashCode();
    if (HasFlashCount) hash ^= FlashCount.GetHashCode();
    if (HasFlashSuccess) hash ^= FlashSuccess.GetHashCode();
    hash ^= mates_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasMatchId) {
      output.WriteRawTag(16);
      output.WriteUInt64(MatchId);
    }
    if (HasMmGameMode) {
      output.WriteRawTag(24);
      output.WriteUInt32(MmGameMode);
    }
    if (HasMapid) {
      output.WriteRawTag(32);
      output.WriteUInt32(Mapid);
    }
    if (HasBStartingCt) {
      output.WriteRawTag(40);
      output.WriteBool(BStartingCt);
    }
    if (HasMatchOutcome) {
      output.WriteRawTag(48);
      output.WriteUInt32(MatchOutcome);
    }
    if (HasRoundsWon) {
      output.WriteRawTag(56);
      output.WriteUInt32(RoundsWon);
    }
    if (HasRoundsLost) {
      output.WriteRawTag(64);
      output.WriteUInt32(RoundsLost);
    }
    if (HasStatScore) {
      output.WriteRawTag(72);
      output.WriteUInt32(StatScore);
    }
    if (HasStatDeaths) {
      output.WriteRawTag(96);
      output.WriteUInt32(StatDeaths);
    }
    if (HasStatMvps) {
      output.WriteRawTag(104);
      output.WriteUInt32(StatMvps);
    }
    if (HasEnemyKills) {
      output.WriteRawTag(112);
      output.WriteUInt32(EnemyKills);
    }
    if (HasEnemyHeadshots) {
      output.WriteRawTag(120);
      output.WriteUInt32(EnemyHeadshots);
    }
    if (HasEnemy2Ks) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Enemy2Ks);
    }
    if (HasEnemy3Ks) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(Enemy3Ks);
    }
    if (HasEnemy4Ks) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Enemy4Ks);
    }
    if (HasTotalDamage) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(TotalDamage);
    }
    if (HasEngagementsEntryCount) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(EngagementsEntryCount);
    }
    if (HasEngagementsEntryWins) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(EngagementsEntryWins);
    }
    if (HasEngagements1V1Count) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(Engagements1V1Count);
    }
    if (HasEngagements1V1Wins) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(Engagements1V1Wins);
    }
    if (HasEngagements1V2Count) {
      output.WriteRawTag(216, 1);
      output.WriteUInt32(Engagements1V2Count);
    }
    if (HasEngagements1V2Wins) {
      output.WriteRawTag(224, 1);
      output.WriteUInt32(Engagements1V2Wins);
    }
    if (HasUtilityCount) {
      output.WriteRawTag(232, 1);
      output.WriteUInt32(UtilityCount);
    }
    if (HasUtilitySuccess) {
      output.WriteRawTag(240, 1);
      output.WriteUInt32(UtilitySuccess);
    }
    if (HasFlashCount) {
      output.WriteRawTag(128, 2);
      output.WriteUInt32(FlashCount);
    }
    if (HasFlashSuccess) {
      output.WriteRawTag(136, 2);
      output.WriteUInt32(FlashSuccess);
    }
    mates_.WriteTo(output, _repeated_mates_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasMatchId) {
      output.WriteRawTag(16);
      output.WriteUInt64(MatchId);
    }
    if (HasMmGameMode) {
      output.WriteRawTag(24);
      output.WriteUInt32(MmGameMode);
    }
    if (HasMapid) {
      output.WriteRawTag(32);
      output.WriteUInt32(Mapid);
    }
    if (HasBStartingCt) {
      output.WriteRawTag(40);
      output.WriteBool(BStartingCt);
    }
    if (HasMatchOutcome) {
      output.WriteRawTag(48);
      output.WriteUInt32(MatchOutcome);
    }
    if (HasRoundsWon) {
      output.WriteRawTag(56);
      output.WriteUInt32(RoundsWon);
    }
    if (HasRoundsLost) {
      output.WriteRawTag(64);
      output.WriteUInt32(RoundsLost);
    }
    if (HasStatScore) {
      output.WriteRawTag(72);
      output.WriteUInt32(StatScore);
    }
    if (HasStatDeaths) {
      output.WriteRawTag(96);
      output.WriteUInt32(StatDeaths);
    }
    if (HasStatMvps) {
      output.WriteRawTag(104);
      output.WriteUInt32(StatMvps);
    }
    if (HasEnemyKills) {
      output.WriteRawTag(112);
      output.WriteUInt32(EnemyKills);
    }
    if (HasEnemyHeadshots) {
      output.WriteRawTag(120);
      output.WriteUInt32(EnemyHeadshots);
    }
    if (HasEnemy2Ks) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Enemy2Ks);
    }
    if (HasEnemy3Ks) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(Enemy3Ks);
    }
    if (HasEnemy4Ks) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Enemy4Ks);
    }
    if (HasTotalDamage) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(TotalDamage);
    }
    if (HasEngagementsEntryCount) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(EngagementsEntryCount);
    }
    if (HasEngagementsEntryWins) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(EngagementsEntryWins);
    }
    if (HasEngagements1V1Count) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(Engagements1V1Count);
    }
    if (HasEngagements1V1Wins) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(Engagements1V1Wins);
    }
    if (HasEngagements1V2Count) {
      output.WriteRawTag(216, 1);
      output.WriteUInt32(Engagements1V2Count);
    }
    if (HasEngagements1V2Wins) {
      output.WriteRawTag(224, 1);
      output.WriteUInt32(Engagements1V2Wins);
    }
    if (HasUtilityCount) {
      output.WriteRawTag(232, 1);
      output.WriteUInt32(UtilityCount);
    }
    if (HasUtilitySuccess) {
      output.WriteRawTag(240, 1);
      output.WriteUInt32(UtilitySuccess);
    }
    if (HasFlashCount) {
      output.WriteRawTag(128, 2);
      output.WriteUInt32(FlashCount);
    }
    if (HasFlashSuccess) {
      output.WriteRawTag(136, 2);
      output.WriteUInt32(FlashSuccess);
    }
    mates_.WriteTo(ref output, _repeated_mates_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (HasMmGameMode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MmGameMode);
    }
    if (HasMapid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mapid);
    }
    if (HasBStartingCt) {
      size += 1 + 1;
    }
    if (HasMatchOutcome) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MatchOutcome);
    }
    if (HasRoundsWon) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoundsWon);
    }
    if (HasRoundsLost) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoundsLost);
    }
    if (HasStatScore) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatScore);
    }
    if (HasStatDeaths) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatDeaths);
    }
    if (HasStatMvps) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatMvps);
    }
    if (HasEnemyKills) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnemyKills);
    }
    if (HasEnemyHeadshots) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnemyHeadshots);
    }
    if (HasEnemy2Ks) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Enemy2Ks);
    }
    if (HasEnemy3Ks) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Enemy3Ks);
    }
    if (HasEnemy4Ks) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Enemy4Ks);
    }
    if (HasTotalDamage) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalDamage);
    }
    if (HasEngagementsEntryCount) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EngagementsEntryCount);
    }
    if (HasEngagementsEntryWins) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EngagementsEntryWins);
    }
    if (HasEngagements1V1Count) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Engagements1V1Count);
    }
    if (HasEngagements1V1Wins) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Engagements1V1Wins);
    }
    if (HasEngagements1V2Count) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Engagements1V2Count);
    }
    if (HasEngagements1V2Wins) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Engagements1V2Wins);
    }
    if (HasUtilityCount) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UtilityCount);
    }
    if (HasUtilitySuccess) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UtilitySuccess);
    }
    if (HasFlashCount) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FlashCount);
    }
    if (HasFlashSuccess) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FlashSuccess);
    }
    size += mates_.CalculateSize(_repeated_mates_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(DeepPlayerStatsEntry other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    if (other.HasMmGameMode) {
      MmGameMode = other.MmGameMode;
    }
    if (other.HasMapid) {
      Mapid = other.Mapid;
    }
    if (other.HasBStartingCt) {
      BStartingCt = other.BStartingCt;
    }
    if (other.HasMatchOutcome) {
      MatchOutcome = other.MatchOutcome;
    }
    if (other.HasRoundsWon) {
      RoundsWon = other.RoundsWon;
    }
    if (other.HasRoundsLost) {
      RoundsLost = other.RoundsLost;
    }
    if (other.HasStatScore) {
      StatScore = other.StatScore;
    }
    if (other.HasStatDeaths) {
      StatDeaths = other.StatDeaths;
    }
    if (other.HasStatMvps) {
      StatMvps = other.StatMvps;
    }
    if (other.HasEnemyKills) {
      EnemyKills = other.EnemyKills;
    }
    if (other.HasEnemyHeadshots) {
      EnemyHeadshots = other.EnemyHeadshots;
    }
    if (other.HasEnemy2Ks) {
      Enemy2Ks = other.Enemy2Ks;
    }
    if (other.HasEnemy3Ks) {
      Enemy3Ks = other.Enemy3Ks;
    }
    if (other.HasEnemy4Ks) {
      Enemy4Ks = other.Enemy4Ks;
    }
    if (other.HasTotalDamage) {
      TotalDamage = other.TotalDamage;
    }
    if (other.HasEngagementsEntryCount) {
      EngagementsEntryCount = other.EngagementsEntryCount;
    }
    if (other.HasEngagementsEntryWins) {
      EngagementsEntryWins = other.EngagementsEntryWins;
    }
    if (other.HasEngagements1V1Count) {
      Engagements1V1Count = other.Engagements1V1Count;
    }
    if (other.HasEngagements1V1Wins) {
      Engagements1V1Wins = other.Engagements1V1Wins;
    }
    if (other.HasEngagements1V2Count) {
      Engagements1V2Count = other.Engagements1V2Count;
    }
    if (other.HasEngagements1V2Wins) {
      Engagements1V2Wins = other.Engagements1V2Wins;
    }
    if (other.HasUtilityCount) {
      UtilityCount = other.UtilityCount;
    }
    if (other.HasUtilitySuccess) {
      UtilitySuccess = other.UtilitySuccess;
    }
    if (other.HasFlashCount) {
      FlashCount = other.FlashCount;
    }
    if (other.HasFlashSuccess) {
      FlashSuccess = other.FlashSuccess;
    }
    mates_.Add(other.mates_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 24: {
          MmGameMode = input.ReadUInt32();
          break;
        }
        case 32: {
          Mapid = input.ReadUInt32();
          break;
        }
        case 40: {
          BStartingCt = input.ReadBool();
          break;
        }
        case 48: {
          MatchOutcome = input.ReadUInt32();
          break;
        }
        case 56: {
          RoundsWon = input.ReadUInt32();
          break;
        }
        case 64: {
          RoundsLost = input.ReadUInt32();
          break;
        }
        case 72: {
          StatScore = input.ReadUInt32();
          break;
        }
        case 96: {
          StatDeaths = input.ReadUInt32();
          break;
        }
        case 104: {
          StatMvps = input.ReadUInt32();
          break;
        }
        case 112: {
          EnemyKills = input.ReadUInt32();
          break;
        }
        case 120: {
          EnemyHeadshots = input.ReadUInt32();
          break;
        }
        case 128: {
          Enemy2Ks = input.ReadUInt32();
          break;
        }
        case 136: {
          Enemy3Ks = input.ReadUInt32();
          break;
        }
        case 144: {
          Enemy4Ks = input.ReadUInt32();
          break;
        }
        case 152: {
          TotalDamage = input.ReadUInt32();
          break;
        }
        case 184: {
          EngagementsEntryCount = input.ReadUInt32();
          break;
        }
        case 192: {
          EngagementsEntryWins = input.ReadUInt32();
          break;
        }
        case 200: {
          Engagements1V1Count = input.ReadUInt32();
          break;
        }
        case 208: {
          Engagements1V1Wins = input.ReadUInt32();
          break;
        }
        case 216: {
          Engagements1V2Count = input.ReadUInt32();
          break;
        }
        case 224: {
          Engagements1V2Wins = input.ReadUInt32();
          break;
        }
        case 232: {
          UtilityCount = input.ReadUInt32();
          break;
        }
        case 240: {
          UtilitySuccess = input.ReadUInt32();
          break;
        }
        case 256: {
          FlashCount = input.ReadUInt32();
          break;
        }
        case 264: {
          FlashSuccess = input.ReadUInt32();
          break;
        }
        case 274:
        case 272: {
          mates_.AddEntriesFrom(input, _repeated_mates_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 24: {
          MmGameMode = input.ReadUInt32();
          break;
        }
        case 32: {
          Mapid = input.ReadUInt32();
          break;
        }
        case 40: {
          BStartingCt = input.ReadBool();
          break;
        }
        case 48: {
          MatchOutcome = input.ReadUInt32();
          break;
        }
        case 56: {
          RoundsWon = input.ReadUInt32();
          break;
        }
        case 64: {
          RoundsLost = input.ReadUInt32();
          break;
        }
        case 72: {
          StatScore = input.ReadUInt32();
          break;
        }
        case 96: {
          StatDeaths = input.ReadUInt32();
          break;
        }
        case 104: {
          StatMvps = input.ReadUInt32();
          break;
        }
        case 112: {
          EnemyKills = input.ReadUInt32();
          break;
        }
        case 120: {
          EnemyHeadshots = input.ReadUInt32();
          break;
        }
        case 128: {
          Enemy2Ks = input.ReadUInt32();
          break;
        }
        case 136: {
          Enemy3Ks = input.ReadUInt32();
          break;
        }
        case 144: {
          Enemy4Ks = input.ReadUInt32();
          break;
        }
        case 152: {
          TotalDamage = input.ReadUInt32();
          break;
        }
        case 184: {
          EngagementsEntryCount = input.ReadUInt32();
          break;
        }
        case 192: {
          EngagementsEntryWins = input.ReadUInt32();
          break;
        }
        case 200: {
          Engagements1V1Count = input.ReadUInt32();
          break;
        }
        case 208: {
          Engagements1V1Wins = input.ReadUInt32();
          break;
        }
        case 216: {
          Engagements1V2Count = input.ReadUInt32();
          break;
        }
        case 224: {
          Engagements1V2Wins = input.ReadUInt32();
          break;
        }
        case 232: {
          UtilityCount = input.ReadUInt32();
          break;
        }
        case 240: {
          UtilitySuccess = input.ReadUInt32();
          break;
        }
        case 256: {
          FlashCount = input.ReadUInt32();
          break;
        }
        case 264: {
          FlashSuccess = input.ReadUInt32();
          break;
        }
        case 274:
        case 272: {
          mates_.AddEntriesFrom(ref input, _repeated_mates_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class DeepPlayerMatchEvent : pb::IMessage<DeepPlayerMatchEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<DeepPlayerMatchEvent> _parser = new pb::MessageParser<DeepPlayerMatchEvent>(() => new DeepPlayerMatchEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<DeepPlayerMatchEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DeepPlayerMatchEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DeepPlayerMatchEvent(DeepPlayerMatchEvent other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    matchId_ = other.matchId_;
    eventId_ = other.eventId_;
    eventType_ = other.eventType_;
    bPlayingCt_ = other.bPlayingCt_;
    userPosX_ = other.userPosX_;
    userPosY_ = other.userPosY_;
    userPosZ_ = other.userPosZ_;
    userDefidx_ = other.userDefidx_;
    otherPosX_ = other.otherPosX_;
    otherPosY_ = other.otherPosY_;
    otherPosZ_ = other.otherPosZ_;
    otherDefidx_ = other.otherDefidx_;
    eventData_ = other.eventData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DeepPlayerMatchEvent Clone() {
    return new DeepPlayerMatchEvent(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 2;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 2) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "event_id" field.</summary>
  public const int EventIdFieldNumber = 3;
  private readonly static uint EventIdDefaultValue = 0;

  private uint eventId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EventId {
    get { if ((_hasBits0 & 4) != 0) { return eventId_; } else { return EventIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      eventId_ = value;
    }
  }
  /// <summary>Gets whether the "event_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "event_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "event_type" field.</summary>
  public const int EventTypeFieldNumber = 4;
  private readonly static uint EventTypeDefaultValue = 0;

  private uint eventType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EventType {
    get { if ((_hasBits0 & 8) != 0) { return eventType_; } else { return EventTypeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      eventType_ = value;
    }
  }
  /// <summary>Gets whether the "event_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventType {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "event_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventType() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "b_playing_ct" field.</summary>
  public const int BPlayingCtFieldNumber = 5;
  private readonly static bool BPlayingCtDefaultValue = false;

  private bool bPlayingCt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BPlayingCt {
    get { if ((_hasBits0 & 16) != 0) { return bPlayingCt_; } else { return BPlayingCtDefaultValue; } }
    set {
      _hasBits0 |= 16;
      bPlayingCt_ = value;
    }
  }
  /// <summary>Gets whether the "b_playing_ct" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBPlayingCt {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "b_playing_ct" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBPlayingCt() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "user_pos_x" field.</summary>
  public const int UserPosXFieldNumber = 6;
  private readonly static int UserPosXDefaultValue = 0;

  private int userPosX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int UserPosX {
    get { if ((_hasBits0 & 32) != 0) { return userPosX_; } else { return UserPosXDefaultValue; } }
    set {
      _hasBits0 |= 32;
      userPosX_ = value;
    }
  }
  /// <summary>Gets whether the "user_pos_x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserPosX {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "user_pos_x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserPosX() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "user_pos_y" field.</summary>
  public const int UserPosYFieldNumber = 7;
  private readonly static int UserPosYDefaultValue = 0;

  private int userPosY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int UserPosY {
    get { if ((_hasBits0 & 64) != 0) { return userPosY_; } else { return UserPosYDefaultValue; } }
    set {
      _hasBits0 |= 64;
      userPosY_ = value;
    }
  }
  /// <summary>Gets whether the "user_pos_y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserPosY {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "user_pos_y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserPosY() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "user_pos_z" field.</summary>
  public const int UserPosZFieldNumber = 12;
  private readonly static int UserPosZDefaultValue = 0;

  private int userPosZ_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int UserPosZ {
    get { if ((_hasBits0 & 2048) != 0) { return userPosZ_; } else { return UserPosZDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      userPosZ_ = value;
    }
  }
  /// <summary>Gets whether the "user_pos_z" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserPosZ {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "user_pos_z" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserPosZ() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "user_defidx" field.</summary>
  public const int UserDefidxFieldNumber = 8;
  private readonly static uint UserDefidxDefaultValue = 0;

  private uint userDefidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UserDefidx {
    get { if ((_hasBits0 & 128) != 0) { return userDefidx_; } else { return UserDefidxDefaultValue; } }
    set {
      _hasBits0 |= 128;
      userDefidx_ = value;
    }
  }
  /// <summary>Gets whether the "user_defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserDefidx {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "user_defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserDefidx() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "other_pos_x" field.</summary>
  public const int OtherPosXFieldNumber = 9;
  private readonly static int OtherPosXDefaultValue = 0;

  private int otherPosX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int OtherPosX {
    get { if ((_hasBits0 & 256) != 0) { return otherPosX_; } else { return OtherPosXDefaultValue; } }
    set {
      _hasBits0 |= 256;
      otherPosX_ = value;
    }
  }
  /// <summary>Gets whether the "other_pos_x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOtherPosX {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "other_pos_x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOtherPosX() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "other_pos_y" field.</summary>
  public const int OtherPosYFieldNumber = 10;
  private readonly static int OtherPosYDefaultValue = 0;

  private int otherPosY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int OtherPosY {
    get { if ((_hasBits0 & 512) != 0) { return otherPosY_; } else { return OtherPosYDefaultValue; } }
    set {
      _hasBits0 |= 512;
      otherPosY_ = value;
    }
  }
  /// <summary>Gets whether the "other_pos_y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOtherPosY {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "other_pos_y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOtherPosY() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "other_pos_z" field.</summary>
  public const int OtherPosZFieldNumber = 13;
  private readonly static int OtherPosZDefaultValue = 0;

  private int otherPosZ_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int OtherPosZ {
    get { if ((_hasBits0 & 4096) != 0) { return otherPosZ_; } else { return OtherPosZDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      otherPosZ_ = value;
    }
  }
  /// <summary>Gets whether the "other_pos_z" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOtherPosZ {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "other_pos_z" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOtherPosZ() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "other_defidx" field.</summary>
  public const int OtherDefidxFieldNumber = 11;
  private readonly static uint OtherDefidxDefaultValue = 0;

  private uint otherDefidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint OtherDefidx {
    get { if ((_hasBits0 & 1024) != 0) { return otherDefidx_; } else { return OtherDefidxDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      otherDefidx_ = value;
    }
  }
  /// <summary>Gets whether the "other_defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOtherDefidx {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "other_defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOtherDefidx() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "event_data" field.</summary>
  public const int EventDataFieldNumber = 14;
  private readonly static int EventDataDefaultValue = 0;

  private int eventData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EventData {
    get { if ((_hasBits0 & 8192) != 0) { return eventData_; } else { return EventDataDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      eventData_ = value;
    }
  }
  /// <summary>Gets whether the "event_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventData {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "event_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventData() {
    _hasBits0 &= ~8192;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as DeepPlayerMatchEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(DeepPlayerMatchEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    if (MatchId != other.MatchId) return false;
    if (EventId != other.EventId) return false;
    if (EventType != other.EventType) return false;
    if (BPlayingCt != other.BPlayingCt) return false;
    if (UserPosX != other.UserPosX) return false;
    if (UserPosY != other.UserPosY) return false;
    if (UserPosZ != other.UserPosZ) return false;
    if (UserDefidx != other.UserDefidx) return false;
    if (OtherPosX != other.OtherPosX) return false;
    if (OtherPosY != other.OtherPosY) return false;
    if (OtherPosZ != other.OtherPosZ) return false;
    if (OtherDefidx != other.OtherDefidx) return false;
    if (EventData != other.EventData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (HasEventId) hash ^= EventId.GetHashCode();
    if (HasEventType) hash ^= EventType.GetHashCode();
    if (HasBPlayingCt) hash ^= BPlayingCt.GetHashCode();
    if (HasUserPosX) hash ^= UserPosX.GetHashCode();
    if (HasUserPosY) hash ^= UserPosY.GetHashCode();
    if (HasUserPosZ) hash ^= UserPosZ.GetHashCode();
    if (HasUserDefidx) hash ^= UserDefidx.GetHashCode();
    if (HasOtherPosX) hash ^= OtherPosX.GetHashCode();
    if (HasOtherPosY) hash ^= OtherPosY.GetHashCode();
    if (HasOtherPosZ) hash ^= OtherPosZ.GetHashCode();
    if (HasOtherDefidx) hash ^= OtherDefidx.GetHashCode();
    if (HasEventData) hash ^= EventData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasMatchId) {
      output.WriteRawTag(16);
      output.WriteUInt64(MatchId);
    }
    if (HasEventId) {
      output.WriteRawTag(24);
      output.WriteUInt32(EventId);
    }
    if (HasEventType) {
      output.WriteRawTag(32);
      output.WriteUInt32(EventType);
    }
    if (HasBPlayingCt) {
      output.WriteRawTag(40);
      output.WriteBool(BPlayingCt);
    }
    if (HasUserPosX) {
      output.WriteRawTag(48);
      output.WriteInt32(UserPosX);
    }
    if (HasUserPosY) {
      output.WriteRawTag(56);
      output.WriteInt32(UserPosY);
    }
    if (HasUserDefidx) {
      output.WriteRawTag(64);
      output.WriteUInt32(UserDefidx);
    }
    if (HasOtherPosX) {
      output.WriteRawTag(72);
      output.WriteInt32(OtherPosX);
    }
    if (HasOtherPosY) {
      output.WriteRawTag(80);
      output.WriteInt32(OtherPosY);
    }
    if (HasOtherDefidx) {
      output.WriteRawTag(88);
      output.WriteUInt32(OtherDefidx);
    }
    if (HasUserPosZ) {
      output.WriteRawTag(96);
      output.WriteInt32(UserPosZ);
    }
    if (HasOtherPosZ) {
      output.WriteRawTag(104);
      output.WriteInt32(OtherPosZ);
    }
    if (HasEventData) {
      output.WriteRawTag(112);
      output.WriteInt32(EventData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasMatchId) {
      output.WriteRawTag(16);
      output.WriteUInt64(MatchId);
    }
    if (HasEventId) {
      output.WriteRawTag(24);
      output.WriteUInt32(EventId);
    }
    if (HasEventType) {
      output.WriteRawTag(32);
      output.WriteUInt32(EventType);
    }
    if (HasBPlayingCt) {
      output.WriteRawTag(40);
      output.WriteBool(BPlayingCt);
    }
    if (HasUserPosX) {
      output.WriteRawTag(48);
      output.WriteInt32(UserPosX);
    }
    if (HasUserPosY) {
      output.WriteRawTag(56);
      output.WriteInt32(UserPosY);
    }
    if (HasUserDefidx) {
      output.WriteRawTag(64);
      output.WriteUInt32(UserDefidx);
    }
    if (HasOtherPosX) {
      output.WriteRawTag(72);
      output.WriteInt32(OtherPosX);
    }
    if (HasOtherPosY) {
      output.WriteRawTag(80);
      output.WriteInt32(OtherPosY);
    }
    if (HasOtherDefidx) {
      output.WriteRawTag(88);
      output.WriteUInt32(OtherDefidx);
    }
    if (HasUserPosZ) {
      output.WriteRawTag(96);
      output.WriteInt32(UserPosZ);
    }
    if (HasOtherPosZ) {
      output.WriteRawTag(104);
      output.WriteInt32(OtherPosZ);
    }
    if (HasEventData) {
      output.WriteRawTag(112);
      output.WriteInt32(EventData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (HasEventId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventId);
    }
    if (HasEventType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventType);
    }
    if (HasBPlayingCt) {
      size += 1 + 1;
    }
    if (HasUserPosX) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserPosX);
    }
    if (HasUserPosY) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserPosY);
    }
    if (HasUserPosZ) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserPosZ);
    }
    if (HasUserDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserDefidx);
    }
    if (HasOtherPosX) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OtherPosX);
    }
    if (HasOtherPosY) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OtherPosY);
    }
    if (HasOtherPosZ) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OtherPosZ);
    }
    if (HasOtherDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OtherDefidx);
    }
    if (HasEventData) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(DeepPlayerMatchEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    if (other.HasEventId) {
      EventId = other.EventId;
    }
    if (other.HasEventType) {
      EventType = other.EventType;
    }
    if (other.HasBPlayingCt) {
      BPlayingCt = other.BPlayingCt;
    }
    if (other.HasUserPosX) {
      UserPosX = other.UserPosX;
    }
    if (other.HasUserPosY) {
      UserPosY = other.UserPosY;
    }
    if (other.HasUserPosZ) {
      UserPosZ = other.UserPosZ;
    }
    if (other.HasUserDefidx) {
      UserDefidx = other.UserDefidx;
    }
    if (other.HasOtherPosX) {
      OtherPosX = other.OtherPosX;
    }
    if (other.HasOtherPosY) {
      OtherPosY = other.OtherPosY;
    }
    if (other.HasOtherPosZ) {
      OtherPosZ = other.OtherPosZ;
    }
    if (other.HasOtherDefidx) {
      OtherDefidx = other.OtherDefidx;
    }
    if (other.HasEventData) {
      EventData = other.EventData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 24: {
          EventId = input.ReadUInt32();
          break;
        }
        case 32: {
          EventType = input.ReadUInt32();
          break;
        }
        case 40: {
          BPlayingCt = input.ReadBool();
          break;
        }
        case 48: {
          UserPosX = input.ReadInt32();
          break;
        }
        case 56: {
          UserPosY = input.ReadInt32();
          break;
        }
        case 64: {
          UserDefidx = input.ReadUInt32();
          break;
        }
        case 72: {
          OtherPosX = input.ReadInt32();
          break;
        }
        case 80: {
          OtherPosY = input.ReadInt32();
          break;
        }
        case 88: {
          OtherDefidx = input.ReadUInt32();
          break;
        }
        case 96: {
          UserPosZ = input.ReadInt32();
          break;
        }
        case 104: {
          OtherPosZ = input.ReadInt32();
          break;
        }
        case 112: {
          EventData = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 24: {
          EventId = input.ReadUInt32();
          break;
        }
        case 32: {
          EventType = input.ReadUInt32();
          break;
        }
        case 40: {
          BPlayingCt = input.ReadBool();
          break;
        }
        case 48: {
          UserPosX = input.ReadInt32();
          break;
        }
        case 56: {
          UserPosY = input.ReadInt32();
          break;
        }
        case 64: {
          UserDefidx = input.ReadUInt32();
          break;
        }
        case 72: {
          OtherPosX = input.ReadInt32();
          break;
        }
        case 80: {
          OtherPosY = input.ReadInt32();
          break;
        }
        case 88: {
          OtherDefidx = input.ReadUInt32();
          break;
        }
        case 96: {
          UserPosZ = input.ReadInt32();
          break;
        }
        case 104: {
          OtherPosZ = input.ReadInt32();
          break;
        }
        case 112: {
          EventData = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGC_ServerQuestUpdateData : pb::IMessage<CMsgGC_ServerQuestUpdateData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGC_ServerQuestUpdateData> _parser = new pb::MessageParser<CMsgGC_ServerQuestUpdateData>(() => new CMsgGC_ServerQuestUpdateData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGC_ServerQuestUpdateData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_ServerQuestUpdateData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_ServerQuestUpdateData(CMsgGC_ServerQuestUpdateData other) : this() {
    _hasBits0 = other._hasBits0;
    playerQuestData_ = other.playerQuestData_.Clone();
    binaryData_ = other.binaryData_;
    mmGameMode_ = other.mmGameMode_;
    missionlbsdata_ = other.missionlbsdata_ != null ? other.missionlbsdata_.Clone() : null;
    flags_ = other.flags_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_ServerQuestUpdateData Clone() {
    return new CMsgGC_ServerQuestUpdateData(this);
  }

  /// <summary>Field number for the "player_quest_data" field.</summary>
  public const int PlayerQuestDataFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PlayerQuestData> _repeated_playerQuestData_codec
      = pb::FieldCodec.ForMessage(10, global::PlayerQuestData.Parser);
  private readonly pbc::RepeatedField<global::PlayerQuestData> playerQuestData_ = new pbc::RepeatedField<global::PlayerQuestData>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PlayerQuestData> PlayerQuestData {
    get { return playerQuestData_; }
  }

  /// <summary>Field number for the "binary_data" field.</summary>
  public const int BinaryDataFieldNumber = 2;
  private readonly static pb::ByteString BinaryDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString binaryData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString BinaryData {
    get { return binaryData_ ?? BinaryDataDefaultValue; }
    set {
      binaryData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "binary_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBinaryData {
    get { return binaryData_ != null; }
  }
  /// <summary>Clears the value of the "binary_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBinaryData() {
    binaryData_ = null;
  }

  /// <summary>Field number for the "mm_game_mode" field.</summary>
  public const int MmGameModeFieldNumber = 3;
  private readonly static uint MmGameModeDefaultValue = 0;

  private uint mmGameMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MmGameMode {
    get { if ((_hasBits0 & 1) != 0) { return mmGameMode_; } else { return MmGameModeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      mmGameMode_ = value;
    }
  }
  /// <summary>Gets whether the "mm_game_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMmGameMode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "mm_game_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMmGameMode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "missionlbsdata" field.</summary>
  public const int MissionlbsdataFieldNumber = 4;
  private global::ScoreLeaderboardData missionlbsdata_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ScoreLeaderboardData Missionlbsdata {
    get { return missionlbsdata_; }
    set {
      missionlbsdata_ = value;
    }
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 5;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 2) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGC_ServerQuestUpdateData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGC_ServerQuestUpdateData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!playerQuestData_.Equals(other.playerQuestData_)) return false;
    if (BinaryData != other.BinaryData) return false;
    if (MmGameMode != other.MmGameMode) return false;
    if (!object.Equals(Missionlbsdata, other.Missionlbsdata)) return false;
    if (Flags != other.Flags) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= playerQuestData_.GetHashCode();
    if (HasBinaryData) hash ^= BinaryData.GetHashCode();
    if (HasMmGameMode) hash ^= MmGameMode.GetHashCode();
    if (missionlbsdata_ != null) hash ^= Missionlbsdata.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    playerQuestData_.WriteTo(output, _repeated_playerQuestData_codec);
    if (HasBinaryData) {
      output.WriteRawTag(18);
      output.WriteBytes(BinaryData);
    }
    if (HasMmGameMode) {
      output.WriteRawTag(24);
      output.WriteUInt32(MmGameMode);
    }
    if (missionlbsdata_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Missionlbsdata);
    }
    if (HasFlags) {
      output.WriteRawTag(40);
      output.WriteUInt32(Flags);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    playerQuestData_.WriteTo(ref output, _repeated_playerQuestData_codec);
    if (HasBinaryData) {
      output.WriteRawTag(18);
      output.WriteBytes(BinaryData);
    }
    if (HasMmGameMode) {
      output.WriteRawTag(24);
      output.WriteUInt32(MmGameMode);
    }
    if (missionlbsdata_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Missionlbsdata);
    }
    if (HasFlags) {
      output.WriteRawTag(40);
      output.WriteUInt32(Flags);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += playerQuestData_.CalculateSize(_repeated_playerQuestData_codec);
    if (HasBinaryData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinaryData);
    }
    if (HasMmGameMode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MmGameMode);
    }
    if (missionlbsdata_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Missionlbsdata);
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGC_ServerQuestUpdateData other) {
    if (other == null) {
      return;
    }
    playerQuestData_.Add(other.playerQuestData_);
    if (other.HasBinaryData) {
      BinaryData = other.BinaryData;
    }
    if (other.HasMmGameMode) {
      MmGameMode = other.MmGameMode;
    }
    if (other.missionlbsdata_ != null) {
      if (missionlbsdata_ == null) {
        Missionlbsdata = new global::ScoreLeaderboardData();
      }
      Missionlbsdata.MergeFrom(other.Missionlbsdata);
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          playerQuestData_.AddEntriesFrom(input, _repeated_playerQuestData_codec);
          break;
        }
        case 18: {
          BinaryData = input.ReadBytes();
          break;
        }
        case 24: {
          MmGameMode = input.ReadUInt32();
          break;
        }
        case 34: {
          if (missionlbsdata_ == null) {
            Missionlbsdata = new global::ScoreLeaderboardData();
          }
          input.ReadMessage(Missionlbsdata);
          break;
        }
        case 40: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          playerQuestData_.AddEntriesFrom(ref input, _repeated_playerQuestData_codec);
          break;
        }
        case 18: {
          BinaryData = input.ReadBytes();
          break;
        }
        case 24: {
          MmGameMode = input.ReadUInt32();
          break;
        }
        case 34: {
          if (missionlbsdata_ == null) {
            Missionlbsdata = new global::ScoreLeaderboardData();
          }
          input.ReadMessage(Missionlbsdata);
          break;
        }
        case 40: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm>(() => new CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm other) : this() {
    _hasBits0 = other._hasBits0;
    token_ = other.token_;
    stamp_ = other.stamp_;
    exchange_ = other.exchange_;
    retry_ = other.retry_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm(this);
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 1;
  private readonly static uint TokenDefaultValue = 0;

  private uint token_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Token {
    get { if ((_hasBits0 & 1) != 0) { return token_; } else { return TokenDefaultValue; } }
    set {
      _hasBits0 |= 1;
      token_ = value;
    }
  }
  /// <summary>Gets whether the "token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToken {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToken() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "stamp" field.</summary>
  public const int StampFieldNumber = 2;
  private readonly static uint StampDefaultValue = 0;

  private uint stamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Stamp {
    get { if ((_hasBits0 & 2) != 0) { return stamp_; } else { return StampDefaultValue; } }
    set {
      _hasBits0 |= 2;
      stamp_ = value;
    }
  }
  /// <summary>Gets whether the "stamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStamp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "stamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStamp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "exchange" field.</summary>
  public const int ExchangeFieldNumber = 3;
  private readonly static ulong ExchangeDefaultValue = 0UL;

  private ulong exchange_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Exchange {
    get { if ((_hasBits0 & 4) != 0) { return exchange_; } else { return ExchangeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      exchange_ = value;
    }
  }
  /// <summary>Gets whether the "exchange" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExchange {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "exchange" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExchange() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "retry" field.</summary>
  public const int RetryFieldNumber = 4;
  private readonly static uint RetryDefaultValue = 0;

  private uint retry_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Retry {
    get { if ((_hasBits0 & 8) != 0) { return retry_; } else { return RetryDefaultValue; } }
    set {
      _hasBits0 |= 8;
      retry_ = value;
    }
  }
  /// <summary>Gets whether the "retry" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRetry {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "retry" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRetry() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Token != other.Token) return false;
    if (Stamp != other.Stamp) return false;
    if (Exchange != other.Exchange) return false;
    if (Retry != other.Retry) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasToken) hash ^= Token.GetHashCode();
    if (HasStamp) hash ^= Stamp.GetHashCode();
    if (HasExchange) hash ^= Exchange.GetHashCode();
    if (HasRetry) hash ^= Retry.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasToken) {
      output.WriteRawTag(8);
      output.WriteUInt32(Token);
    }
    if (HasStamp) {
      output.WriteRawTag(16);
      output.WriteUInt32(Stamp);
    }
    if (HasExchange) {
      output.WriteRawTag(24);
      output.WriteUInt64(Exchange);
    }
    if (HasRetry) {
      output.WriteRawTag(32);
      output.WriteUInt32(Retry);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasToken) {
      output.WriteRawTag(8);
      output.WriteUInt32(Token);
    }
    if (HasStamp) {
      output.WriteRawTag(16);
      output.WriteUInt32(Stamp);
    }
    if (HasExchange) {
      output.WriteRawTag(24);
      output.WriteUInt64(Exchange);
    }
    if (HasRetry) {
      output.WriteRawTag(32);
      output.WriteUInt32(Retry);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasToken) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Token);
    }
    if (HasStamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stamp);
    }
    if (HasExchange) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Exchange);
    }
    if (HasRetry) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Retry);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm other) {
    if (other == null) {
      return;
    }
    if (other.HasToken) {
      Token = other.Token;
    }
    if (other.HasStamp) {
      Stamp = other.Stamp;
    }
    if (other.HasExchange) {
      Exchange = other.Exchange;
    }
    if (other.HasRetry) {
      Retry = other.Retry;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Token = input.ReadUInt32();
          break;
        }
        case 16: {
          Stamp = input.ReadUInt32();
          break;
        }
        case 24: {
          Exchange = input.ReadUInt64();
          break;
        }
        case 32: {
          Retry = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Token = input.ReadUInt32();
          break;
        }
        case 16: {
          Stamp = input.ReadUInt32();
          break;
        }
        case 24: {
          Exchange = input.ReadUInt64();
          break;
        }
        case 32: {
          Retry = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GC2ServerReservationUpdate : pb::IMessage<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GC2ServerReservationUpdate> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GC2ServerReservationUpdate>(() => new CMsgGCCStrike15_v2_GC2ServerReservationUpdate());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GC2ServerReservationUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ServerReservationUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ServerReservationUpdate(CMsgGCCStrike15_v2_GC2ServerReservationUpdate other) : this() {
    _hasBits0 = other._hasBits0;
    viewersExternalTotal_ = other.viewersExternalTotal_;
    viewersExternalSteam_ = other.viewersExternalSteam_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ServerReservationUpdate Clone() {
    return new CMsgGCCStrike15_v2_GC2ServerReservationUpdate(this);
  }

  /// <summary>Field number for the "viewers_external_total" field.</summary>
  public const int ViewersExternalTotalFieldNumber = 1;
  private readonly static uint ViewersExternalTotalDefaultValue = 0;

  private uint viewersExternalTotal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ViewersExternalTotal {
    get { if ((_hasBits0 & 1) != 0) { return viewersExternalTotal_; } else { return ViewersExternalTotalDefaultValue; } }
    set {
      _hasBits0 |= 1;
      viewersExternalTotal_ = value;
    }
  }
  /// <summary>Gets whether the "viewers_external_total" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasViewersExternalTotal {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "viewers_external_total" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearViewersExternalTotal() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "viewers_external_steam" field.</summary>
  public const int ViewersExternalSteamFieldNumber = 2;
  private readonly static uint ViewersExternalSteamDefaultValue = 0;

  private uint viewersExternalSteam_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ViewersExternalSteam {
    get { if ((_hasBits0 & 2) != 0) { return viewersExternalSteam_; } else { return ViewersExternalSteamDefaultValue; } }
    set {
      _hasBits0 |= 2;
      viewersExternalSteam_ = value;
    }
  }
  /// <summary>Gets whether the "viewers_external_steam" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasViewersExternalSteam {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "viewers_external_steam" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearViewersExternalSteam() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GC2ServerReservationUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GC2ServerReservationUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ViewersExternalTotal != other.ViewersExternalTotal) return false;
    if (ViewersExternalSteam != other.ViewersExternalSteam) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasViewersExternalTotal) hash ^= ViewersExternalTotal.GetHashCode();
    if (HasViewersExternalSteam) hash ^= ViewersExternalSteam.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasViewersExternalTotal) {
      output.WriteRawTag(8);
      output.WriteUInt32(ViewersExternalTotal);
    }
    if (HasViewersExternalSteam) {
      output.WriteRawTag(16);
      output.WriteUInt32(ViewersExternalSteam);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasViewersExternalTotal) {
      output.WriteRawTag(8);
      output.WriteUInt32(ViewersExternalTotal);
    }
    if (HasViewersExternalSteam) {
      output.WriteRawTag(16);
      output.WriteUInt32(ViewersExternalSteam);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasViewersExternalTotal) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ViewersExternalTotal);
    }
    if (HasViewersExternalSteam) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ViewersExternalSteam);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GC2ServerReservationUpdate other) {
    if (other == null) {
      return;
    }
    if (other.HasViewersExternalTotal) {
      ViewersExternalTotal = other.ViewersExternalTotal;
    }
    if (other.HasViewersExternalSteam) {
      ViewersExternalSteam = other.ViewersExternalSteam;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ViewersExternalTotal = input.ReadUInt32();
          break;
        }
        case 16: {
          ViewersExternalSteam = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ViewersExternalTotal = input.ReadUInt32();
          break;
        }
        case 16: {
          ViewersExternalSteam = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingStart : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingStart>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingStart> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingStart>(() => new CMsgGCCStrike15_v2_MatchmakingStart());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingStart> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingStart() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingStart(CMsgGCCStrike15_v2_MatchmakingStart other) : this() {
    _hasBits0 = other._hasBits0;
    accountIds_ = other.accountIds_.Clone();
    gameType_ = other.gameType_;
    ticketData_ = other.ticketData_;
    clientVersion_ = other.clientVersion_;
    tournamentMatch_ = other.tournamentMatch_ != null ? other.tournamentMatch_.Clone() : null;
    primeOnly_ = other.primeOnly_;
    tvControl_ = other.tvControl_;
    lobbyId_ = other.lobbyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingStart Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingStart(this);
  }

  /// <summary>Field number for the "account_ids" field.</summary>
  public const int AccountIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_accountIds_codec
      = pb::FieldCodec.ForUInt32(8);
  private readonly pbc::RepeatedField<uint> accountIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AccountIds {
    get { return accountIds_; }
  }

  /// <summary>Field number for the "game_type" field.</summary>
  public const int GameTypeFieldNumber = 2;
  private readonly static uint GameTypeDefaultValue = 0;

  private uint gameType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameType {
    get { if ((_hasBits0 & 1) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gameType_ = value;
    }
  }
  /// <summary>Gets whether the "game_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "game_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ticket_data" field.</summary>
  public const int TicketDataFieldNumber = 3;
  private readonly static string TicketDataDefaultValue = "";

  private string ticketData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TicketData {
    get { return ticketData_ ?? TicketDataDefaultValue; }
    set {
      ticketData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ticket_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicketData {
    get { return ticketData_ != null; }
  }
  /// <summary>Clears the value of the "ticket_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicketData() {
    ticketData_ = null;
  }

  /// <summary>Field number for the "client_version" field.</summary>
  public const int ClientVersionFieldNumber = 4;
  private readonly static uint ClientVersionDefaultValue = 0;

  private uint clientVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientVersion {
    get { if ((_hasBits0 & 2) != 0) { return clientVersion_; } else { return ClientVersionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clientVersion_ = value;
    }
  }
  /// <summary>Gets whether the "client_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientVersion {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "client_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientVersion() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "tournament_match" field.</summary>
  public const int TournamentMatchFieldNumber = 5;
  private global::TournamentMatchSetup tournamentMatch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::TournamentMatchSetup TournamentMatch {
    get { return tournamentMatch_; }
    set {
      tournamentMatch_ = value;
    }
  }

  /// <summary>Field number for the "prime_only" field.</summary>
  public const int PrimeOnlyFieldNumber = 6;
  private readonly static bool PrimeOnlyDefaultValue = false;

  private bool primeOnly_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool PrimeOnly {
    get { if ((_hasBits0 & 4) != 0) { return primeOnly_; } else { return PrimeOnlyDefaultValue; } }
    set {
      _hasBits0 |= 4;
      primeOnly_ = value;
    }
  }
  /// <summary>Gets whether the "prime_only" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrimeOnly {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "prime_only" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrimeOnly() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "tv_control" field.</summary>
  public const int TvControlFieldNumber = 7;
  private readonly static uint TvControlDefaultValue = 0;

  private uint tvControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvControl {
    get { if ((_hasBits0 & 8) != 0) { return tvControl_; } else { return TvControlDefaultValue; } }
    set {
      _hasBits0 |= 8;
      tvControl_ = value;
    }
  }
  /// <summary>Gets whether the "tv_control" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvControl {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "tv_control" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvControl() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "lobby_id" field.</summary>
  public const int LobbyIdFieldNumber = 8;
  private readonly static ulong LobbyIdDefaultValue = 0UL;

  private ulong lobbyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LobbyId {
    get { if ((_hasBits0 & 16) != 0) { return lobbyId_; } else { return LobbyIdDefaultValue; } }
    set {
      _hasBits0 |= 16;
      lobbyId_ = value;
    }
  }
  /// <summary>Gets whether the "lobby_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLobbyId {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "lobby_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLobbyId() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingStart);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingStart other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!accountIds_.Equals(other.accountIds_)) return false;
    if (GameType != other.GameType) return false;
    if (TicketData != other.TicketData) return false;
    if (ClientVersion != other.ClientVersion) return false;
    if (!object.Equals(TournamentMatch, other.TournamentMatch)) return false;
    if (PrimeOnly != other.PrimeOnly) return false;
    if (TvControl != other.TvControl) return false;
    if (LobbyId != other.LobbyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= accountIds_.GetHashCode();
    if (HasGameType) hash ^= GameType.GetHashCode();
    if (HasTicketData) hash ^= TicketData.GetHashCode();
    if (HasClientVersion) hash ^= ClientVersion.GetHashCode();
    if (tournamentMatch_ != null) hash ^= TournamentMatch.GetHashCode();
    if (HasPrimeOnly) hash ^= PrimeOnly.GetHashCode();
    if (HasTvControl) hash ^= TvControl.GetHashCode();
    if (HasLobbyId) hash ^= LobbyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    accountIds_.WriteTo(output, _repeated_accountIds_codec);
    if (HasGameType) {
      output.WriteRawTag(16);
      output.WriteUInt32(GameType);
    }
    if (HasTicketData) {
      output.WriteRawTag(26);
      output.WriteString(TicketData);
    }
    if (HasClientVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ClientVersion);
    }
    if (tournamentMatch_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(TournamentMatch);
    }
    if (HasPrimeOnly) {
      output.WriteRawTag(48);
      output.WriteBool(PrimeOnly);
    }
    if (HasTvControl) {
      output.WriteRawTag(56);
      output.WriteUInt32(TvControl);
    }
    if (HasLobbyId) {
      output.WriteRawTag(64);
      output.WriteUInt64(LobbyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    accountIds_.WriteTo(ref output, _repeated_accountIds_codec);
    if (HasGameType) {
      output.WriteRawTag(16);
      output.WriteUInt32(GameType);
    }
    if (HasTicketData) {
      output.WriteRawTag(26);
      output.WriteString(TicketData);
    }
    if (HasClientVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ClientVersion);
    }
    if (tournamentMatch_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(TournamentMatch);
    }
    if (HasPrimeOnly) {
      output.WriteRawTag(48);
      output.WriteBool(PrimeOnly);
    }
    if (HasTvControl) {
      output.WriteRawTag(56);
      output.WriteUInt32(TvControl);
    }
    if (HasLobbyId) {
      output.WriteRawTag(64);
      output.WriteUInt64(LobbyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += accountIds_.CalculateSize(_repeated_accountIds_codec);
    if (HasGameType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
    }
    if (HasTicketData) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketData);
    }
    if (HasClientVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientVersion);
    }
    if (tournamentMatch_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TournamentMatch);
    }
    if (HasPrimeOnly) {
      size += 1 + 1;
    }
    if (HasTvControl) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvControl);
    }
    if (HasLobbyId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LobbyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingStart other) {
    if (other == null) {
      return;
    }
    accountIds_.Add(other.accountIds_);
    if (other.HasGameType) {
      GameType = other.GameType;
    }
    if (other.HasTicketData) {
      TicketData = other.TicketData;
    }
    if (other.HasClientVersion) {
      ClientVersion = other.ClientVersion;
    }
    if (other.tournamentMatch_ != null) {
      if (tournamentMatch_ == null) {
        TournamentMatch = new global::TournamentMatchSetup();
      }
      TournamentMatch.MergeFrom(other.TournamentMatch);
    }
    if (other.HasPrimeOnly) {
      PrimeOnly = other.PrimeOnly;
    }
    if (other.HasTvControl) {
      TvControl = other.TvControl;
    }
    if (other.HasLobbyId) {
      LobbyId = other.LobbyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          accountIds_.AddEntriesFrom(input, _repeated_accountIds_codec);
          break;
        }
        case 16: {
          GameType = input.ReadUInt32();
          break;
        }
        case 26: {
          TicketData = input.ReadString();
          break;
        }
        case 32: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 42: {
          if (tournamentMatch_ == null) {
            TournamentMatch = new global::TournamentMatchSetup();
          }
          input.ReadMessage(TournamentMatch);
          break;
        }
        case 48: {
          PrimeOnly = input.ReadBool();
          break;
        }
        case 56: {
          TvControl = input.ReadUInt32();
          break;
        }
        case 64: {
          LobbyId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          accountIds_.AddEntriesFrom(ref input, _repeated_accountIds_codec);
          break;
        }
        case 16: {
          GameType = input.ReadUInt32();
          break;
        }
        case 26: {
          TicketData = input.ReadString();
          break;
        }
        case 32: {
          ClientVersion = input.ReadUInt32();
          break;
        }
        case 42: {
          if (tournamentMatch_ == null) {
            TournamentMatch = new global::TournamentMatchSetup();
          }
          input.ReadMessage(TournamentMatch);
          break;
        }
        case 48: {
          PrimeOnly = input.ReadBool();
          break;
        }
        case 56: {
          TvControl = input.ReadUInt32();
          break;
        }
        case 64: {
          LobbyId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingStop : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingStop>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingStop> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingStop>(() => new CMsgGCCStrike15_v2_MatchmakingStop());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingStop> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingStop() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingStop(CMsgGCCStrike15_v2_MatchmakingStop other) : this() {
    _hasBits0 = other._hasBits0;
    abandon_ = other.abandon_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingStop Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingStop(this);
  }

  /// <summary>Field number for the "abandon" field.</summary>
  public const int AbandonFieldNumber = 1;
  private readonly static int AbandonDefaultValue = 0;

  private int abandon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Abandon {
    get { if ((_hasBits0 & 1) != 0) { return abandon_; } else { return AbandonDefaultValue; } }
    set {
      _hasBits0 |= 1;
      abandon_ = value;
    }
  }
  /// <summary>Gets whether the "abandon" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAbandon {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "abandon" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAbandon() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingStop);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingStop other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Abandon != other.Abandon) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAbandon) hash ^= Abandon.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAbandon) {
      output.WriteRawTag(8);
      output.WriteInt32(Abandon);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAbandon) {
      output.WriteRawTag(8);
      output.WriteInt32(Abandon);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAbandon) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Abandon);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingStop other) {
    if (other == null) {
      return;
    }
    if (other.HasAbandon) {
      Abandon = other.Abandon;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Abandon = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Abandon = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>(() => new CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note other) : this() {
    _hasBits0 = other._hasBits0;
    type_ = other.type_;
    regionId_ = other.regionId_;
    regionR_ = other.regionR_;
    distance_ = other.distance_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private readonly static int TypeDefaultValue = 0;

  private int type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Type {
    get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "region_id" field.</summary>
  public const int RegionIdFieldNumber = 2;
  private readonly static int RegionIdDefaultValue = 0;

  private int regionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int RegionId {
    get { if ((_hasBits0 & 2) != 0) { return regionId_; } else { return RegionIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      regionId_ = value;
    }
  }
  /// <summary>Gets whether the "region_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRegionId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "region_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRegionId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "region_r" field.</summary>
  public const int RegionRFieldNumber = 3;
  private readonly static float RegionRDefaultValue = 0F;

  private float regionR_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float RegionR {
    get { if ((_hasBits0 & 4) != 0) { return regionR_; } else { return RegionRDefaultValue; } }
    set {
      _hasBits0 |= 4;
      regionR_ = value;
    }
  }
  /// <summary>Gets whether the "region_r" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRegionR {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "region_r" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRegionR() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "distance" field.</summary>
  public const int DistanceFieldNumber = 4;
  private readonly static float DistanceDefaultValue = 0F;

  private float distance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Distance {
    get { if ((_hasBits0 & 8) != 0) { return distance_; } else { return DistanceDefaultValue; } }
    set {
      _hasBits0 |= 8;
      distance_ = value;
    }
  }
  /// <summary>Gets whether the "distance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDistance {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "distance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDistance() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (RegionId != other.RegionId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RegionR, other.RegionR)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasType) hash ^= Type.GetHashCode();
    if (HasRegionId) hash ^= RegionId.GetHashCode();
    if (HasRegionR) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RegionR);
    if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasType) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (HasRegionId) {
      output.WriteRawTag(16);
      output.WriteInt32(RegionId);
    }
    if (HasRegionR) {
      output.WriteRawTag(29);
      output.WriteFloat(RegionR);
    }
    if (HasDistance) {
      output.WriteRawTag(37);
      output.WriteFloat(Distance);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasType) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (HasRegionId) {
      output.WriteRawTag(16);
      output.WriteInt32(RegionId);
    }
    if (HasRegionR) {
      output.WriteRawTag(29);
      output.WriteFloat(RegionR);
    }
    if (HasDistance) {
      output.WriteRawTag(37);
      output.WriteFloat(Distance);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (HasRegionId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegionId);
    }
    if (HasRegionR) {
      size += 1 + 4;
    }
    if (HasDistance) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note other) {
    if (other == null) {
      return;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasRegionId) {
      RegionId = other.RegionId;
    }
    if (other.HasRegionR) {
      RegionR = other.RegionR;
    }
    if (other.HasDistance) {
      Distance = other.Distance;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 16: {
          RegionId = input.ReadInt32();
          break;
        }
        case 29: {
          RegionR = input.ReadFloat();
          break;
        }
        case 37: {
          Distance = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 16: {
          RegionId = input.ReadInt32();
          break;
        }
        case 29: {
          RegionR = input.ReadFloat();
          break;
        }
        case 37: {
          Distance = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingClient2ServerPing : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing>(() => new CMsgGCCStrike15_v2_MatchmakingClient2ServerPing());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingClient2ServerPing() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingClient2ServerPing(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing other) : this() {
    _hasBits0 = other._hasBits0;
    gameserverpings_ = other.gameserverpings_.Clone();
    offsetIndex_ = other.offsetIndex_;
    finalBatch_ = other.finalBatch_;
    dataCenterPings_ = other.dataCenterPings_.Clone();
    maxPing_ = other.maxPing_;
    testToken_ = other.testToken_;
    searchKey_ = other.searchKey_;
    notes_ = other.notes_.Clone();
    debugMessage_ = other.debugMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingClient2ServerPing Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingClient2ServerPing(this);
  }

  /// <summary>Field number for the "gameserverpings" field.</summary>
  public const int GameserverpingsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GameServerPing> _repeated_gameserverpings_codec
      = pb::FieldCodec.ForMessage(10, global::GameServerPing.Parser);
  private readonly pbc::RepeatedField<global::GameServerPing> gameserverpings_ = new pbc::RepeatedField<global::GameServerPing>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::GameServerPing> Gameserverpings {
    get { return gameserverpings_; }
  }

  /// <summary>Field number for the "offset_index" field.</summary>
  public const int OffsetIndexFieldNumber = 2;
  private readonly static int OffsetIndexDefaultValue = 0;

  private int offsetIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int OffsetIndex {
    get { if ((_hasBits0 & 1) != 0) { return offsetIndex_; } else { return OffsetIndexDefaultValue; } }
    set {
      _hasBits0 |= 1;
      offsetIndex_ = value;
    }
  }
  /// <summary>Gets whether the "offset_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOffsetIndex {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "offset_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOffsetIndex() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "final_batch" field.</summary>
  public const int FinalBatchFieldNumber = 3;
  private readonly static int FinalBatchDefaultValue = 0;

  private int finalBatch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int FinalBatch {
    get { if ((_hasBits0 & 2) != 0) { return finalBatch_; } else { return FinalBatchDefaultValue; } }
    set {
      _hasBits0 |= 2;
      finalBatch_ = value;
    }
  }
  /// <summary>Gets whether the "final_batch" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFinalBatch {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "final_batch" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFinalBatch() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "data_center_pings" field.</summary>
  public const int DataCenterPingsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::DataCenterPing> _repeated_dataCenterPings_codec
      = pb::FieldCodec.ForMessage(34, global::DataCenterPing.Parser);
  private readonly pbc::RepeatedField<global::DataCenterPing> dataCenterPings_ = new pbc::RepeatedField<global::DataCenterPing>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::DataCenterPing> DataCenterPings {
    get { return dataCenterPings_; }
  }

  /// <summary>Field number for the "max_ping" field.</summary>
  public const int MaxPingFieldNumber = 5;
  private readonly static uint MaxPingDefaultValue = 0;

  private uint maxPing_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MaxPing {
    get { if ((_hasBits0 & 4) != 0) { return maxPing_; } else { return MaxPingDefaultValue; } }
    set {
      _hasBits0 |= 4;
      maxPing_ = value;
    }
  }
  /// <summary>Gets whether the "max_ping" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxPing {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "max_ping" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxPing() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "test_token" field.</summary>
  public const int TestTokenFieldNumber = 6;
  private readonly static uint TestTokenDefaultValue = 0;

  private uint testToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TestToken {
    get { if ((_hasBits0 & 8) != 0) { return testToken_; } else { return TestTokenDefaultValue; } }
    set {
      _hasBits0 |= 8;
      testToken_ = value;
    }
  }
  /// <summary>Gets whether the "test_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTestToken {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "test_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTestToken() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "search_key" field.</summary>
  public const int SearchKeyFieldNumber = 7;
  private readonly static pb::ByteString SearchKeyDefaultValue = pb::ByteString.Empty;

  private pb::ByteString searchKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString SearchKey {
    get { return searchKey_ ?? SearchKeyDefaultValue; }
    set {
      searchKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "search_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSearchKey {
    get { return searchKey_ != null; }
  }
  /// <summary>Clears the value of the "search_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSearchKey() {
    searchKey_ = null;
  }

  /// <summary>Field number for the "notes" field.</summary>
  public const int NotesFieldNumber = 8;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> _repeated_notes_codec
      = pb::FieldCodec.ForMessage(66, global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> notes_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> Notes {
    get { return notes_; }
  }

  /// <summary>Field number for the "debug_message" field.</summary>
  public const int DebugMessageFieldNumber = 9;
  private readonly static string DebugMessageDefaultValue = "";

  private string debugMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DebugMessage {
    get { return debugMessage_ ?? DebugMessageDefaultValue; }
    set {
      debugMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "debug_message" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDebugMessage {
    get { return debugMessage_ != null; }
  }
  /// <summary>Clears the value of the "debug_message" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDebugMessage() {
    debugMessage_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingClient2ServerPing);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!gameserverpings_.Equals(other.gameserverpings_)) return false;
    if (OffsetIndex != other.OffsetIndex) return false;
    if (FinalBatch != other.FinalBatch) return false;
    if(!dataCenterPings_.Equals(other.dataCenterPings_)) return false;
    if (MaxPing != other.MaxPing) return false;
    if (TestToken != other.TestToken) return false;
    if (SearchKey != other.SearchKey) return false;
    if(!notes_.Equals(other.notes_)) return false;
    if (DebugMessage != other.DebugMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= gameserverpings_.GetHashCode();
    if (HasOffsetIndex) hash ^= OffsetIndex.GetHashCode();
    if (HasFinalBatch) hash ^= FinalBatch.GetHashCode();
    hash ^= dataCenterPings_.GetHashCode();
    if (HasMaxPing) hash ^= MaxPing.GetHashCode();
    if (HasTestToken) hash ^= TestToken.GetHashCode();
    if (HasSearchKey) hash ^= SearchKey.GetHashCode();
    hash ^= notes_.GetHashCode();
    if (HasDebugMessage) hash ^= DebugMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    gameserverpings_.WriteTo(output, _repeated_gameserverpings_codec);
    if (HasOffsetIndex) {
      output.WriteRawTag(16);
      output.WriteInt32(OffsetIndex);
    }
    if (HasFinalBatch) {
      output.WriteRawTag(24);
      output.WriteInt32(FinalBatch);
    }
    dataCenterPings_.WriteTo(output, _repeated_dataCenterPings_codec);
    if (HasMaxPing) {
      output.WriteRawTag(40);
      output.WriteUInt32(MaxPing);
    }
    if (HasTestToken) {
      output.WriteRawTag(53);
      output.WriteFixed32(TestToken);
    }
    if (HasSearchKey) {
      output.WriteRawTag(58);
      output.WriteBytes(SearchKey);
    }
    notes_.WriteTo(output, _repeated_notes_codec);
    if (HasDebugMessage) {
      output.WriteRawTag(74);
      output.WriteString(DebugMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    gameserverpings_.WriteTo(ref output, _repeated_gameserverpings_codec);
    if (HasOffsetIndex) {
      output.WriteRawTag(16);
      output.WriteInt32(OffsetIndex);
    }
    if (HasFinalBatch) {
      output.WriteRawTag(24);
      output.WriteInt32(FinalBatch);
    }
    dataCenterPings_.WriteTo(ref output, _repeated_dataCenterPings_codec);
    if (HasMaxPing) {
      output.WriteRawTag(40);
      output.WriteUInt32(MaxPing);
    }
    if (HasTestToken) {
      output.WriteRawTag(53);
      output.WriteFixed32(TestToken);
    }
    if (HasSearchKey) {
      output.WriteRawTag(58);
      output.WriteBytes(SearchKey);
    }
    notes_.WriteTo(ref output, _repeated_notes_codec);
    if (HasDebugMessage) {
      output.WriteRawTag(74);
      output.WriteString(DebugMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += gameserverpings_.CalculateSize(_repeated_gameserverpings_codec);
    if (HasOffsetIndex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OffsetIndex);
    }
    if (HasFinalBatch) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinalBatch);
    }
    size += dataCenterPings_.CalculateSize(_repeated_dataCenterPings_codec);
    if (HasMaxPing) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPing);
    }
    if (HasTestToken) {
      size += 1 + 4;
    }
    if (HasSearchKey) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SearchKey);
    }
    size += notes_.CalculateSize(_repeated_notes_codec);
    if (HasDebugMessage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DebugMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingClient2ServerPing other) {
    if (other == null) {
      return;
    }
    gameserverpings_.Add(other.gameserverpings_);
    if (other.HasOffsetIndex) {
      OffsetIndex = other.OffsetIndex;
    }
    if (other.HasFinalBatch) {
      FinalBatch = other.FinalBatch;
    }
    dataCenterPings_.Add(other.dataCenterPings_);
    if (other.HasMaxPing) {
      MaxPing = other.MaxPing;
    }
    if (other.HasTestToken) {
      TestToken = other.TestToken;
    }
    if (other.HasSearchKey) {
      SearchKey = other.SearchKey;
    }
    notes_.Add(other.notes_);
    if (other.HasDebugMessage) {
      DebugMessage = other.DebugMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          gameserverpings_.AddEntriesFrom(input, _repeated_gameserverpings_codec);
          break;
        }
        case 16: {
          OffsetIndex = input.ReadInt32();
          break;
        }
        case 24: {
          FinalBatch = input.ReadInt32();
          break;
        }
        case 34: {
          dataCenterPings_.AddEntriesFrom(input, _repeated_dataCenterPings_codec);
          break;
        }
        case 40: {
          MaxPing = input.ReadUInt32();
          break;
        }
        case 53: {
          TestToken = input.ReadFixed32();
          break;
        }
        case 58: {
          SearchKey = input.ReadBytes();
          break;
        }
        case 66: {
          notes_.AddEntriesFrom(input, _repeated_notes_codec);
          break;
        }
        case 74: {
          DebugMessage = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          gameserverpings_.AddEntriesFrom(ref input, _repeated_gameserverpings_codec);
          break;
        }
        case 16: {
          OffsetIndex = input.ReadInt32();
          break;
        }
        case 24: {
          FinalBatch = input.ReadInt32();
          break;
        }
        case 34: {
          dataCenterPings_.AddEntriesFrom(ref input, _repeated_dataCenterPings_codec);
          break;
        }
        case 40: {
          MaxPing = input.ReadUInt32();
          break;
        }
        case 53: {
          TestToken = input.ReadFixed32();
          break;
        }
        case 58: {
          SearchKey = input.ReadBytes();
          break;
        }
        case 66: {
          notes_.AddEntriesFrom(ref input, _repeated_notes_codec);
          break;
        }
        case 74: {
          DebugMessage = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate>(() => new CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate other) : this() {
    _hasBits0 = other._hasBits0;
    matchmaking_ = other.matchmaking_;
    waitingAccountIdSessions_ = other.waitingAccountIdSessions_.Clone();
    error_ = other.error_;
    ongoingmatchAccountIdSessions_ = other.ongoingmatchAccountIdSessions_.Clone();
    globalStats_ = other.globalStats_ != null ? other.globalStats_.Clone() : null;
    failpingAccountIdSessions_ = other.failpingAccountIdSessions_.Clone();
    penaltyAccountIdSessions_ = other.penaltyAccountIdSessions_.Clone();
    failreadyAccountIdSessions_ = other.failreadyAccountIdSessions_.Clone();
    vacbannedAccountIdSessions_ = other.vacbannedAccountIdSessions_.Clone();
    serverIpaddressMask_ = other.serverIpaddressMask_ != null ? other.serverIpaddressMask_.Clone() : null;
    notes_ = other.notes_.Clone();
    penaltyAccountIdSessionsGreen_ = other.penaltyAccountIdSessionsGreen_.Clone();
    insufficientlevelSessions_ = other.insufficientlevelSessions_.Clone();
    vsncheckAccountIdSessions_ = other.vsncheckAccountIdSessions_.Clone();
    launcherMismatchSessions_ = other.launcherMismatchSessions_.Clone();
    insecureAccountIdSessions_ = other.insecureAccountIdSessions_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate(this);
  }

  /// <summary>Field number for the "matchmaking" field.</summary>
  public const int MatchmakingFieldNumber = 1;
  private readonly static int MatchmakingDefaultValue = 0;

  private int matchmaking_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Matchmaking {
    get { if ((_hasBits0 & 1) != 0) { return matchmaking_; } else { return MatchmakingDefaultValue; } }
    set {
      _hasBits0 |= 1;
      matchmaking_ = value;
    }
  }
  /// <summary>Gets whether the "matchmaking" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchmaking {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "matchmaking" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchmaking() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "waiting_account_id_sessions" field.</summary>
  public const int WaitingAccountIdSessionsFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_waitingAccountIdSessions_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> waitingAccountIdSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> WaitingAccountIdSessions {
    get { return waitingAccountIdSessions_; }
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 3;
  private readonly static string ErrorDefaultValue = "";

  private string error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Error {
    get { return error_ ?? ErrorDefaultValue; }
    set {
      error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "error" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasError {
    get { return error_ != null; }
  }
  /// <summary>Clears the value of the "error" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearError() {
    error_ = null;
  }

  /// <summary>Field number for the "ongoingmatch_account_id_sessions" field.</summary>
  public const int OngoingmatchAccountIdSessionsFieldNumber = 6;
  private static readonly pb::FieldCodec<uint> _repeated_ongoingmatchAccountIdSessions_codec
      = pb::FieldCodec.ForUInt32(48);
  private readonly pbc::RepeatedField<uint> ongoingmatchAccountIdSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> OngoingmatchAccountIdSessions {
    get { return ongoingmatchAccountIdSessions_; }
  }

  /// <summary>Field number for the "global_stats" field.</summary>
  public const int GlobalStatsFieldNumber = 7;
  private global::GlobalStatistics globalStats_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GlobalStatistics GlobalStats {
    get { return globalStats_; }
    set {
      globalStats_ = value;
    }
  }

  /// <summary>Field number for the "failping_account_id_sessions" field.</summary>
  public const int FailpingAccountIdSessionsFieldNumber = 8;
  private static readonly pb::FieldCodec<uint> _repeated_failpingAccountIdSessions_codec
      = pb::FieldCodec.ForUInt32(64);
  private readonly pbc::RepeatedField<uint> failpingAccountIdSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> FailpingAccountIdSessions {
    get { return failpingAccountIdSessions_; }
  }

  /// <summary>Field number for the "penalty_account_id_sessions" field.</summary>
  public const int PenaltyAccountIdSessionsFieldNumber = 9;
  private static readonly pb::FieldCodec<uint> _repeated_penaltyAccountIdSessions_codec
      = pb::FieldCodec.ForUInt32(72);
  private readonly pbc::RepeatedField<uint> penaltyAccountIdSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> PenaltyAccountIdSessions {
    get { return penaltyAccountIdSessions_; }
  }

  /// <summary>Field number for the "failready_account_id_sessions" field.</summary>
  public const int FailreadyAccountIdSessionsFieldNumber = 10;
  private static readonly pb::FieldCodec<uint> _repeated_failreadyAccountIdSessions_codec
      = pb::FieldCodec.ForUInt32(80);
  private readonly pbc::RepeatedField<uint> failreadyAccountIdSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> FailreadyAccountIdSessions {
    get { return failreadyAccountIdSessions_; }
  }

  /// <summary>Field number for the "vacbanned_account_id_sessions" field.</summary>
  public const int VacbannedAccountIdSessionsFieldNumber = 11;
  private static readonly pb::FieldCodec<uint> _repeated_vacbannedAccountIdSessions_codec
      = pb::FieldCodec.ForUInt32(88);
  private readonly pbc::RepeatedField<uint> vacbannedAccountIdSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> VacbannedAccountIdSessions {
    get { return vacbannedAccountIdSessions_; }
  }

  /// <summary>Field number for the "server_ipaddress_mask" field.</summary>
  public const int ServerIpaddressMaskFieldNumber = 12;
  private global::IpAddressMask serverIpaddressMask_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::IpAddressMask ServerIpaddressMask {
    get { return serverIpaddressMask_; }
    set {
      serverIpaddressMask_ = value;
    }
  }

  /// <summary>Field number for the "notes" field.</summary>
  public const int NotesFieldNumber = 13;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> _repeated_notes_codec
      = pb::FieldCodec.ForMessage(106, global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> notes_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> Notes {
    get { return notes_; }
  }

  /// <summary>Field number for the "penalty_account_id_sessions_green" field.</summary>
  public const int PenaltyAccountIdSessionsGreenFieldNumber = 14;
  private static readonly pb::FieldCodec<uint> _repeated_penaltyAccountIdSessionsGreen_codec
      = pb::FieldCodec.ForUInt32(112);
  private readonly pbc::RepeatedField<uint> penaltyAccountIdSessionsGreen_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> PenaltyAccountIdSessionsGreen {
    get { return penaltyAccountIdSessionsGreen_; }
  }

  /// <summary>Field number for the "insufficientlevel_sessions" field.</summary>
  public const int InsufficientlevelSessionsFieldNumber = 15;
  private static readonly pb::FieldCodec<uint> _repeated_insufficientlevelSessions_codec
      = pb::FieldCodec.ForUInt32(120);
  private readonly pbc::RepeatedField<uint> insufficientlevelSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> InsufficientlevelSessions {
    get { return insufficientlevelSessions_; }
  }

  /// <summary>Field number for the "vsncheck_account_id_sessions" field.</summary>
  public const int VsncheckAccountIdSessionsFieldNumber = 16;
  private static readonly pb::FieldCodec<uint> _repeated_vsncheckAccountIdSessions_codec
      = pb::FieldCodec.ForUInt32(128);
  private readonly pbc::RepeatedField<uint> vsncheckAccountIdSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> VsncheckAccountIdSessions {
    get { return vsncheckAccountIdSessions_; }
  }

  /// <summary>Field number for the "launcher_mismatch_sessions" field.</summary>
  public const int LauncherMismatchSessionsFieldNumber = 17;
  private static readonly pb::FieldCodec<uint> _repeated_launcherMismatchSessions_codec
      = pb::FieldCodec.ForUInt32(136);
  private readonly pbc::RepeatedField<uint> launcherMismatchSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> LauncherMismatchSessions {
    get { return launcherMismatchSessions_; }
  }

  /// <summary>Field number for the "insecure_account_id_sessions" field.</summary>
  public const int InsecureAccountIdSessionsFieldNumber = 18;
  private static readonly pb::FieldCodec<uint> _repeated_insecureAccountIdSessions_codec
      = pb::FieldCodec.ForUInt32(144);
  private readonly pbc::RepeatedField<uint> insecureAccountIdSessions_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> InsecureAccountIdSessions {
    get { return insecureAccountIdSessions_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Matchmaking != other.Matchmaking) return false;
    if(!waitingAccountIdSessions_.Equals(other.waitingAccountIdSessions_)) return false;
    if (Error != other.Error) return false;
    if(!ongoingmatchAccountIdSessions_.Equals(other.ongoingmatchAccountIdSessions_)) return false;
    if (!object.Equals(GlobalStats, other.GlobalStats)) return false;
    if(!failpingAccountIdSessions_.Equals(other.failpingAccountIdSessions_)) return false;
    if(!penaltyAccountIdSessions_.Equals(other.penaltyAccountIdSessions_)) return false;
    if(!failreadyAccountIdSessions_.Equals(other.failreadyAccountIdSessions_)) return false;
    if(!vacbannedAccountIdSessions_.Equals(other.vacbannedAccountIdSessions_)) return false;
    if (!object.Equals(ServerIpaddressMask, other.ServerIpaddressMask)) return false;
    if(!notes_.Equals(other.notes_)) return false;
    if(!penaltyAccountIdSessionsGreen_.Equals(other.penaltyAccountIdSessionsGreen_)) return false;
    if(!insufficientlevelSessions_.Equals(other.insufficientlevelSessions_)) return false;
    if(!vsncheckAccountIdSessions_.Equals(other.vsncheckAccountIdSessions_)) return false;
    if(!launcherMismatchSessions_.Equals(other.launcherMismatchSessions_)) return false;
    if(!insecureAccountIdSessions_.Equals(other.insecureAccountIdSessions_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMatchmaking) hash ^= Matchmaking.GetHashCode();
    hash ^= waitingAccountIdSessions_.GetHashCode();
    if (HasError) hash ^= Error.GetHashCode();
    hash ^= ongoingmatchAccountIdSessions_.GetHashCode();
    if (globalStats_ != null) hash ^= GlobalStats.GetHashCode();
    hash ^= failpingAccountIdSessions_.GetHashCode();
    hash ^= penaltyAccountIdSessions_.GetHashCode();
    hash ^= failreadyAccountIdSessions_.GetHashCode();
    hash ^= vacbannedAccountIdSessions_.GetHashCode();
    if (serverIpaddressMask_ != null) hash ^= ServerIpaddressMask.GetHashCode();
    hash ^= notes_.GetHashCode();
    hash ^= penaltyAccountIdSessionsGreen_.GetHashCode();
    hash ^= insufficientlevelSessions_.GetHashCode();
    hash ^= vsncheckAccountIdSessions_.GetHashCode();
    hash ^= launcherMismatchSessions_.GetHashCode();
    hash ^= insecureAccountIdSessions_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMatchmaking) {
      output.WriteRawTag(8);
      output.WriteInt32(Matchmaking);
    }
    waitingAccountIdSessions_.WriteTo(output, _repeated_waitingAccountIdSessions_codec);
    if (HasError) {
      output.WriteRawTag(26);
      output.WriteString(Error);
    }
    ongoingmatchAccountIdSessions_.WriteTo(output, _repeated_ongoingmatchAccountIdSessions_codec);
    if (globalStats_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(GlobalStats);
    }
    failpingAccountIdSessions_.WriteTo(output, _repeated_failpingAccountIdSessions_codec);
    penaltyAccountIdSessions_.WriteTo(output, _repeated_penaltyAccountIdSessions_codec);
    failreadyAccountIdSessions_.WriteTo(output, _repeated_failreadyAccountIdSessions_codec);
    vacbannedAccountIdSessions_.WriteTo(output, _repeated_vacbannedAccountIdSessions_codec);
    if (serverIpaddressMask_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(ServerIpaddressMask);
    }
    notes_.WriteTo(output, _repeated_notes_codec);
    penaltyAccountIdSessionsGreen_.WriteTo(output, _repeated_penaltyAccountIdSessionsGreen_codec);
    insufficientlevelSessions_.WriteTo(output, _repeated_insufficientlevelSessions_codec);
    vsncheckAccountIdSessions_.WriteTo(output, _repeated_vsncheckAccountIdSessions_codec);
    launcherMismatchSessions_.WriteTo(output, _repeated_launcherMismatchSessions_codec);
    insecureAccountIdSessions_.WriteTo(output, _repeated_insecureAccountIdSessions_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMatchmaking) {
      output.WriteRawTag(8);
      output.WriteInt32(Matchmaking);
    }
    waitingAccountIdSessions_.WriteTo(ref output, _repeated_waitingAccountIdSessions_codec);
    if (HasError) {
      output.WriteRawTag(26);
      output.WriteString(Error);
    }
    ongoingmatchAccountIdSessions_.WriteTo(ref output, _repeated_ongoingmatchAccountIdSessions_codec);
    if (globalStats_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(GlobalStats);
    }
    failpingAccountIdSessions_.WriteTo(ref output, _repeated_failpingAccountIdSessions_codec);
    penaltyAccountIdSessions_.WriteTo(ref output, _repeated_penaltyAccountIdSessions_codec);
    failreadyAccountIdSessions_.WriteTo(ref output, _repeated_failreadyAccountIdSessions_codec);
    vacbannedAccountIdSessions_.WriteTo(ref output, _repeated_vacbannedAccountIdSessions_codec);
    if (serverIpaddressMask_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(ServerIpaddressMask);
    }
    notes_.WriteTo(ref output, _repeated_notes_codec);
    penaltyAccountIdSessionsGreen_.WriteTo(ref output, _repeated_penaltyAccountIdSessionsGreen_codec);
    insufficientlevelSessions_.WriteTo(ref output, _repeated_insufficientlevelSessions_codec);
    vsncheckAccountIdSessions_.WriteTo(ref output, _repeated_vsncheckAccountIdSessions_codec);
    launcherMismatchSessions_.WriteTo(ref output, _repeated_launcherMismatchSessions_codec);
    insecureAccountIdSessions_.WriteTo(ref output, _repeated_insecureAccountIdSessions_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMatchmaking) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Matchmaking);
    }
    size += waitingAccountIdSessions_.CalculateSize(_repeated_waitingAccountIdSessions_codec);
    if (HasError) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
    }
    size += ongoingmatchAccountIdSessions_.CalculateSize(_repeated_ongoingmatchAccountIdSessions_codec);
    if (globalStats_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlobalStats);
    }
    size += failpingAccountIdSessions_.CalculateSize(_repeated_failpingAccountIdSessions_codec);
    size += penaltyAccountIdSessions_.CalculateSize(_repeated_penaltyAccountIdSessions_codec);
    size += failreadyAccountIdSessions_.CalculateSize(_repeated_failreadyAccountIdSessions_codec);
    size += vacbannedAccountIdSessions_.CalculateSize(_repeated_vacbannedAccountIdSessions_codec);
    if (serverIpaddressMask_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerIpaddressMask);
    }
    size += notes_.CalculateSize(_repeated_notes_codec);
    size += penaltyAccountIdSessionsGreen_.CalculateSize(_repeated_penaltyAccountIdSessionsGreen_codec);
    size += insufficientlevelSessions_.CalculateSize(_repeated_insufficientlevelSessions_codec);
    size += vsncheckAccountIdSessions_.CalculateSize(_repeated_vsncheckAccountIdSessions_codec);
    size += launcherMismatchSessions_.CalculateSize(_repeated_launcherMismatchSessions_codec);
    size += insecureAccountIdSessions_.CalculateSize(_repeated_insecureAccountIdSessions_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate other) {
    if (other == null) {
      return;
    }
    if (other.HasMatchmaking) {
      Matchmaking = other.Matchmaking;
    }
    waitingAccountIdSessions_.Add(other.waitingAccountIdSessions_);
    if (other.HasError) {
      Error = other.Error;
    }
    ongoingmatchAccountIdSessions_.Add(other.ongoingmatchAccountIdSessions_);
    if (other.globalStats_ != null) {
      if (globalStats_ == null) {
        GlobalStats = new global::GlobalStatistics();
      }
      GlobalStats.MergeFrom(other.GlobalStats);
    }
    failpingAccountIdSessions_.Add(other.failpingAccountIdSessions_);
    penaltyAccountIdSessions_.Add(other.penaltyAccountIdSessions_);
    failreadyAccountIdSessions_.Add(other.failreadyAccountIdSessions_);
    vacbannedAccountIdSessions_.Add(other.vacbannedAccountIdSessions_);
    if (other.serverIpaddressMask_ != null) {
      if (serverIpaddressMask_ == null) {
        ServerIpaddressMask = new global::IpAddressMask();
      }
      ServerIpaddressMask.MergeFrom(other.ServerIpaddressMask);
    }
    notes_.Add(other.notes_);
    penaltyAccountIdSessionsGreen_.Add(other.penaltyAccountIdSessionsGreen_);
    insufficientlevelSessions_.Add(other.insufficientlevelSessions_);
    vsncheckAccountIdSessions_.Add(other.vsncheckAccountIdSessions_);
    launcherMismatchSessions_.Add(other.launcherMismatchSessions_);
    insecureAccountIdSessions_.Add(other.insecureAccountIdSessions_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Matchmaking = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          waitingAccountIdSessions_.AddEntriesFrom(input, _repeated_waitingAccountIdSessions_codec);
          break;
        }
        case 26: {
          Error = input.ReadString();
          break;
        }
        case 50:
        case 48: {
          ongoingmatchAccountIdSessions_.AddEntriesFrom(input, _repeated_ongoingmatchAccountIdSessions_codec);
          break;
        }
        case 58: {
          if (globalStats_ == null) {
            GlobalStats = new global::GlobalStatistics();
          }
          input.ReadMessage(GlobalStats);
          break;
        }
        case 66:
        case 64: {
          failpingAccountIdSessions_.AddEntriesFrom(input, _repeated_failpingAccountIdSessions_codec);
          break;
        }
        case 74:
        case 72: {
          penaltyAccountIdSessions_.AddEntriesFrom(input, _repeated_penaltyAccountIdSessions_codec);
          break;
        }
        case 82:
        case 80: {
          failreadyAccountIdSessions_.AddEntriesFrom(input, _repeated_failreadyAccountIdSessions_codec);
          break;
        }
        case 90:
        case 88: {
          vacbannedAccountIdSessions_.AddEntriesFrom(input, _repeated_vacbannedAccountIdSessions_codec);
          break;
        }
        case 98: {
          if (serverIpaddressMask_ == null) {
            ServerIpaddressMask = new global::IpAddressMask();
          }
          input.ReadMessage(ServerIpaddressMask);
          break;
        }
        case 106: {
          notes_.AddEntriesFrom(input, _repeated_notes_codec);
          break;
        }
        case 114:
        case 112: {
          penaltyAccountIdSessionsGreen_.AddEntriesFrom(input, _repeated_penaltyAccountIdSessionsGreen_codec);
          break;
        }
        case 122:
        case 120: {
          insufficientlevelSessions_.AddEntriesFrom(input, _repeated_insufficientlevelSessions_codec);
          break;
        }
        case 130:
        case 128: {
          vsncheckAccountIdSessions_.AddEntriesFrom(input, _repeated_vsncheckAccountIdSessions_codec);
          break;
        }
        case 138:
        case 136: {
          launcherMismatchSessions_.AddEntriesFrom(input, _repeated_launcherMismatchSessions_codec);
          break;
        }
        case 146:
        case 144: {
          insecureAccountIdSessions_.AddEntriesFrom(input, _repeated_insecureAccountIdSessions_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Matchmaking = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          waitingAccountIdSessions_.AddEntriesFrom(ref input, _repeated_waitingAccountIdSessions_codec);
          break;
        }
        case 26: {
          Error = input.ReadString();
          break;
        }
        case 50:
        case 48: {
          ongoingmatchAccountIdSessions_.AddEntriesFrom(ref input, _repeated_ongoingmatchAccountIdSessions_codec);
          break;
        }
        case 58: {
          if (globalStats_ == null) {
            GlobalStats = new global::GlobalStatistics();
          }
          input.ReadMessage(GlobalStats);
          break;
        }
        case 66:
        case 64: {
          failpingAccountIdSessions_.AddEntriesFrom(ref input, _repeated_failpingAccountIdSessions_codec);
          break;
        }
        case 74:
        case 72: {
          penaltyAccountIdSessions_.AddEntriesFrom(ref input, _repeated_penaltyAccountIdSessions_codec);
          break;
        }
        case 82:
        case 80: {
          failreadyAccountIdSessions_.AddEntriesFrom(ref input, _repeated_failreadyAccountIdSessions_codec);
          break;
        }
        case 90:
        case 88: {
          vacbannedAccountIdSessions_.AddEntriesFrom(ref input, _repeated_vacbannedAccountIdSessions_codec);
          break;
        }
        case 98: {
          if (serverIpaddressMask_ == null) {
            ServerIpaddressMask = new global::IpAddressMask();
          }
          input.ReadMessage(ServerIpaddressMask);
          break;
        }
        case 106: {
          notes_.AddEntriesFrom(ref input, _repeated_notes_codec);
          break;
        }
        case 114:
        case 112: {
          penaltyAccountIdSessionsGreen_.AddEntriesFrom(ref input, _repeated_penaltyAccountIdSessionsGreen_codec);
          break;
        }
        case 122:
        case 120: {
          insufficientlevelSessions_.AddEntriesFrom(ref input, _repeated_insufficientlevelSessions_codec);
          break;
        }
        case 130:
        case 128: {
          vsncheckAccountIdSessions_.AddEntriesFrom(ref input, _repeated_vsncheckAccountIdSessions_codec);
          break;
        }
        case 138:
        case 136: {
          launcherMismatchSessions_.AddEntriesFrom(ref input, _repeated_launcherMismatchSessions_codec);
          break;
        }
        case 146:
        case 144: {
          insecureAccountIdSessions_.AddEntriesFrom(ref input, _repeated_insecureAccountIdSessions_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDataGCCStrike15_v2_TournamentMatchDraft : pb::IMessage<CDataGCCStrike15_v2_TournamentMatchDraft>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDataGCCStrike15_v2_TournamentMatchDraft> _parser = new pb::MessageParser<CDataGCCStrike15_v2_TournamentMatchDraft>(() => new CDataGCCStrike15_v2_TournamentMatchDraft());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDataGCCStrike15_v2_TournamentMatchDraft> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentMatchDraft() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentMatchDraft(CDataGCCStrike15_v2_TournamentMatchDraft other) : this() {
    _hasBits0 = other._hasBits0;
    eventId_ = other.eventId_;
    eventStageId_ = other.eventStageId_;
    teamId0_ = other.teamId0_;
    teamId1_ = other.teamId1_;
    mapsCount_ = other.mapsCount_;
    mapsCurrent_ = other.mapsCurrent_;
    teamIdStart_ = other.teamIdStart_;
    teamIdVeto1_ = other.teamIdVeto1_;
    teamIdPickn_ = other.teamIdPickn_;
    drafts_ = other.drafts_.Clone();
    voteMapid0_ = other.voteMapid0_.Clone();
    voteMapid1_ = other.voteMapid1_.Clone();
    voteMapid2_ = other.voteMapid2_.Clone();
    voteMapid3_ = other.voteMapid3_.Clone();
    voteMapid4_ = other.voteMapid4_.Clone();
    voteMapid5_ = other.voteMapid5_.Clone();
    voteStartingSide_ = other.voteStartingSide_.Clone();
    votePhase_ = other.votePhase_;
    votePhaseStart_ = other.votePhaseStart_;
    votePhaseLength_ = other.votePhaseLength_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentMatchDraft Clone() {
    return new CDataGCCStrike15_v2_TournamentMatchDraft(this);
  }

  /// <summary>Field number for the "event_id" field.</summary>
  public const int EventIdFieldNumber = 1;
  private readonly static int EventIdDefaultValue = 0;

  private int eventId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EventId {
    get { if ((_hasBits0 & 1) != 0) { return eventId_; } else { return EventIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventId_ = value;
    }
  }
  /// <summary>Gets whether the "event_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "event_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "event_stage_id" field.</summary>
  public const int EventStageIdFieldNumber = 2;
  private readonly static int EventStageIdDefaultValue = 0;

  private int eventStageId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EventStageId {
    get { if ((_hasBits0 & 2) != 0) { return eventStageId_; } else { return EventStageIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      eventStageId_ = value;
    }
  }
  /// <summary>Gets whether the "event_stage_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventStageId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "event_stage_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventStageId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "team_id_0" field.</summary>
  public const int TeamId0FieldNumber = 3;
  private readonly static int TeamId0DefaultValue = 0;

  private int teamId0_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamId0 {
    get { if ((_hasBits0 & 4) != 0) { return teamId0_; } else { return TeamId0DefaultValue; } }
    set {
      _hasBits0 |= 4;
      teamId0_ = value;
    }
  }
  /// <summary>Gets whether the "team_id_0" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamId0 {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "team_id_0" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamId0() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "team_id_1" field.</summary>
  public const int TeamId1FieldNumber = 4;
  private readonly static int TeamId1DefaultValue = 0;

  private int teamId1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamId1 {
    get { if ((_hasBits0 & 8) != 0) { return teamId1_; } else { return TeamId1DefaultValue; } }
    set {
      _hasBits0 |= 8;
      teamId1_ = value;
    }
  }
  /// <summary>Gets whether the "team_id_1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamId1 {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "team_id_1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamId1() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "maps_count" field.</summary>
  public const int MapsCountFieldNumber = 5;
  private readonly static int MapsCountDefaultValue = 0;

  private int mapsCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MapsCount {
    get { if ((_hasBits0 & 16) != 0) { return mapsCount_; } else { return MapsCountDefaultValue; } }
    set {
      _hasBits0 |= 16;
      mapsCount_ = value;
    }
  }
  /// <summary>Gets whether the "maps_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMapsCount {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "maps_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMapsCount() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "maps_current" field.</summary>
  public const int MapsCurrentFieldNumber = 6;
  private readonly static int MapsCurrentDefaultValue = 0;

  private int mapsCurrent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MapsCurrent {
    get { if ((_hasBits0 & 32) != 0) { return mapsCurrent_; } else { return MapsCurrentDefaultValue; } }
    set {
      _hasBits0 |= 32;
      mapsCurrent_ = value;
    }
  }
  /// <summary>Gets whether the "maps_current" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMapsCurrent {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "maps_current" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMapsCurrent() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "team_id_start" field.</summary>
  public const int TeamIdStartFieldNumber = 7;
  private readonly static int TeamIdStartDefaultValue = 0;

  private int teamIdStart_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamIdStart {
    get { if ((_hasBits0 & 64) != 0) { return teamIdStart_; } else { return TeamIdStartDefaultValue; } }
    set {
      _hasBits0 |= 64;
      teamIdStart_ = value;
    }
  }
  /// <summary>Gets whether the "team_id_start" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamIdStart {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "team_id_start" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamIdStart() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "team_id_veto1" field.</summary>
  public const int TeamIdVeto1FieldNumber = 8;
  private readonly static int TeamIdVeto1DefaultValue = 0;

  private int teamIdVeto1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamIdVeto1 {
    get { if ((_hasBits0 & 128) != 0) { return teamIdVeto1_; } else { return TeamIdVeto1DefaultValue; } }
    set {
      _hasBits0 |= 128;
      teamIdVeto1_ = value;
    }
  }
  /// <summary>Gets whether the "team_id_veto1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamIdVeto1 {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "team_id_veto1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamIdVeto1() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "team_id_pickn" field.</summary>
  public const int TeamIdPicknFieldNumber = 9;
  private readonly static int TeamIdPicknDefaultValue = 0;

  private int teamIdPickn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamIdPickn {
    get { if ((_hasBits0 & 256) != 0) { return teamIdPickn_; } else { return TeamIdPicknDefaultValue; } }
    set {
      _hasBits0 |= 256;
      teamIdPickn_ = value;
    }
  }
  /// <summary>Gets whether the "team_id_pickn" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamIdPickn {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "team_id_pickn" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamIdPickn() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "drafts" field.</summary>
  public const int DraftsFieldNumber = 10;
  private static readonly pb::FieldCodec<global::CDataGCCStrike15_v2_TournamentMatchDraft.Types.Entry> _repeated_drafts_codec
      = pb::FieldCodec.ForMessage(82, global::CDataGCCStrike15_v2_TournamentMatchDraft.Types.Entry.Parser);
  private readonly pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentMatchDraft.Types.Entry> drafts_ = new pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentMatchDraft.Types.Entry>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentMatchDraft.Types.Entry> Drafts {
    get { return drafts_; }
  }

  /// <summary>Field number for the "vote_mapid_0" field.</summary>
  public const int VoteMapid0FieldNumber = 11;
  private static readonly pb::FieldCodec<int> _repeated_voteMapid0_codec
      = pb::FieldCodec.ForInt32(88);
  private readonly pbc::RepeatedField<int> voteMapid0_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> VoteMapid0 {
    get { return voteMapid0_; }
  }

  /// <summary>Field number for the "vote_mapid_1" field.</summary>
  public const int VoteMapid1FieldNumber = 12;
  private static readonly pb::FieldCodec<int> _repeated_voteMapid1_codec
      = pb::FieldCodec.ForInt32(96);
  private readonly pbc::RepeatedField<int> voteMapid1_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> VoteMapid1 {
    get { return voteMapid1_; }
  }

  /// <summary>Field number for the "vote_mapid_2" field.</summary>
  public const int VoteMapid2FieldNumber = 13;
  private static readonly pb::FieldCodec<int> _repeated_voteMapid2_codec
      = pb::FieldCodec.ForInt32(104);
  private readonly pbc::RepeatedField<int> voteMapid2_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> VoteMapid2 {
    get { return voteMapid2_; }
  }

  /// <summary>Field number for the "vote_mapid_3" field.</summary>
  public const int VoteMapid3FieldNumber = 14;
  private static readonly pb::FieldCodec<int> _repeated_voteMapid3_codec
      = pb::FieldCodec.ForInt32(112);
  private readonly pbc::RepeatedField<int> voteMapid3_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> VoteMapid3 {
    get { return voteMapid3_; }
  }

  /// <summary>Field number for the "vote_mapid_4" field.</summary>
  public const int VoteMapid4FieldNumber = 15;
  private static readonly pb::FieldCodec<int> _repeated_voteMapid4_codec
      = pb::FieldCodec.ForInt32(120);
  private readonly pbc::RepeatedField<int> voteMapid4_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> VoteMapid4 {
    get { return voteMapid4_; }
  }

  /// <summary>Field number for the "vote_mapid_5" field.</summary>
  public const int VoteMapid5FieldNumber = 16;
  private static readonly pb::FieldCodec<int> _repeated_voteMapid5_codec
      = pb::FieldCodec.ForInt32(128);
  private readonly pbc::RepeatedField<int> voteMapid5_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> VoteMapid5 {
    get { return voteMapid5_; }
  }

  /// <summary>Field number for the "vote_starting_side" field.</summary>
  public const int VoteStartingSideFieldNumber = 17;
  private static readonly pb::FieldCodec<int> _repeated_voteStartingSide_codec
      = pb::FieldCodec.ForInt32(136);
  private readonly pbc::RepeatedField<int> voteStartingSide_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> VoteStartingSide {
    get { return voteStartingSide_; }
  }

  /// <summary>Field number for the "vote_phase" field.</summary>
  public const int VotePhaseFieldNumber = 18;
  private readonly static int VotePhaseDefaultValue = 0;

  private int votePhase_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int VotePhase {
    get { if ((_hasBits0 & 512) != 0) { return votePhase_; } else { return VotePhaseDefaultValue; } }
    set {
      _hasBits0 |= 512;
      votePhase_ = value;
    }
  }
  /// <summary>Gets whether the "vote_phase" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVotePhase {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "vote_phase" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVotePhase() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "vote_phase_start" field.</summary>
  public const int VotePhaseStartFieldNumber = 19;
  private readonly static float VotePhaseStartDefaultValue = 0F;

  private float votePhaseStart_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float VotePhaseStart {
    get { if ((_hasBits0 & 1024) != 0) { return votePhaseStart_; } else { return VotePhaseStartDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      votePhaseStart_ = value;
    }
  }
  /// <summary>Gets whether the "vote_phase_start" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVotePhaseStart {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "vote_phase_start" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVotePhaseStart() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "vote_phase_length" field.</summary>
  public const int VotePhaseLengthFieldNumber = 20;
  private readonly static float VotePhaseLengthDefaultValue = 0F;

  private float votePhaseLength_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float VotePhaseLength {
    get { if ((_hasBits0 & 2048) != 0) { return votePhaseLength_; } else { return VotePhaseLengthDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      votePhaseLength_ = value;
    }
  }
  /// <summary>Gets whether the "vote_phase_length" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVotePhaseLength {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "vote_phase_length" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVotePhaseLength() {
    _hasBits0 &= ~2048;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDataGCCStrike15_v2_TournamentMatchDraft);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDataGCCStrike15_v2_TournamentMatchDraft other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EventId != other.EventId) return false;
    if (EventStageId != other.EventStageId) return false;
    if (TeamId0 != other.TeamId0) return false;
    if (TeamId1 != other.TeamId1) return false;
    if (MapsCount != other.MapsCount) return false;
    if (MapsCurrent != other.MapsCurrent) return false;
    if (TeamIdStart != other.TeamIdStart) return false;
    if (TeamIdVeto1 != other.TeamIdVeto1) return false;
    if (TeamIdPickn != other.TeamIdPickn) return false;
    if(!drafts_.Equals(other.drafts_)) return false;
    if(!voteMapid0_.Equals(other.voteMapid0_)) return false;
    if(!voteMapid1_.Equals(other.voteMapid1_)) return false;
    if(!voteMapid2_.Equals(other.voteMapid2_)) return false;
    if(!voteMapid3_.Equals(other.voteMapid3_)) return false;
    if(!voteMapid4_.Equals(other.voteMapid4_)) return false;
    if(!voteMapid5_.Equals(other.voteMapid5_)) return false;
    if(!voteStartingSide_.Equals(other.voteStartingSide_)) return false;
    if (VotePhase != other.VotePhase) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VotePhaseStart, other.VotePhaseStart)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VotePhaseLength, other.VotePhaseLength)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventId) hash ^= EventId.GetHashCode();
    if (HasEventStageId) hash ^= EventStageId.GetHashCode();
    if (HasTeamId0) hash ^= TeamId0.GetHashCode();
    if (HasTeamId1) hash ^= TeamId1.GetHashCode();
    if (HasMapsCount) hash ^= MapsCount.GetHashCode();
    if (HasMapsCurrent) hash ^= MapsCurrent.GetHashCode();
    if (HasTeamIdStart) hash ^= TeamIdStart.GetHashCode();
    if (HasTeamIdVeto1) hash ^= TeamIdVeto1.GetHashCode();
    if (HasTeamIdPickn) hash ^= TeamIdPickn.GetHashCode();
    hash ^= drafts_.GetHashCode();
    hash ^= voteMapid0_.GetHashCode();
    hash ^= voteMapid1_.GetHashCode();
    hash ^= voteMapid2_.GetHashCode();
    hash ^= voteMapid3_.GetHashCode();
    hash ^= voteMapid4_.GetHashCode();
    hash ^= voteMapid5_.GetHashCode();
    hash ^= voteStartingSide_.GetHashCode();
    if (HasVotePhase) hash ^= VotePhase.GetHashCode();
    if (HasVotePhaseStart) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VotePhaseStart);
    if (HasVotePhaseLength) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VotePhaseLength);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteInt32(EventId);
    }
    if (HasEventStageId) {
      output.WriteRawTag(16);
      output.WriteInt32(EventStageId);
    }
    if (HasTeamId0) {
      output.WriteRawTag(24);
      output.WriteInt32(TeamId0);
    }
    if (HasTeamId1) {
      output.WriteRawTag(32);
      output.WriteInt32(TeamId1);
    }
    if (HasMapsCount) {
      output.WriteRawTag(40);
      output.WriteInt32(MapsCount);
    }
    if (HasMapsCurrent) {
      output.WriteRawTag(48);
      output.WriteInt32(MapsCurrent);
    }
    if (HasTeamIdStart) {
      output.WriteRawTag(56);
      output.WriteInt32(TeamIdStart);
    }
    if (HasTeamIdVeto1) {
      output.WriteRawTag(64);
      output.WriteInt32(TeamIdVeto1);
    }
    if (HasTeamIdPickn) {
      output.WriteRawTag(72);
      output.WriteInt32(TeamIdPickn);
    }
    drafts_.WriteTo(output, _repeated_drafts_codec);
    voteMapid0_.WriteTo(output, _repeated_voteMapid0_codec);
    voteMapid1_.WriteTo(output, _repeated_voteMapid1_codec);
    voteMapid2_.WriteTo(output, _repeated_voteMapid2_codec);
    voteMapid3_.WriteTo(output, _repeated_voteMapid3_codec);
    voteMapid4_.WriteTo(output, _repeated_voteMapid4_codec);
    voteMapid5_.WriteTo(output, _repeated_voteMapid5_codec);
    voteStartingSide_.WriteTo(output, _repeated_voteStartingSide_codec);
    if (HasVotePhase) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(VotePhase);
    }
    if (HasVotePhaseStart) {
      output.WriteRawTag(157, 1);
      output.WriteFloat(VotePhaseStart);
    }
    if (HasVotePhaseLength) {
      output.WriteRawTag(165, 1);
      output.WriteFloat(VotePhaseLength);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteInt32(EventId);
    }
    if (HasEventStageId) {
      output.WriteRawTag(16);
      output.WriteInt32(EventStageId);
    }
    if (HasTeamId0) {
      output.WriteRawTag(24);
      output.WriteInt32(TeamId0);
    }
    if (HasTeamId1) {
      output.WriteRawTag(32);
      output.WriteInt32(TeamId1);
    }
    if (HasMapsCount) {
      output.WriteRawTag(40);
      output.WriteInt32(MapsCount);
    }
    if (HasMapsCurrent) {
      output.WriteRawTag(48);
      output.WriteInt32(MapsCurrent);
    }
    if (HasTeamIdStart) {
      output.WriteRawTag(56);
      output.WriteInt32(TeamIdStart);
    }
    if (HasTeamIdVeto1) {
      output.WriteRawTag(64);
      output.WriteInt32(TeamIdVeto1);
    }
    if (HasTeamIdPickn) {
      output.WriteRawTag(72);
      output.WriteInt32(TeamIdPickn);
    }
    drafts_.WriteTo(ref output, _repeated_drafts_codec);
    voteMapid0_.WriteTo(ref output, _repeated_voteMapid0_codec);
    voteMapid1_.WriteTo(ref output, _repeated_voteMapid1_codec);
    voteMapid2_.WriteTo(ref output, _repeated_voteMapid2_codec);
    voteMapid3_.WriteTo(ref output, _repeated_voteMapid3_codec);
    voteMapid4_.WriteTo(ref output, _repeated_voteMapid4_codec);
    voteMapid5_.WriteTo(ref output, _repeated_voteMapid5_codec);
    voteStartingSide_.WriteTo(ref output, _repeated_voteStartingSide_codec);
    if (HasVotePhase) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(VotePhase);
    }
    if (HasVotePhaseStart) {
      output.WriteRawTag(157, 1);
      output.WriteFloat(VotePhaseStart);
    }
    if (HasVotePhaseLength) {
      output.WriteRawTag(165, 1);
      output.WriteFloat(VotePhaseLength);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventId);
    }
    if (HasEventStageId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventStageId);
    }
    if (HasTeamId0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamId0);
    }
    if (HasTeamId1) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamId1);
    }
    if (HasMapsCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapsCount);
    }
    if (HasMapsCurrent) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapsCurrent);
    }
    if (HasTeamIdStart) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamIdStart);
    }
    if (HasTeamIdVeto1) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamIdVeto1);
    }
    if (HasTeamIdPickn) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamIdPickn);
    }
    size += drafts_.CalculateSize(_repeated_drafts_codec);
    size += voteMapid0_.CalculateSize(_repeated_voteMapid0_codec);
    size += voteMapid1_.CalculateSize(_repeated_voteMapid1_codec);
    size += voteMapid2_.CalculateSize(_repeated_voteMapid2_codec);
    size += voteMapid3_.CalculateSize(_repeated_voteMapid3_codec);
    size += voteMapid4_.CalculateSize(_repeated_voteMapid4_codec);
    size += voteMapid5_.CalculateSize(_repeated_voteMapid5_codec);
    size += voteStartingSide_.CalculateSize(_repeated_voteStartingSide_codec);
    if (HasVotePhase) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(VotePhase);
    }
    if (HasVotePhaseStart) {
      size += 2 + 4;
    }
    if (HasVotePhaseLength) {
      size += 2 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDataGCCStrike15_v2_TournamentMatchDraft other) {
    if (other == null) {
      return;
    }
    if (other.HasEventId) {
      EventId = other.EventId;
    }
    if (other.HasEventStageId) {
      EventStageId = other.EventStageId;
    }
    if (other.HasTeamId0) {
      TeamId0 = other.TeamId0;
    }
    if (other.HasTeamId1) {
      TeamId1 = other.TeamId1;
    }
    if (other.HasMapsCount) {
      MapsCount = other.MapsCount;
    }
    if (other.HasMapsCurrent) {
      MapsCurrent = other.MapsCurrent;
    }
    if (other.HasTeamIdStart) {
      TeamIdStart = other.TeamIdStart;
    }
    if (other.HasTeamIdVeto1) {
      TeamIdVeto1 = other.TeamIdVeto1;
    }
    if (other.HasTeamIdPickn) {
      TeamIdPickn = other.TeamIdPickn;
    }
    drafts_.Add(other.drafts_);
    voteMapid0_.Add(other.voteMapid0_);
    voteMapid1_.Add(other.voteMapid1_);
    voteMapid2_.Add(other.voteMapid2_);
    voteMapid3_.Add(other.voteMapid3_);
    voteMapid4_.Add(other.voteMapid4_);
    voteMapid5_.Add(other.voteMapid5_);
    voteStartingSide_.Add(other.voteStartingSide_);
    if (other.HasVotePhase) {
      VotePhase = other.VotePhase;
    }
    if (other.HasVotePhaseStart) {
      VotePhaseStart = other.VotePhaseStart;
    }
    if (other.HasVotePhaseLength) {
      VotePhaseLength = other.VotePhaseLength;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EventId = input.ReadInt32();
          break;
        }
        case 16: {
          EventStageId = input.ReadInt32();
          break;
        }
        case 24: {
          TeamId0 = input.ReadInt32();
          break;
        }
        case 32: {
          TeamId1 = input.ReadInt32();
          break;
        }
        case 40: {
          MapsCount = input.ReadInt32();
          break;
        }
        case 48: {
          MapsCurrent = input.ReadInt32();
          break;
        }
        case 56: {
          TeamIdStart = input.ReadInt32();
          break;
        }
        case 64: {
          TeamIdVeto1 = input.ReadInt32();
          break;
        }
        case 72: {
          TeamIdPickn = input.ReadInt32();
          break;
        }
        case 82: {
          drafts_.AddEntriesFrom(input, _repeated_drafts_codec);
          break;
        }
        case 90:
        case 88: {
          voteMapid0_.AddEntriesFrom(input, _repeated_voteMapid0_codec);
          break;
        }
        case 98:
        case 96: {
          voteMapid1_.AddEntriesFrom(input, _repeated_voteMapid1_codec);
          break;
        }
        case 106:
        case 104: {
          voteMapid2_.AddEntriesFrom(input, _repeated_voteMapid2_codec);
          break;
        }
        case 114:
        case 112: {
          voteMapid3_.AddEntriesFrom(input, _repeated_voteMapid3_codec);
          break;
        }
        case 122:
        case 120: {
          voteMapid4_.AddEntriesFrom(input, _repeated_voteMapid4_codec);
          break;
        }
        case 130:
        case 128: {
          voteMapid5_.AddEntriesFrom(input, _repeated_voteMapid5_codec);
          break;
        }
        case 138:
        case 136: {
          voteStartingSide_.AddEntriesFrom(input, _repeated_voteStartingSide_codec);
          break;
        }
        case 144: {
          VotePhase = input.ReadInt32();
          break;
        }
        case 157: {
          VotePhaseStart = input.ReadFloat();
          break;
        }
        case 165: {
          VotePhaseLength = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EventId = input.ReadInt32();
          break;
        }
        case 16: {
          EventStageId = input.ReadInt32();
          break;
        }
        case 24: {
          TeamId0 = input.ReadInt32();
          break;
        }
        case 32: {
          TeamId1 = input.ReadInt32();
          break;
        }
        case 40: {
          MapsCount = input.ReadInt32();
          break;
        }
        case 48: {
          MapsCurrent = input.ReadInt32();
          break;
        }
        case 56: {
          TeamIdStart = input.ReadInt32();
          break;
        }
        case 64: {
          TeamIdVeto1 = input.ReadInt32();
          break;
        }
        case 72: {
          TeamIdPickn = input.ReadInt32();
          break;
        }
        case 82: {
          drafts_.AddEntriesFrom(ref input, _repeated_drafts_codec);
          break;
        }
        case 90:
        case 88: {
          voteMapid0_.AddEntriesFrom(ref input, _repeated_voteMapid0_codec);
          break;
        }
        case 98:
        case 96: {
          voteMapid1_.AddEntriesFrom(ref input, _repeated_voteMapid1_codec);
          break;
        }
        case 106:
        case 104: {
          voteMapid2_.AddEntriesFrom(ref input, _repeated_voteMapid2_codec);
          break;
        }
        case 114:
        case 112: {
          voteMapid3_.AddEntriesFrom(ref input, _repeated_voteMapid3_codec);
          break;
        }
        case 122:
        case 120: {
          voteMapid4_.AddEntriesFrom(ref input, _repeated_voteMapid4_codec);
          break;
        }
        case 130:
        case 128: {
          voteMapid5_.AddEntriesFrom(ref input, _repeated_voteMapid5_codec);
          break;
        }
        case 138:
        case 136: {
          voteStartingSide_.AddEntriesFrom(ref input, _repeated_voteStartingSide_codec);
          break;
        }
        case 144: {
          VotePhase = input.ReadInt32();
          break;
        }
        case 157: {
          VotePhaseStart = input.ReadFloat();
          break;
        }
        case 165: {
          VotePhaseLength = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CDataGCCStrike15_v2_TournamentMatchDraft message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Entry : pb::IMessage<Entry>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Entry> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDataGCCStrike15_v2_TournamentMatchDraft.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry(Entry other) : this() {
        _hasBits0 = other._hasBits0;
        mapid_ = other.mapid_;
        teamIdCt_ = other.teamIdCt_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry Clone() {
        return new Entry(this);
      }

      /// <summary>Field number for the "mapid" field.</summary>
      public const int MapidFieldNumber = 1;
      private readonly static int MapidDefaultValue = 0;

      private int mapid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Mapid {
        get { if ((_hasBits0 & 1) != 0) { return mapid_; } else { return MapidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          mapid_ = value;
        }
      }
      /// <summary>Gets whether the "mapid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMapid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "mapid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMapid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "team_id_ct" field.</summary>
      public const int TeamIdCtFieldNumber = 2;
      private readonly static int TeamIdCtDefaultValue = 0;

      private int teamIdCt_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int TeamIdCt {
        get { if ((_hasBits0 & 2) != 0) { return teamIdCt_; } else { return TeamIdCtDefaultValue; } }
        set {
          _hasBits0 |= 2;
          teamIdCt_ = value;
        }
      }
      /// <summary>Gets whether the "team_id_ct" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeamIdCt {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "team_id_ct" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeamIdCt() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Entry);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Entry other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Mapid != other.Mapid) return false;
        if (TeamIdCt != other.TeamIdCt) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasMapid) hash ^= Mapid.GetHashCode();
        if (HasTeamIdCt) hash ^= TeamIdCt.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasMapid) {
          output.WriteRawTag(8);
          output.WriteInt32(Mapid);
        }
        if (HasTeamIdCt) {
          output.WriteRawTag(16);
          output.WriteInt32(TeamIdCt);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasMapid) {
          output.WriteRawTag(8);
          output.WriteInt32(Mapid);
        }
        if (HasTeamIdCt) {
          output.WriteRawTag(16);
          output.WriteInt32(TeamIdCt);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasMapid) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mapid);
        }
        if (HasTeamIdCt) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamIdCt);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Entry other) {
        if (other == null) {
          return;
        }
        if (other.HasMapid) {
          Mapid = other.Mapid;
        }
        if (other.HasTeamIdCt) {
          TeamIdCt = other.TeamIdCt;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Mapid = input.ReadInt32();
              break;
            }
            case 16: {
              TeamIdCt = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Mapid = input.ReadInt32();
              break;
            }
            case 16: {
              TeamIdCt = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CPreMatchInfoData : pb::IMessage<CPreMatchInfoData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CPreMatchInfoData> _parser = new pb::MessageParser<CPreMatchInfoData>(() => new CPreMatchInfoData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CPreMatchInfoData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CPreMatchInfoData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CPreMatchInfoData(CPreMatchInfoData other) : this() {
    _hasBits0 = other._hasBits0;
    predictionsPct_ = other.predictionsPct_;
    draft_ = other.draft_ != null ? other.draft_.Clone() : null;
    stats_ = other.stats_.Clone();
    wins_ = other.wins_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CPreMatchInfoData Clone() {
    return new CPreMatchInfoData(this);
  }

  /// <summary>Field number for the "predictions_pct" field.</summary>
  public const int PredictionsPctFieldNumber = 1;
  private readonly static int PredictionsPctDefaultValue = 0;

  private int predictionsPct_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PredictionsPct {
    get { if ((_hasBits0 & 1) != 0) { return predictionsPct_; } else { return PredictionsPctDefaultValue; } }
    set {
      _hasBits0 |= 1;
      predictionsPct_ = value;
    }
  }
  /// <summary>Gets whether the "predictions_pct" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPredictionsPct {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "predictions_pct" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPredictionsPct() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "draft" field.</summary>
  public const int DraftFieldNumber = 4;
  private global::CDataGCCStrike15_v2_TournamentMatchDraft draft_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CDataGCCStrike15_v2_TournamentMatchDraft Draft {
    get { return draft_; }
    set {
      draft_ = value;
    }
  }

  /// <summary>Field number for the "stats" field.</summary>
  public const int StatsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CPreMatchInfoData.Types.TeamStats> _repeated_stats_codec
      = pb::FieldCodec.ForMessage(42, global::CPreMatchInfoData.Types.TeamStats.Parser);
  private readonly pbc::RepeatedField<global::CPreMatchInfoData.Types.TeamStats> stats_ = new pbc::RepeatedField<global::CPreMatchInfoData.Types.TeamStats>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CPreMatchInfoData.Types.TeamStats> Stats {
    get { return stats_; }
  }

  /// <summary>Field number for the "wins" field.</summary>
  public const int WinsFieldNumber = 6;
  private static readonly pb::FieldCodec<int> _repeated_wins_codec
      = pb::FieldCodec.ForInt32(48);
  private readonly pbc::RepeatedField<int> wins_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Wins {
    get { return wins_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CPreMatchInfoData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CPreMatchInfoData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PredictionsPct != other.PredictionsPct) return false;
    if (!object.Equals(Draft, other.Draft)) return false;
    if(!stats_.Equals(other.stats_)) return false;
    if(!wins_.Equals(other.wins_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPredictionsPct) hash ^= PredictionsPct.GetHashCode();
    if (draft_ != null) hash ^= Draft.GetHashCode();
    hash ^= stats_.GetHashCode();
    hash ^= wins_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPredictionsPct) {
      output.WriteRawTag(8);
      output.WriteInt32(PredictionsPct);
    }
    if (draft_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Draft);
    }
    stats_.WriteTo(output, _repeated_stats_codec);
    wins_.WriteTo(output, _repeated_wins_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPredictionsPct) {
      output.WriteRawTag(8);
      output.WriteInt32(PredictionsPct);
    }
    if (draft_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Draft);
    }
    stats_.WriteTo(ref output, _repeated_stats_codec);
    wins_.WriteTo(ref output, _repeated_wins_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPredictionsPct) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PredictionsPct);
    }
    if (draft_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Draft);
    }
    size += stats_.CalculateSize(_repeated_stats_codec);
    size += wins_.CalculateSize(_repeated_wins_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CPreMatchInfoData other) {
    if (other == null) {
      return;
    }
    if (other.HasPredictionsPct) {
      PredictionsPct = other.PredictionsPct;
    }
    if (other.draft_ != null) {
      if (draft_ == null) {
        Draft = new global::CDataGCCStrike15_v2_TournamentMatchDraft();
      }
      Draft.MergeFrom(other.Draft);
    }
    stats_.Add(other.stats_);
    wins_.Add(other.wins_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PredictionsPct = input.ReadInt32();
          break;
        }
        case 34: {
          if (draft_ == null) {
            Draft = new global::CDataGCCStrike15_v2_TournamentMatchDraft();
          }
          input.ReadMessage(Draft);
          break;
        }
        case 42: {
          stats_.AddEntriesFrom(input, _repeated_stats_codec);
          break;
        }
        case 50:
        case 48: {
          wins_.AddEntriesFrom(input, _repeated_wins_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PredictionsPct = input.ReadInt32();
          break;
        }
        case 34: {
          if (draft_ == null) {
            Draft = new global::CDataGCCStrike15_v2_TournamentMatchDraft();
          }
          input.ReadMessage(Draft);
          break;
        }
        case 42: {
          stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
          break;
        }
        case 50:
        case 48: {
          wins_.AddEntriesFrom(ref input, _repeated_wins_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CPreMatchInfoData message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class TeamStats : pb::IMessage<TeamStats>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<TeamStats> _parser = new pb::MessageParser<TeamStats>(() => new TeamStats());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<TeamStats> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CPreMatchInfoData.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TeamStats() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TeamStats(TeamStats other) : this() {
        _hasBits0 = other._hasBits0;
        matchInfoIdxtxt_ = other.matchInfoIdxtxt_;
        matchInfoTxt_ = other.matchInfoTxt_;
        matchInfoTeams_ = other.matchInfoTeams_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TeamStats Clone() {
        return new TeamStats(this);
      }

      /// <summary>Field number for the "match_info_idxtxt" field.</summary>
      public const int MatchInfoIdxtxtFieldNumber = 1;
      private readonly static int MatchInfoIdxtxtDefaultValue = 0;

      private int matchInfoIdxtxt_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int MatchInfoIdxtxt {
        get { if ((_hasBits0 & 1) != 0) { return matchInfoIdxtxt_; } else { return MatchInfoIdxtxtDefaultValue; } }
        set {
          _hasBits0 |= 1;
          matchInfoIdxtxt_ = value;
        }
      }
      /// <summary>Gets whether the "match_info_idxtxt" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMatchInfoIdxtxt {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "match_info_idxtxt" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMatchInfoIdxtxt() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "match_info_txt" field.</summary>
      public const int MatchInfoTxtFieldNumber = 2;
      private readonly static string MatchInfoTxtDefaultValue = "";

      private string matchInfoTxt_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string MatchInfoTxt {
        get { return matchInfoTxt_ ?? MatchInfoTxtDefaultValue; }
        set {
          matchInfoTxt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "match_info_txt" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMatchInfoTxt {
        get { return matchInfoTxt_ != null; }
      }
      /// <summary>Clears the value of the "match_info_txt" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMatchInfoTxt() {
        matchInfoTxt_ = null;
      }

      /// <summary>Field number for the "match_info_teams" field.</summary>
      public const int MatchInfoTeamsFieldNumber = 3;
      private static readonly pb::FieldCodec<string> _repeated_matchInfoTeams_codec
          = pb::FieldCodec.ForString(26);
      private readonly pbc::RepeatedField<string> matchInfoTeams_ = new pbc::RepeatedField<string>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<string> MatchInfoTeams {
        get { return matchInfoTeams_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as TeamStats);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(TeamStats other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (MatchInfoIdxtxt != other.MatchInfoIdxtxt) return false;
        if (MatchInfoTxt != other.MatchInfoTxt) return false;
        if(!matchInfoTeams_.Equals(other.matchInfoTeams_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasMatchInfoIdxtxt) hash ^= MatchInfoIdxtxt.GetHashCode();
        if (HasMatchInfoTxt) hash ^= MatchInfoTxt.GetHashCode();
        hash ^= matchInfoTeams_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasMatchInfoIdxtxt) {
          output.WriteRawTag(8);
          output.WriteInt32(MatchInfoIdxtxt);
        }
        if (HasMatchInfoTxt) {
          output.WriteRawTag(18);
          output.WriteString(MatchInfoTxt);
        }
        matchInfoTeams_.WriteTo(output, _repeated_matchInfoTeams_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasMatchInfoIdxtxt) {
          output.WriteRawTag(8);
          output.WriteInt32(MatchInfoIdxtxt);
        }
        if (HasMatchInfoTxt) {
          output.WriteRawTag(18);
          output.WriteString(MatchInfoTxt);
        }
        matchInfoTeams_.WriteTo(ref output, _repeated_matchInfoTeams_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasMatchInfoIdxtxt) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchInfoIdxtxt);
        }
        if (HasMatchInfoTxt) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchInfoTxt);
        }
        size += matchInfoTeams_.CalculateSize(_repeated_matchInfoTeams_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(TeamStats other) {
        if (other == null) {
          return;
        }
        if (other.HasMatchInfoIdxtxt) {
          MatchInfoIdxtxt = other.MatchInfoIdxtxt;
        }
        if (other.HasMatchInfoTxt) {
          MatchInfoTxt = other.MatchInfoTxt;
        }
        matchInfoTeams_.Add(other.matchInfoTeams_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              MatchInfoIdxtxt = input.ReadInt32();
              break;
            }
            case 18: {
              MatchInfoTxt = input.ReadString();
              break;
            }
            case 26: {
              matchInfoTeams_.AddEntriesFrom(input, _repeated_matchInfoTeams_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              MatchInfoIdxtxt = input.ReadInt32();
              break;
            }
            case 18: {
              MatchInfoTxt = input.ReadString();
              break;
            }
            case 26: {
              matchInfoTeams_.AddEntriesFrom(ref input, _repeated_matchInfoTeams_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>(() => new CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve other) : this() {
    _hasBits0 = other._hasBits0;
    accountIds_ = other.accountIds_.Clone();
    gameType_ = other.gameType_;
    matchId_ = other.matchId_;
    serverVersion_ = other.serverVersion_;
    flags_ = other.flags_;
    rankings_ = other.rankings_.Clone();
    encryptionKey_ = other.encryptionKey_;
    encryptionKeyPub_ = other.encryptionKeyPub_;
    partyIds_ = other.partyIds_.Clone();
    whitelist_ = other.whitelist_.Clone();
    tvMasterSteamid_ = other.tvMasterSteamid_;
    tournamentEvent_ = other.tournamentEvent_ != null ? other.tournamentEvent_.Clone() : null;
    tournamentTeams_ = other.tournamentTeams_.Clone();
    tournamentCastersAccountIds_ = other.tournamentCastersAccountIds_.Clone();
    tvRelaySteamid_ = other.tvRelaySteamid_;
    preMatchData_ = other.preMatchData_ != null ? other.preMatchData_.Clone() : null;
    tvControl_ = other.tvControl_;
    opVarValues_ = other.opVarValues_.Clone();
    socacheControl_ = other.socacheControl_;
    teammateColors_ = other.teammateColors_.Clone();
    matchIdAdditional_ = other.matchIdAdditional_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(this);
  }

  /// <summary>Field number for the "account_ids" field.</summary>
  public const int AccountIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_accountIds_codec
      = pb::FieldCodec.ForUInt32(8);
  private readonly pbc::RepeatedField<uint> accountIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AccountIds {
    get { return accountIds_; }
  }

  /// <summary>Field number for the "game_type" field.</summary>
  public const int GameTypeFieldNumber = 2;
  private readonly static uint GameTypeDefaultValue = 0;

  private uint gameType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameType {
    get { if ((_hasBits0 & 1) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gameType_ = value;
    }
  }
  /// <summary>Gets whether the "game_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "game_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 3;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 2) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "server_version" field.</summary>
  public const int ServerVersionFieldNumber = 4;
  private readonly static uint ServerVersionDefaultValue = 0;

  private uint serverVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerVersion {
    get { if ((_hasBits0 & 4) != 0) { return serverVersion_; } else { return ServerVersionDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serverVersion_ = value;
    }
  }
  /// <summary>Gets whether the "server_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerVersion {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "server_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerVersion() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 18;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 256) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 256;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "rankings" field.</summary>
  public const int RankingsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::PlayerRankingInfo> _repeated_rankings_codec
      = pb::FieldCodec.ForMessage(42, global::PlayerRankingInfo.Parser);
  private readonly pbc::RepeatedField<global::PlayerRankingInfo> rankings_ = new pbc::RepeatedField<global::PlayerRankingInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PlayerRankingInfo> Rankings {
    get { return rankings_; }
  }

  /// <summary>Field number for the "encryption_key" field.</summary>
  public const int EncryptionKeyFieldNumber = 6;
  private readonly static ulong EncryptionKeyDefaultValue = 0UL;

  private ulong encryptionKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong EncryptionKey {
    get { if ((_hasBits0 & 8) != 0) { return encryptionKey_; } else { return EncryptionKeyDefaultValue; } }
    set {
      _hasBits0 |= 8;
      encryptionKey_ = value;
    }
  }
  /// <summary>Gets whether the "encryption_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEncryptionKey {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "encryption_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEncryptionKey() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "encryption_key_pub" field.</summary>
  public const int EncryptionKeyPubFieldNumber = 7;
  private readonly static ulong EncryptionKeyPubDefaultValue = 0UL;

  private ulong encryptionKeyPub_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong EncryptionKeyPub {
    get { if ((_hasBits0 & 16) != 0) { return encryptionKeyPub_; } else { return EncryptionKeyPubDefaultValue; } }
    set {
      _hasBits0 |= 16;
      encryptionKeyPub_ = value;
    }
  }
  /// <summary>Gets whether the "encryption_key_pub" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEncryptionKeyPub {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "encryption_key_pub" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEncryptionKeyPub() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "party_ids" field.</summary>
  public const int PartyIdsFieldNumber = 8;
  private static readonly pb::FieldCodec<uint> _repeated_partyIds_codec
      = pb::FieldCodec.ForUInt32(64);
  private readonly pbc::RepeatedField<uint> partyIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> PartyIds {
    get { return partyIds_; }
  }

  /// <summary>Field number for the "whitelist" field.</summary>
  public const int WhitelistFieldNumber = 9;
  private static readonly pb::FieldCodec<global::IpAddressMask> _repeated_whitelist_codec
      = pb::FieldCodec.ForMessage(74, global::IpAddressMask.Parser);
  private readonly pbc::RepeatedField<global::IpAddressMask> whitelist_ = new pbc::RepeatedField<global::IpAddressMask>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::IpAddressMask> Whitelist {
    get { return whitelist_; }
  }

  /// <summary>Field number for the "tv_master_steamid" field.</summary>
  public const int TvMasterSteamidFieldNumber = 10;
  private readonly static ulong TvMasterSteamidDefaultValue = 0UL;

  private ulong tvMasterSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TvMasterSteamid {
    get { if ((_hasBits0 & 32) != 0) { return tvMasterSteamid_; } else { return TvMasterSteamidDefaultValue; } }
    set {
      _hasBits0 |= 32;
      tvMasterSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "tv_master_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvMasterSteamid {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "tv_master_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvMasterSteamid() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "tournament_event" field.</summary>
  public const int TournamentEventFieldNumber = 11;
  private global::TournamentEvent tournamentEvent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::TournamentEvent TournamentEvent {
    get { return tournamentEvent_; }
    set {
      tournamentEvent_ = value;
    }
  }

  /// <summary>Field number for the "tournament_teams" field.</summary>
  public const int TournamentTeamsFieldNumber = 12;
  private static readonly pb::FieldCodec<global::TournamentTeam> _repeated_tournamentTeams_codec
      = pb::FieldCodec.ForMessage(98, global::TournamentTeam.Parser);
  private readonly pbc::RepeatedField<global::TournamentTeam> tournamentTeams_ = new pbc::RepeatedField<global::TournamentTeam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::TournamentTeam> TournamentTeams {
    get { return tournamentTeams_; }
  }

  /// <summary>Field number for the "tournament_casters_account_ids" field.</summary>
  public const int TournamentCastersAccountIdsFieldNumber = 13;
  private static readonly pb::FieldCodec<uint> _repeated_tournamentCastersAccountIds_codec
      = pb::FieldCodec.ForUInt32(104);
  private readonly pbc::RepeatedField<uint> tournamentCastersAccountIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> TournamentCastersAccountIds {
    get { return tournamentCastersAccountIds_; }
  }

  /// <summary>Field number for the "tv_relay_steamid" field.</summary>
  public const int TvRelaySteamidFieldNumber = 14;
  private readonly static ulong TvRelaySteamidDefaultValue = 0UL;

  private ulong tvRelaySteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TvRelaySteamid {
    get { if ((_hasBits0 & 64) != 0) { return tvRelaySteamid_; } else { return TvRelaySteamidDefaultValue; } }
    set {
      _hasBits0 |= 64;
      tvRelaySteamid_ = value;
    }
  }
  /// <summary>Gets whether the "tv_relay_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvRelaySteamid {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "tv_relay_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvRelaySteamid() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "pre_match_data" field.</summary>
  public const int PreMatchDataFieldNumber = 15;
  private global::CPreMatchInfoData preMatchData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CPreMatchInfoData PreMatchData {
    get { return preMatchData_; }
    set {
      preMatchData_ = value;
    }
  }

  /// <summary>Field number for the "tv_control" field.</summary>
  public const int TvControlFieldNumber = 17;
  private readonly static uint TvControlDefaultValue = 0;

  private uint tvControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvControl {
    get { if ((_hasBits0 & 128) != 0) { return tvControl_; } else { return TvControlDefaultValue; } }
    set {
      _hasBits0 |= 128;
      tvControl_ = value;
    }
  }
  /// <summary>Gets whether the "tv_control" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvControl {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "tv_control" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvControl() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "op_var_values" field.</summary>
  public const int OpVarValuesFieldNumber = 19;
  private static readonly pb::FieldCodec<global::OperationalVarValue> _repeated_opVarValues_codec
      = pb::FieldCodec.ForMessage(154, global::OperationalVarValue.Parser);
  private readonly pbc::RepeatedField<global::OperationalVarValue> opVarValues_ = new pbc::RepeatedField<global::OperationalVarValue>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::OperationalVarValue> OpVarValues {
    get { return opVarValues_; }
  }

  /// <summary>Field number for the "socache_control" field.</summary>
  public const int SocacheControlFieldNumber = 20;
  private readonly static uint SocacheControlDefaultValue = 0;

  private uint socacheControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SocacheControl {
    get { if ((_hasBits0 & 512) != 0) { return socacheControl_; } else { return SocacheControlDefaultValue; } }
    set {
      _hasBits0 |= 512;
      socacheControl_ = value;
    }
  }
  /// <summary>Gets whether the "socache_control" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSocacheControl {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "socache_control" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSocacheControl() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "teammate_colors" field.</summary>
  public const int TeammateColorsFieldNumber = 21;
  private static readonly pb::FieldCodec<int> _repeated_teammateColors_codec
      = pb::FieldCodec.ForInt32(168);
  private readonly pbc::RepeatedField<int> teammateColors_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> TeammateColors {
    get { return teammateColors_; }
  }

  /// <summary>Field number for the "match_id_additional" field.</summary>
  public const int MatchIdAdditionalFieldNumber = 22;
  private readonly static uint MatchIdAdditionalDefaultValue = 0;

  private uint matchIdAdditional_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MatchIdAdditional {
    get { if ((_hasBits0 & 1024) != 0) { return matchIdAdditional_; } else { return MatchIdAdditionalDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      matchIdAdditional_ = value;
    }
  }
  /// <summary>Gets whether the "match_id_additional" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchIdAdditional {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "match_id_additional" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchIdAdditional() {
    _hasBits0 &= ~1024;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!accountIds_.Equals(other.accountIds_)) return false;
    if (GameType != other.GameType) return false;
    if (MatchId != other.MatchId) return false;
    if (ServerVersion != other.ServerVersion) return false;
    if (Flags != other.Flags) return false;
    if(!rankings_.Equals(other.rankings_)) return false;
    if (EncryptionKey != other.EncryptionKey) return false;
    if (EncryptionKeyPub != other.EncryptionKeyPub) return false;
    if(!partyIds_.Equals(other.partyIds_)) return false;
    if(!whitelist_.Equals(other.whitelist_)) return false;
    if (TvMasterSteamid != other.TvMasterSteamid) return false;
    if (!object.Equals(TournamentEvent, other.TournamentEvent)) return false;
    if(!tournamentTeams_.Equals(other.tournamentTeams_)) return false;
    if(!tournamentCastersAccountIds_.Equals(other.tournamentCastersAccountIds_)) return false;
    if (TvRelaySteamid != other.TvRelaySteamid) return false;
    if (!object.Equals(PreMatchData, other.PreMatchData)) return false;
    if (TvControl != other.TvControl) return false;
    if(!opVarValues_.Equals(other.opVarValues_)) return false;
    if (SocacheControl != other.SocacheControl) return false;
    if(!teammateColors_.Equals(other.teammateColors_)) return false;
    if (MatchIdAdditional != other.MatchIdAdditional) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= accountIds_.GetHashCode();
    if (HasGameType) hash ^= GameType.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (HasServerVersion) hash ^= ServerVersion.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    hash ^= rankings_.GetHashCode();
    if (HasEncryptionKey) hash ^= EncryptionKey.GetHashCode();
    if (HasEncryptionKeyPub) hash ^= EncryptionKeyPub.GetHashCode();
    hash ^= partyIds_.GetHashCode();
    hash ^= whitelist_.GetHashCode();
    if (HasTvMasterSteamid) hash ^= TvMasterSteamid.GetHashCode();
    if (tournamentEvent_ != null) hash ^= TournamentEvent.GetHashCode();
    hash ^= tournamentTeams_.GetHashCode();
    hash ^= tournamentCastersAccountIds_.GetHashCode();
    if (HasTvRelaySteamid) hash ^= TvRelaySteamid.GetHashCode();
    if (preMatchData_ != null) hash ^= PreMatchData.GetHashCode();
    if (HasTvControl) hash ^= TvControl.GetHashCode();
    hash ^= opVarValues_.GetHashCode();
    if (HasSocacheControl) hash ^= SocacheControl.GetHashCode();
    hash ^= teammateColors_.GetHashCode();
    if (HasMatchIdAdditional) hash ^= MatchIdAdditional.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    accountIds_.WriteTo(output, _repeated_accountIds_codec);
    if (HasGameType) {
      output.WriteRawTag(16);
      output.WriteUInt32(GameType);
    }
    if (HasMatchId) {
      output.WriteRawTag(24);
      output.WriteUInt64(MatchId);
    }
    if (HasServerVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ServerVersion);
    }
    rankings_.WriteTo(output, _repeated_rankings_codec);
    if (HasEncryptionKey) {
      output.WriteRawTag(48);
      output.WriteUInt64(EncryptionKey);
    }
    if (HasEncryptionKeyPub) {
      output.WriteRawTag(56);
      output.WriteUInt64(EncryptionKeyPub);
    }
    partyIds_.WriteTo(output, _repeated_partyIds_codec);
    whitelist_.WriteTo(output, _repeated_whitelist_codec);
    if (HasTvMasterSteamid) {
      output.WriteRawTag(80);
      output.WriteUInt64(TvMasterSteamid);
    }
    if (tournamentEvent_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(TournamentEvent);
    }
    tournamentTeams_.WriteTo(output, _repeated_tournamentTeams_codec);
    tournamentCastersAccountIds_.WriteTo(output, _repeated_tournamentCastersAccountIds_codec);
    if (HasTvRelaySteamid) {
      output.WriteRawTag(112);
      output.WriteUInt64(TvRelaySteamid);
    }
    if (preMatchData_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(PreMatchData);
    }
    if (HasTvControl) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(TvControl);
    }
    if (HasFlags) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Flags);
    }
    opVarValues_.WriteTo(output, _repeated_opVarValues_codec);
    if (HasSocacheControl) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(SocacheControl);
    }
    teammateColors_.WriteTo(output, _repeated_teammateColors_codec);
    if (HasMatchIdAdditional) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(MatchIdAdditional);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    accountIds_.WriteTo(ref output, _repeated_accountIds_codec);
    if (HasGameType) {
      output.WriteRawTag(16);
      output.WriteUInt32(GameType);
    }
    if (HasMatchId) {
      output.WriteRawTag(24);
      output.WriteUInt64(MatchId);
    }
    if (HasServerVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ServerVersion);
    }
    rankings_.WriteTo(ref output, _repeated_rankings_codec);
    if (HasEncryptionKey) {
      output.WriteRawTag(48);
      output.WriteUInt64(EncryptionKey);
    }
    if (HasEncryptionKeyPub) {
      output.WriteRawTag(56);
      output.WriteUInt64(EncryptionKeyPub);
    }
    partyIds_.WriteTo(ref output, _repeated_partyIds_codec);
    whitelist_.WriteTo(ref output, _repeated_whitelist_codec);
    if (HasTvMasterSteamid) {
      output.WriteRawTag(80);
      output.WriteUInt64(TvMasterSteamid);
    }
    if (tournamentEvent_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(TournamentEvent);
    }
    tournamentTeams_.WriteTo(ref output, _repeated_tournamentTeams_codec);
    tournamentCastersAccountIds_.WriteTo(ref output, _repeated_tournamentCastersAccountIds_codec);
    if (HasTvRelaySteamid) {
      output.WriteRawTag(112);
      output.WriteUInt64(TvRelaySteamid);
    }
    if (preMatchData_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(PreMatchData);
    }
    if (HasTvControl) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(TvControl);
    }
    if (HasFlags) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Flags);
    }
    opVarValues_.WriteTo(ref output, _repeated_opVarValues_codec);
    if (HasSocacheControl) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(SocacheControl);
    }
    teammateColors_.WriteTo(ref output, _repeated_teammateColors_codec);
    if (HasMatchIdAdditional) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(MatchIdAdditional);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += accountIds_.CalculateSize(_repeated_accountIds_codec);
    if (HasGameType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (HasServerVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerVersion);
    }
    if (HasFlags) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    size += rankings_.CalculateSize(_repeated_rankings_codec);
    if (HasEncryptionKey) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EncryptionKey);
    }
    if (HasEncryptionKeyPub) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EncryptionKeyPub);
    }
    size += partyIds_.CalculateSize(_repeated_partyIds_codec);
    size += whitelist_.CalculateSize(_repeated_whitelist_codec);
    if (HasTvMasterSteamid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TvMasterSteamid);
    }
    if (tournamentEvent_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TournamentEvent);
    }
    size += tournamentTeams_.CalculateSize(_repeated_tournamentTeams_codec);
    size += tournamentCastersAccountIds_.CalculateSize(_repeated_tournamentCastersAccountIds_codec);
    if (HasTvRelaySteamid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TvRelaySteamid);
    }
    if (preMatchData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreMatchData);
    }
    if (HasTvControl) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TvControl);
    }
    size += opVarValues_.CalculateSize(_repeated_opVarValues_codec);
    if (HasSocacheControl) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SocacheControl);
    }
    size += teammateColors_.CalculateSize(_repeated_teammateColors_codec);
    if (HasMatchIdAdditional) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MatchIdAdditional);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve other) {
    if (other == null) {
      return;
    }
    accountIds_.Add(other.accountIds_);
    if (other.HasGameType) {
      GameType = other.GameType;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    if (other.HasServerVersion) {
      ServerVersion = other.ServerVersion;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    rankings_.Add(other.rankings_);
    if (other.HasEncryptionKey) {
      EncryptionKey = other.EncryptionKey;
    }
    if (other.HasEncryptionKeyPub) {
      EncryptionKeyPub = other.EncryptionKeyPub;
    }
    partyIds_.Add(other.partyIds_);
    whitelist_.Add(other.whitelist_);
    if (other.HasTvMasterSteamid) {
      TvMasterSteamid = other.TvMasterSteamid;
    }
    if (other.tournamentEvent_ != null) {
      if (tournamentEvent_ == null) {
        TournamentEvent = new global::TournamentEvent();
      }
      TournamentEvent.MergeFrom(other.TournamentEvent);
    }
    tournamentTeams_.Add(other.tournamentTeams_);
    tournamentCastersAccountIds_.Add(other.tournamentCastersAccountIds_);
    if (other.HasTvRelaySteamid) {
      TvRelaySteamid = other.TvRelaySteamid;
    }
    if (other.preMatchData_ != null) {
      if (preMatchData_ == null) {
        PreMatchData = new global::CPreMatchInfoData();
      }
      PreMatchData.MergeFrom(other.PreMatchData);
    }
    if (other.HasTvControl) {
      TvControl = other.TvControl;
    }
    opVarValues_.Add(other.opVarValues_);
    if (other.HasSocacheControl) {
      SocacheControl = other.SocacheControl;
    }
    teammateColors_.Add(other.teammateColors_);
    if (other.HasMatchIdAdditional) {
      MatchIdAdditional = other.MatchIdAdditional;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          accountIds_.AddEntriesFrom(input, _repeated_accountIds_codec);
          break;
        }
        case 16: {
          GameType = input.ReadUInt32();
          break;
        }
        case 24: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 32: {
          ServerVersion = input.ReadUInt32();
          break;
        }
        case 42: {
          rankings_.AddEntriesFrom(input, _repeated_rankings_codec);
          break;
        }
        case 48: {
          EncryptionKey = input.ReadUInt64();
          break;
        }
        case 56: {
          EncryptionKeyPub = input.ReadUInt64();
          break;
        }
        case 66:
        case 64: {
          partyIds_.AddEntriesFrom(input, _repeated_partyIds_codec);
          break;
        }
        case 74: {
          whitelist_.AddEntriesFrom(input, _repeated_whitelist_codec);
          break;
        }
        case 80: {
          TvMasterSteamid = input.ReadUInt64();
          break;
        }
        case 90: {
          if (tournamentEvent_ == null) {
            TournamentEvent = new global::TournamentEvent();
          }
          input.ReadMessage(TournamentEvent);
          break;
        }
        case 98: {
          tournamentTeams_.AddEntriesFrom(input, _repeated_tournamentTeams_codec);
          break;
        }
        case 106:
        case 104: {
          tournamentCastersAccountIds_.AddEntriesFrom(input, _repeated_tournamentCastersAccountIds_codec);
          break;
        }
        case 112: {
          TvRelaySteamid = input.ReadUInt64();
          break;
        }
        case 122: {
          if (preMatchData_ == null) {
            PreMatchData = new global::CPreMatchInfoData();
          }
          input.ReadMessage(PreMatchData);
          break;
        }
        case 136: {
          TvControl = input.ReadUInt32();
          break;
        }
        case 144: {
          Flags = input.ReadUInt32();
          break;
        }
        case 154: {
          opVarValues_.AddEntriesFrom(input, _repeated_opVarValues_codec);
          break;
        }
        case 160: {
          SocacheControl = input.ReadUInt32();
          break;
        }
        case 170:
        case 168: {
          teammateColors_.AddEntriesFrom(input, _repeated_teammateColors_codec);
          break;
        }
        case 176: {
          MatchIdAdditional = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          accountIds_.AddEntriesFrom(ref input, _repeated_accountIds_codec);
          break;
        }
        case 16: {
          GameType = input.ReadUInt32();
          break;
        }
        case 24: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 32: {
          ServerVersion = input.ReadUInt32();
          break;
        }
        case 42: {
          rankings_.AddEntriesFrom(ref input, _repeated_rankings_codec);
          break;
        }
        case 48: {
          EncryptionKey = input.ReadUInt64();
          break;
        }
        case 56: {
          EncryptionKeyPub = input.ReadUInt64();
          break;
        }
        case 66:
        case 64: {
          partyIds_.AddEntriesFrom(ref input, _repeated_partyIds_codec);
          break;
        }
        case 74: {
          whitelist_.AddEntriesFrom(ref input, _repeated_whitelist_codec);
          break;
        }
        case 80: {
          TvMasterSteamid = input.ReadUInt64();
          break;
        }
        case 90: {
          if (tournamentEvent_ == null) {
            TournamentEvent = new global::TournamentEvent();
          }
          input.ReadMessage(TournamentEvent);
          break;
        }
        case 98: {
          tournamentTeams_.AddEntriesFrom(ref input, _repeated_tournamentTeams_codec);
          break;
        }
        case 106:
        case 104: {
          tournamentCastersAccountIds_.AddEntriesFrom(ref input, _repeated_tournamentCastersAccountIds_codec);
          break;
        }
        case 112: {
          TvRelaySteamid = input.ReadUInt64();
          break;
        }
        case 122: {
          if (preMatchData_ == null) {
            PreMatchData = new global::CPreMatchInfoData();
          }
          input.ReadMessage(PreMatchData);
          break;
        }
        case 136: {
          TvControl = input.ReadUInt32();
          break;
        }
        case 144: {
          Flags = input.ReadUInt32();
          break;
        }
        case 154: {
          opVarValues_.AddEntriesFrom(ref input, _repeated_opVarValues_codec);
          break;
        }
        case 160: {
          SocacheControl = input.ReadUInt32();
          break;
        }
        case 170:
        case 168: {
          teammateColors_.AddEntriesFrom(ref input, _repeated_teammateColors_codec);
          break;
        }
        case 176: {
          MatchIdAdditional = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingServerReservationResponse : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse>(() => new CMsgGCCStrike15_v2_MatchmakingServerReservationResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingServerReservationResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingServerReservationResponse(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse other) : this() {
    _hasBits0 = other._hasBits0;
    reservationid_ = other.reservationid_;
    reservation_ = other.reservation_ != null ? other.reservation_.Clone() : null;
    map_ = other.map_;
    gcReservationSent_ = other.gcReservationSent_;
    serverVersion_ = other.serverVersion_;
    tvInfo_ = other.tvInfo_ != null ? other.tvInfo_.Clone() : null;
    rewardPlayerAccounts_ = other.rewardPlayerAccounts_.Clone();
    idlePlayerAccounts_ = other.idlePlayerAccounts_.Clone();
    rewardItemAttrDefIdx_ = other.rewardItemAttrDefIdx_;
    rewardItemAttrValue_ = other.rewardItemAttrValue_;
    rewardItemAttrRewardIdx_ = other.rewardItemAttrRewardIdx_;
    rewardDropList_ = other.rewardDropList_;
    tournamentTag_ = other.tournamentTag_;
    legacySteamdatagramPort_ = other.legacySteamdatagramPort_;
    steamdatagramRouting_ = other.steamdatagramRouting_;
    testToken_ = other.testToken_;
    flags_ = other.flags_;
    systemLoad_ = other.systemLoad_;
    cpusOnline_ = other.cpusOnline_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingServerReservationResponse Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingServerReservationResponse(this);
  }

  /// <summary>Field number for the "reservationid" field.</summary>
  public const int ReservationidFieldNumber = 1;
  private readonly static ulong ReservationidDefaultValue = 0UL;

  private ulong reservationid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Reservationid {
    get { if ((_hasBits0 & 1) != 0) { return reservationid_; } else { return ReservationidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      reservationid_ = value;
    }
  }
  /// <summary>Gets whether the "reservationid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservationid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "reservationid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservationid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "reservation" field.</summary>
  public const int ReservationFieldNumber = 2;
  private global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve Reservation {
    get { return reservation_; }
    set {
      reservation_ = value;
    }
  }

  /// <summary>Field number for the "map" field.</summary>
  public const int MapFieldNumber = 3;
  private readonly static string MapDefaultValue = "";

  private string map_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Map {
    get { return map_ ?? MapDefaultValue; }
    set {
      map_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "map" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMap {
    get { return map_ != null; }
  }
  /// <summary>Clears the value of the "map" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMap() {
    map_ = null;
  }

  /// <summary>Field number for the "gc_reservation_sent" field.</summary>
  public const int GcReservationSentFieldNumber = 4;
  private readonly static ulong GcReservationSentDefaultValue = 0UL;

  private ulong gcReservationSent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong GcReservationSent {
    get { if ((_hasBits0 & 2) != 0) { return gcReservationSent_; } else { return GcReservationSentDefaultValue; } }
    set {
      _hasBits0 |= 2;
      gcReservationSent_ = value;
    }
  }
  /// <summary>Gets whether the "gc_reservation_sent" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGcReservationSent {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "gc_reservation_sent" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGcReservationSent() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "server_version" field.</summary>
  public const int ServerVersionFieldNumber = 5;
  private readonly static uint ServerVersionDefaultValue = 0;

  private uint serverVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerVersion {
    get { if ((_hasBits0 & 4) != 0) { return serverVersion_; } else { return ServerVersionDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serverVersion_ = value;
    }
  }
  /// <summary>Gets whether the "server_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerVersion {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "server_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerVersion() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "tv_info" field.</summary>
  public const int TvInfoFieldNumber = 6;
  private global::ServerHltvInfo tvInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ServerHltvInfo TvInfo {
    get { return tvInfo_; }
    set {
      tvInfo_ = value;
    }
  }

  /// <summary>Field number for the "reward_player_accounts" field.</summary>
  public const int RewardPlayerAccountsFieldNumber = 7;
  private static readonly pb::FieldCodec<uint> _repeated_rewardPlayerAccounts_codec
      = pb::FieldCodec.ForUInt32(56);
  private readonly pbc::RepeatedField<uint> rewardPlayerAccounts_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> RewardPlayerAccounts {
    get { return rewardPlayerAccounts_; }
  }

  /// <summary>Field number for the "idle_player_accounts" field.</summary>
  public const int IdlePlayerAccountsFieldNumber = 8;
  private static readonly pb::FieldCodec<uint> _repeated_idlePlayerAccounts_codec
      = pb::FieldCodec.ForUInt32(64);
  private readonly pbc::RepeatedField<uint> idlePlayerAccounts_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> IdlePlayerAccounts {
    get { return idlePlayerAccounts_; }
  }

  /// <summary>Field number for the "reward_item_attr_def_idx" field.</summary>
  public const int RewardItemAttrDefIdxFieldNumber = 9;
  private readonly static uint RewardItemAttrDefIdxDefaultValue = 0;

  private uint rewardItemAttrDefIdx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RewardItemAttrDefIdx {
    get { if ((_hasBits0 & 8) != 0) { return rewardItemAttrDefIdx_; } else { return RewardItemAttrDefIdxDefaultValue; } }
    set {
      _hasBits0 |= 8;
      rewardItemAttrDefIdx_ = value;
    }
  }
  /// <summary>Gets whether the "reward_item_attr_def_idx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRewardItemAttrDefIdx {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "reward_item_attr_def_idx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRewardItemAttrDefIdx() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "reward_item_attr_value" field.</summary>
  public const int RewardItemAttrValueFieldNumber = 10;
  private readonly static uint RewardItemAttrValueDefaultValue = 0;

  private uint rewardItemAttrValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RewardItemAttrValue {
    get { if ((_hasBits0 & 16) != 0) { return rewardItemAttrValue_; } else { return RewardItemAttrValueDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rewardItemAttrValue_ = value;
    }
  }
  /// <summary>Gets whether the "reward_item_attr_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRewardItemAttrValue {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "reward_item_attr_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRewardItemAttrValue() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "reward_item_attr_reward_idx" field.</summary>
  public const int RewardItemAttrRewardIdxFieldNumber = 11;
  private readonly static uint RewardItemAttrRewardIdxDefaultValue = 0;

  private uint rewardItemAttrRewardIdx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RewardItemAttrRewardIdx {
    get { if ((_hasBits0 & 32) != 0) { return rewardItemAttrRewardIdx_; } else { return RewardItemAttrRewardIdxDefaultValue; } }
    set {
      _hasBits0 |= 32;
      rewardItemAttrRewardIdx_ = value;
    }
  }
  /// <summary>Gets whether the "reward_item_attr_reward_idx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRewardItemAttrRewardIdx {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "reward_item_attr_reward_idx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRewardItemAttrRewardIdx() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "reward_drop_list" field.</summary>
  public const int RewardDropListFieldNumber = 12;
  private readonly static uint RewardDropListDefaultValue = 0;

  private uint rewardDropList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RewardDropList {
    get { if ((_hasBits0 & 64) != 0) { return rewardDropList_; } else { return RewardDropListDefaultValue; } }
    set {
      _hasBits0 |= 64;
      rewardDropList_ = value;
    }
  }
  /// <summary>Gets whether the "reward_drop_list" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRewardDropList {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "reward_drop_list" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRewardDropList() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "tournament_tag" field.</summary>
  public const int TournamentTagFieldNumber = 13;
  private readonly static string TournamentTagDefaultValue = "";

  private string tournamentTag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TournamentTag {
    get { return tournamentTag_ ?? TournamentTagDefaultValue; }
    set {
      tournamentTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "tournament_tag" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTournamentTag {
    get { return tournamentTag_ != null; }
  }
  /// <summary>Clears the value of the "tournament_tag" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTournamentTag() {
    tournamentTag_ = null;
  }

  /// <summary>Field number for the "legacy_steamdatagram_port" field.</summary>
  public const int LegacySteamdatagramPortFieldNumber = 14;
  private readonly static uint LegacySteamdatagramPortDefaultValue = 0;

  private uint legacySteamdatagramPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LegacySteamdatagramPort {
    get { if ((_hasBits0 & 128) != 0) { return legacySteamdatagramPort_; } else { return LegacySteamdatagramPortDefaultValue; } }
    set {
      _hasBits0 |= 128;
      legacySteamdatagramPort_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_steamdatagram_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacySteamdatagramPort {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "legacy_steamdatagram_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacySteamdatagramPort() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "steamdatagram_routing" field.</summary>
  public const int SteamdatagramRoutingFieldNumber = 17;
  private readonly static uint SteamdatagramRoutingDefaultValue = 0;

  private uint steamdatagramRouting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SteamdatagramRouting {
    get { if ((_hasBits0 & 1024) != 0) { return steamdatagramRouting_; } else { return SteamdatagramRoutingDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      steamdatagramRouting_ = value;
    }
  }
  /// <summary>Gets whether the "steamdatagram_routing" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamdatagramRouting {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "steamdatagram_routing" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamdatagramRouting() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "test_token" field.</summary>
  public const int TestTokenFieldNumber = 15;
  private readonly static uint TestTokenDefaultValue = 0;

  private uint testToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TestToken {
    get { if ((_hasBits0 & 256) != 0) { return testToken_; } else { return TestTokenDefaultValue; } }
    set {
      _hasBits0 |= 256;
      testToken_ = value;
    }
  }
  /// <summary>Gets whether the "test_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTestToken {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "test_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTestToken() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 16;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 512) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 512;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "system_load" field.</summary>
  public const int SystemLoadFieldNumber = 18;
  private readonly static uint SystemLoadDefaultValue = 0;

  private uint systemLoad_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SystemLoad {
    get { if ((_hasBits0 & 2048) != 0) { return systemLoad_; } else { return SystemLoadDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      systemLoad_ = value;
    }
  }
  /// <summary>Gets whether the "system_load" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSystemLoad {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "system_load" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSystemLoad() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "cpus_online" field.</summary>
  public const int CpusOnlineFieldNumber = 19;
  private readonly static uint CpusOnlineDefaultValue = 0;

  private uint cpusOnline_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CpusOnline {
    get { if ((_hasBits0 & 4096) != 0) { return cpusOnline_; } else { return CpusOnlineDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      cpusOnline_ = value;
    }
  }
  /// <summary>Gets whether the "cpus_online" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCpusOnline {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "cpus_online" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCpusOnline() {
    _hasBits0 &= ~4096;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingServerReservationResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Reservationid != other.Reservationid) return false;
    if (!object.Equals(Reservation, other.Reservation)) return false;
    if (Map != other.Map) return false;
    if (GcReservationSent != other.GcReservationSent) return false;
    if (ServerVersion != other.ServerVersion) return false;
    if (!object.Equals(TvInfo, other.TvInfo)) return false;
    if(!rewardPlayerAccounts_.Equals(other.rewardPlayerAccounts_)) return false;
    if(!idlePlayerAccounts_.Equals(other.idlePlayerAccounts_)) return false;
    if (RewardItemAttrDefIdx != other.RewardItemAttrDefIdx) return false;
    if (RewardItemAttrValue != other.RewardItemAttrValue) return false;
    if (RewardItemAttrRewardIdx != other.RewardItemAttrRewardIdx) return false;
    if (RewardDropList != other.RewardDropList) return false;
    if (TournamentTag != other.TournamentTag) return false;
    if (LegacySteamdatagramPort != other.LegacySteamdatagramPort) return false;
    if (SteamdatagramRouting != other.SteamdatagramRouting) return false;
    if (TestToken != other.TestToken) return false;
    if (Flags != other.Flags) return false;
    if (SystemLoad != other.SystemLoad) return false;
    if (CpusOnline != other.CpusOnline) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasReservationid) hash ^= Reservationid.GetHashCode();
    if (reservation_ != null) hash ^= Reservation.GetHashCode();
    if (HasMap) hash ^= Map.GetHashCode();
    if (HasGcReservationSent) hash ^= GcReservationSent.GetHashCode();
    if (HasServerVersion) hash ^= ServerVersion.GetHashCode();
    if (tvInfo_ != null) hash ^= TvInfo.GetHashCode();
    hash ^= rewardPlayerAccounts_.GetHashCode();
    hash ^= idlePlayerAccounts_.GetHashCode();
    if (HasRewardItemAttrDefIdx) hash ^= RewardItemAttrDefIdx.GetHashCode();
    if (HasRewardItemAttrValue) hash ^= RewardItemAttrValue.GetHashCode();
    if (HasRewardItemAttrRewardIdx) hash ^= RewardItemAttrRewardIdx.GetHashCode();
    if (HasRewardDropList) hash ^= RewardDropList.GetHashCode();
    if (HasTournamentTag) hash ^= TournamentTag.GetHashCode();
    if (HasLegacySteamdatagramPort) hash ^= LegacySteamdatagramPort.GetHashCode();
    if (HasSteamdatagramRouting) hash ^= SteamdatagramRouting.GetHashCode();
    if (HasTestToken) hash ^= TestToken.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (HasSystemLoad) hash ^= SystemLoad.GetHashCode();
    if (HasCpusOnline) hash ^= CpusOnline.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasReservationid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Reservationid);
    }
    if (reservation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Reservation);
    }
    if (HasMap) {
      output.WriteRawTag(26);
      output.WriteString(Map);
    }
    if (HasGcReservationSent) {
      output.WriteRawTag(32);
      output.WriteUInt64(GcReservationSent);
    }
    if (HasServerVersion) {
      output.WriteRawTag(40);
      output.WriteUInt32(ServerVersion);
    }
    if (tvInfo_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(TvInfo);
    }
    rewardPlayerAccounts_.WriteTo(output, _repeated_rewardPlayerAccounts_codec);
    idlePlayerAccounts_.WriteTo(output, _repeated_idlePlayerAccounts_codec);
    if (HasRewardItemAttrDefIdx) {
      output.WriteRawTag(72);
      output.WriteUInt32(RewardItemAttrDefIdx);
    }
    if (HasRewardItemAttrValue) {
      output.WriteRawTag(80);
      output.WriteUInt32(RewardItemAttrValue);
    }
    if (HasRewardItemAttrRewardIdx) {
      output.WriteRawTag(88);
      output.WriteUInt32(RewardItemAttrRewardIdx);
    }
    if (HasRewardDropList) {
      output.WriteRawTag(96);
      output.WriteUInt32(RewardDropList);
    }
    if (HasTournamentTag) {
      output.WriteRawTag(106);
      output.WriteString(TournamentTag);
    }
    if (HasLegacySteamdatagramPort) {
      output.WriteRawTag(112);
      output.WriteUInt32(LegacySteamdatagramPort);
    }
    if (HasTestToken) {
      output.WriteRawTag(125);
      output.WriteFixed32(TestToken);
    }
    if (HasFlags) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Flags);
    }
    if (HasSteamdatagramRouting) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(SteamdatagramRouting);
    }
    if (HasSystemLoad) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(SystemLoad);
    }
    if (HasCpusOnline) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(CpusOnline);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasReservationid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Reservationid);
    }
    if (reservation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Reservation);
    }
    if (HasMap) {
      output.WriteRawTag(26);
      output.WriteString(Map);
    }
    if (HasGcReservationSent) {
      output.WriteRawTag(32);
      output.WriteUInt64(GcReservationSent);
    }
    if (HasServerVersion) {
      output.WriteRawTag(40);
      output.WriteUInt32(ServerVersion);
    }
    if (tvInfo_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(TvInfo);
    }
    rewardPlayerAccounts_.WriteTo(ref output, _repeated_rewardPlayerAccounts_codec);
    idlePlayerAccounts_.WriteTo(ref output, _repeated_idlePlayerAccounts_codec);
    if (HasRewardItemAttrDefIdx) {
      output.WriteRawTag(72);
      output.WriteUInt32(RewardItemAttrDefIdx);
    }
    if (HasRewardItemAttrValue) {
      output.WriteRawTag(80);
      output.WriteUInt32(RewardItemAttrValue);
    }
    if (HasRewardItemAttrRewardIdx) {
      output.WriteRawTag(88);
      output.WriteUInt32(RewardItemAttrRewardIdx);
    }
    if (HasRewardDropList) {
      output.WriteRawTag(96);
      output.WriteUInt32(RewardDropList);
    }
    if (HasTournamentTag) {
      output.WriteRawTag(106);
      output.WriteString(TournamentTag);
    }
    if (HasLegacySteamdatagramPort) {
      output.WriteRawTag(112);
      output.WriteUInt32(LegacySteamdatagramPort);
    }
    if (HasTestToken) {
      output.WriteRawTag(125);
      output.WriteFixed32(TestToken);
    }
    if (HasFlags) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Flags);
    }
    if (HasSteamdatagramRouting) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(SteamdatagramRouting);
    }
    if (HasSystemLoad) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(SystemLoad);
    }
    if (HasCpusOnline) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(CpusOnline);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasReservationid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Reservationid);
    }
    if (reservation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
    }
    if (HasMap) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Map);
    }
    if (HasGcReservationSent) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GcReservationSent);
    }
    if (HasServerVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerVersion);
    }
    if (tvInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TvInfo);
    }
    size += rewardPlayerAccounts_.CalculateSize(_repeated_rewardPlayerAccounts_codec);
    size += idlePlayerAccounts_.CalculateSize(_repeated_idlePlayerAccounts_codec);
    if (HasRewardItemAttrDefIdx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardItemAttrDefIdx);
    }
    if (HasRewardItemAttrValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardItemAttrValue);
    }
    if (HasRewardItemAttrRewardIdx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardItemAttrRewardIdx);
    }
    if (HasRewardDropList) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardDropList);
    }
    if (HasTournamentTag) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TournamentTag);
    }
    if (HasLegacySteamdatagramPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LegacySteamdatagramPort);
    }
    if (HasSteamdatagramRouting) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SteamdatagramRouting);
    }
    if (HasTestToken) {
      size += 1 + 4;
    }
    if (HasFlags) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (HasSystemLoad) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SystemLoad);
    }
    if (HasCpusOnline) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CpusOnline);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingServerReservationResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasReservationid) {
      Reservationid = other.Reservationid;
    }
    if (other.reservation_ != null) {
      if (reservation_ == null) {
        Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
      }
      Reservation.MergeFrom(other.Reservation);
    }
    if (other.HasMap) {
      Map = other.Map;
    }
    if (other.HasGcReservationSent) {
      GcReservationSent = other.GcReservationSent;
    }
    if (other.HasServerVersion) {
      ServerVersion = other.ServerVersion;
    }
    if (other.tvInfo_ != null) {
      if (tvInfo_ == null) {
        TvInfo = new global::ServerHltvInfo();
      }
      TvInfo.MergeFrom(other.TvInfo);
    }
    rewardPlayerAccounts_.Add(other.rewardPlayerAccounts_);
    idlePlayerAccounts_.Add(other.idlePlayerAccounts_);
    if (other.HasRewardItemAttrDefIdx) {
      RewardItemAttrDefIdx = other.RewardItemAttrDefIdx;
    }
    if (other.HasRewardItemAttrValue) {
      RewardItemAttrValue = other.RewardItemAttrValue;
    }
    if (other.HasRewardItemAttrRewardIdx) {
      RewardItemAttrRewardIdx = other.RewardItemAttrRewardIdx;
    }
    if (other.HasRewardDropList) {
      RewardDropList = other.RewardDropList;
    }
    if (other.HasTournamentTag) {
      TournamentTag = other.TournamentTag;
    }
    if (other.HasLegacySteamdatagramPort) {
      LegacySteamdatagramPort = other.LegacySteamdatagramPort;
    }
    if (other.HasSteamdatagramRouting) {
      SteamdatagramRouting = other.SteamdatagramRouting;
    }
    if (other.HasTestToken) {
      TestToken = other.TestToken;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    if (other.HasSystemLoad) {
      SystemLoad = other.SystemLoad;
    }
    if (other.HasCpusOnline) {
      CpusOnline = other.CpusOnline;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Reservationid = input.ReadUInt64();
          break;
        }
        case 18: {
          if (reservation_ == null) {
            Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
          }
          input.ReadMessage(Reservation);
          break;
        }
        case 26: {
          Map = input.ReadString();
          break;
        }
        case 32: {
          GcReservationSent = input.ReadUInt64();
          break;
        }
        case 40: {
          ServerVersion = input.ReadUInt32();
          break;
        }
        case 50: {
          if (tvInfo_ == null) {
            TvInfo = new global::ServerHltvInfo();
          }
          input.ReadMessage(TvInfo);
          break;
        }
        case 58:
        case 56: {
          rewardPlayerAccounts_.AddEntriesFrom(input, _repeated_rewardPlayerAccounts_codec);
          break;
        }
        case 66:
        case 64: {
          idlePlayerAccounts_.AddEntriesFrom(input, _repeated_idlePlayerAccounts_codec);
          break;
        }
        case 72: {
          RewardItemAttrDefIdx = input.ReadUInt32();
          break;
        }
        case 80: {
          RewardItemAttrValue = input.ReadUInt32();
          break;
        }
        case 88: {
          RewardItemAttrRewardIdx = input.ReadUInt32();
          break;
        }
        case 96: {
          RewardDropList = input.ReadUInt32();
          break;
        }
        case 106: {
          TournamentTag = input.ReadString();
          break;
        }
        case 112: {
          LegacySteamdatagramPort = input.ReadUInt32();
          break;
        }
        case 125: {
          TestToken = input.ReadFixed32();
          break;
        }
        case 128: {
          Flags = input.ReadUInt32();
          break;
        }
        case 136: {
          SteamdatagramRouting = input.ReadUInt32();
          break;
        }
        case 144: {
          SystemLoad = input.ReadUInt32();
          break;
        }
        case 152: {
          CpusOnline = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Reservationid = input.ReadUInt64();
          break;
        }
        case 18: {
          if (reservation_ == null) {
            Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
          }
          input.ReadMessage(Reservation);
          break;
        }
        case 26: {
          Map = input.ReadString();
          break;
        }
        case 32: {
          GcReservationSent = input.ReadUInt64();
          break;
        }
        case 40: {
          ServerVersion = input.ReadUInt32();
          break;
        }
        case 50: {
          if (tvInfo_ == null) {
            TvInfo = new global::ServerHltvInfo();
          }
          input.ReadMessage(TvInfo);
          break;
        }
        case 58:
        case 56: {
          rewardPlayerAccounts_.AddEntriesFrom(ref input, _repeated_rewardPlayerAccounts_codec);
          break;
        }
        case 66:
        case 64: {
          idlePlayerAccounts_.AddEntriesFrom(ref input, _repeated_idlePlayerAccounts_codec);
          break;
        }
        case 72: {
          RewardItemAttrDefIdx = input.ReadUInt32();
          break;
        }
        case 80: {
          RewardItemAttrValue = input.ReadUInt32();
          break;
        }
        case 88: {
          RewardItemAttrRewardIdx = input.ReadUInt32();
          break;
        }
        case 96: {
          RewardDropList = input.ReadUInt32();
          break;
        }
        case 106: {
          TournamentTag = input.ReadString();
          break;
        }
        case 112: {
          LegacySteamdatagramPort = input.ReadUInt32();
          break;
        }
        case 125: {
          TestToken = input.ReadFixed32();
          break;
        }
        case 128: {
          Flags = input.ReadUInt32();
          break;
        }
        case 136: {
          SteamdatagramRouting = input.ReadUInt32();
          break;
        }
        case 144: {
          SystemLoad = input.ReadUInt32();
          break;
        }
        case 152: {
          CpusOnline = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve>(() => new CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve other) : this() {
    _hasBits0 = other._hasBits0;
    serverid_ = other.serverid_;
    directUdpIp_ = other.directUdpIp_;
    directUdpPort_ = other.directUdpPort_;
    reservationid_ = other.reservationid_;
    reservation_ = other.reservation_ != null ? other.reservation_.Clone() : null;
    map_ = other.map_;
    serverAddress_ = other.serverAddress_;
    gsPing_ = other.gsPing_ != null ? other.gsPing_.Clone() : null;
    gsLocationId_ = other.gsLocationId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve(this);
  }

  /// <summary>Field number for the "serverid" field.</summary>
  public const int ServeridFieldNumber = 1;
  private readonly static ulong ServeridDefaultValue = 0UL;

  private ulong serverid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Serverid {
    get { if ((_hasBits0 & 1) != 0) { return serverid_; } else { return ServeridDefaultValue; } }
    set {
      _hasBits0 |= 1;
      serverid_ = value;
    }
  }
  /// <summary>Gets whether the "serverid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "serverid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "direct_udp_ip" field.</summary>
  public const int DirectUdpIpFieldNumber = 2;
  private readonly static uint DirectUdpIpDefaultValue = 0;

  private uint directUdpIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DirectUdpIp {
    get { if ((_hasBits0 & 2) != 0) { return directUdpIp_; } else { return DirectUdpIpDefaultValue; } }
    set {
      _hasBits0 |= 2;
      directUdpIp_ = value;
    }
  }
  /// <summary>Gets whether the "direct_udp_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDirectUdpIp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "direct_udp_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDirectUdpIp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "direct_udp_port" field.</summary>
  public const int DirectUdpPortFieldNumber = 3;
  private readonly static uint DirectUdpPortDefaultValue = 0;

  private uint directUdpPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DirectUdpPort {
    get { if ((_hasBits0 & 4) != 0) { return directUdpPort_; } else { return DirectUdpPortDefaultValue; } }
    set {
      _hasBits0 |= 4;
      directUdpPort_ = value;
    }
  }
  /// <summary>Gets whether the "direct_udp_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDirectUdpPort {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "direct_udp_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDirectUdpPort() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "reservationid" field.</summary>
  public const int ReservationidFieldNumber = 4;
  private readonly static ulong ReservationidDefaultValue = 0UL;

  private ulong reservationid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Reservationid {
    get { if ((_hasBits0 & 8) != 0) { return reservationid_; } else { return ReservationidDefaultValue; } }
    set {
      _hasBits0 |= 8;
      reservationid_ = value;
    }
  }
  /// <summary>Gets whether the "reservationid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservationid {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "reservationid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservationid() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "reservation" field.</summary>
  public const int ReservationFieldNumber = 5;
  private global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve Reservation {
    get { return reservation_; }
    set {
      reservation_ = value;
    }
  }

  /// <summary>Field number for the "map" field.</summary>
  public const int MapFieldNumber = 6;
  private readonly static string MapDefaultValue = "";

  private string map_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Map {
    get { return map_ ?? MapDefaultValue; }
    set {
      map_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "map" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMap {
    get { return map_ != null; }
  }
  /// <summary>Clears the value of the "map" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMap() {
    map_ = null;
  }

  /// <summary>Field number for the "server_address" field.</summary>
  public const int ServerAddressFieldNumber = 7;
  private readonly static string ServerAddressDefaultValue = "";

  private string serverAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ServerAddress {
    get { return serverAddress_ ?? ServerAddressDefaultValue; }
    set {
      serverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerAddress {
    get { return serverAddress_ != null; }
  }
  /// <summary>Clears the value of the "server_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerAddress() {
    serverAddress_ = null;
  }

  /// <summary>Field number for the "gs_ping" field.</summary>
  public const int GsPingFieldNumber = 8;
  private global::DataCenterPing gsPing_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::DataCenterPing GsPing {
    get { return gsPing_; }
    set {
      gsPing_ = value;
    }
  }

  /// <summary>Field number for the "gs_location_id" field.</summary>
  public const int GsLocationIdFieldNumber = 9;
  private readonly static uint GsLocationIdDefaultValue = 0;

  private uint gsLocationId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GsLocationId {
    get { if ((_hasBits0 & 16) != 0) { return gsLocationId_; } else { return GsLocationIdDefaultValue; } }
    set {
      _hasBits0 |= 16;
      gsLocationId_ = value;
    }
  }
  /// <summary>Gets whether the "gs_location_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGsLocationId {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "gs_location_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGsLocationId() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Serverid != other.Serverid) return false;
    if (DirectUdpIp != other.DirectUdpIp) return false;
    if (DirectUdpPort != other.DirectUdpPort) return false;
    if (Reservationid != other.Reservationid) return false;
    if (!object.Equals(Reservation, other.Reservation)) return false;
    if (Map != other.Map) return false;
    if (ServerAddress != other.ServerAddress) return false;
    if (!object.Equals(GsPing, other.GsPing)) return false;
    if (GsLocationId != other.GsLocationId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasServerid) hash ^= Serverid.GetHashCode();
    if (HasDirectUdpIp) hash ^= DirectUdpIp.GetHashCode();
    if (HasDirectUdpPort) hash ^= DirectUdpPort.GetHashCode();
    if (HasReservationid) hash ^= Reservationid.GetHashCode();
    if (reservation_ != null) hash ^= Reservation.GetHashCode();
    if (HasMap) hash ^= Map.GetHashCode();
    if (HasServerAddress) hash ^= ServerAddress.GetHashCode();
    if (gsPing_ != null) hash ^= GsPing.GetHashCode();
    if (HasGsLocationId) hash ^= GsLocationId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasServerid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Serverid);
    }
    if (HasDirectUdpIp) {
      output.WriteRawTag(16);
      output.WriteUInt32(DirectUdpIp);
    }
    if (HasDirectUdpPort) {
      output.WriteRawTag(24);
      output.WriteUInt32(DirectUdpPort);
    }
    if (HasReservationid) {
      output.WriteRawTag(32);
      output.WriteUInt64(Reservationid);
    }
    if (reservation_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Reservation);
    }
    if (HasMap) {
      output.WriteRawTag(50);
      output.WriteString(Map);
    }
    if (HasServerAddress) {
      output.WriteRawTag(58);
      output.WriteString(ServerAddress);
    }
    if (gsPing_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(GsPing);
    }
    if (HasGsLocationId) {
      output.WriteRawTag(72);
      output.WriteUInt32(GsLocationId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasServerid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Serverid);
    }
    if (HasDirectUdpIp) {
      output.WriteRawTag(16);
      output.WriteUInt32(DirectUdpIp);
    }
    if (HasDirectUdpPort) {
      output.WriteRawTag(24);
      output.WriteUInt32(DirectUdpPort);
    }
    if (HasReservationid) {
      output.WriteRawTag(32);
      output.WriteUInt64(Reservationid);
    }
    if (reservation_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Reservation);
    }
    if (HasMap) {
      output.WriteRawTag(50);
      output.WriteString(Map);
    }
    if (HasServerAddress) {
      output.WriteRawTag(58);
      output.WriteString(ServerAddress);
    }
    if (gsPing_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(GsPing);
    }
    if (HasGsLocationId) {
      output.WriteRawTag(72);
      output.WriteUInt32(GsLocationId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasServerid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Serverid);
    }
    if (HasDirectUdpIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DirectUdpIp);
    }
    if (HasDirectUdpPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DirectUdpPort);
    }
    if (HasReservationid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Reservationid);
    }
    if (reservation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
    }
    if (HasMap) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Map);
    }
    if (HasServerAddress) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerAddress);
    }
    if (gsPing_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GsPing);
    }
    if (HasGsLocationId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GsLocationId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve other) {
    if (other == null) {
      return;
    }
    if (other.HasServerid) {
      Serverid = other.Serverid;
    }
    if (other.HasDirectUdpIp) {
      DirectUdpIp = other.DirectUdpIp;
    }
    if (other.HasDirectUdpPort) {
      DirectUdpPort = other.DirectUdpPort;
    }
    if (other.HasReservationid) {
      Reservationid = other.Reservationid;
    }
    if (other.reservation_ != null) {
      if (reservation_ == null) {
        Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
      }
      Reservation.MergeFrom(other.Reservation);
    }
    if (other.HasMap) {
      Map = other.Map;
    }
    if (other.HasServerAddress) {
      ServerAddress = other.ServerAddress;
    }
    if (other.gsPing_ != null) {
      if (gsPing_ == null) {
        GsPing = new global::DataCenterPing();
      }
      GsPing.MergeFrom(other.GsPing);
    }
    if (other.HasGsLocationId) {
      GsLocationId = other.GsLocationId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Serverid = input.ReadUInt64();
          break;
        }
        case 16: {
          DirectUdpIp = input.ReadUInt32();
          break;
        }
        case 24: {
          DirectUdpPort = input.ReadUInt32();
          break;
        }
        case 32: {
          Reservationid = input.ReadUInt64();
          break;
        }
        case 42: {
          if (reservation_ == null) {
            Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
          }
          input.ReadMessage(Reservation);
          break;
        }
        case 50: {
          Map = input.ReadString();
          break;
        }
        case 58: {
          ServerAddress = input.ReadString();
          break;
        }
        case 66: {
          if (gsPing_ == null) {
            GsPing = new global::DataCenterPing();
          }
          input.ReadMessage(GsPing);
          break;
        }
        case 72: {
          GsLocationId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Serverid = input.ReadUInt64();
          break;
        }
        case 16: {
          DirectUdpIp = input.ReadUInt32();
          break;
        }
        case 24: {
          DirectUdpPort = input.ReadUInt32();
          break;
        }
        case 32: {
          Reservationid = input.ReadUInt64();
          break;
        }
        case 42: {
          if (reservation_ == null) {
            Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
          }
          input.ReadMessage(Reservation);
          break;
        }
        case 50: {
          Map = input.ReadString();
          break;
        }
        case 58: {
          ServerAddress = input.ReadString();
          break;
        }
        case 66: {
          if (gsPing_ == null) {
            GsPing = new global::DataCenterPing();
          }
          input.ReadMessage(GsPing);
          break;
        }
        case 72: {
          GsLocationId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingServerRoundStats : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingServerRoundStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingServerRoundStats> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingServerRoundStats>(() => new CMsgGCCStrike15_v2_MatchmakingServerRoundStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingServerRoundStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingServerRoundStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingServerRoundStats(CMsgGCCStrike15_v2_MatchmakingServerRoundStats other) : this() {
    _hasBits0 = other._hasBits0;
    reservationid_ = other.reservationid_;
    reservation_ = other.reservation_ != null ? other.reservation_.Clone() : null;
    map_ = other.map_;
    round_ = other.round_;
    kills_ = other.kills_.Clone();
    assists_ = other.assists_.Clone();
    deaths_ = other.deaths_.Clone();
    scores_ = other.scores_.Clone();
    pings_ = other.pings_.Clone();
    roundResult_ = other.roundResult_;
    matchResult_ = other.matchResult_;
    teamScores_ = other.teamScores_.Clone();
    confirm_ = other.confirm_ != null ? other.confirm_.Clone() : null;
    reservationStage_ = other.reservationStage_;
    matchDuration_ = other.matchDuration_;
    enemyKills_ = other.enemyKills_.Clone();
    enemyHeadshots_ = other.enemyHeadshots_.Clone();
    enemy3Ks_ = other.enemy3Ks_.Clone();
    enemy4Ks_ = other.enemy4Ks_.Clone();
    enemy5Ks_ = other.enemy5Ks_.Clone();
    mvps_ = other.mvps_.Clone();
    spectatorsCount_ = other.spectatorsCount_;
    spectatorsCountTv_ = other.spectatorsCountTv_;
    spectatorsCountLnk_ = other.spectatorsCountLnk_;
    enemyKillsAgg_ = other.enemyKillsAgg_.Clone();
    dropInfo_ = other.dropInfo_ != null ? other.dropInfo_.Clone() : null;
    bSwitchedTeams_ = other.bSwitchedTeams_;
    enemy2Ks_ = other.enemy2Ks_.Clone();
    playerSpawned_ = other.playerSpawned_.Clone();
    teamSpawnCount_ = other.teamSpawnCount_.Clone();
    maxRounds_ = other.maxRounds_;
    mapId_ = other.mapId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingServerRoundStats Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingServerRoundStats(this);
  }

  /// <summary>Field number for the "reservationid" field.</summary>
  public const int ReservationidFieldNumber = 1;
  private readonly static ulong ReservationidDefaultValue = 0UL;

  private ulong reservationid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Reservationid {
    get { if ((_hasBits0 & 1) != 0) { return reservationid_; } else { return ReservationidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      reservationid_ = value;
    }
  }
  /// <summary>Gets whether the "reservationid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservationid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "reservationid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservationid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "reservation" field.</summary>
  public const int ReservationFieldNumber = 2;
  private global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve Reservation {
    get { return reservation_; }
    set {
      reservation_ = value;
    }
  }

  /// <summary>Field number for the "map" field.</summary>
  public const int MapFieldNumber = 3;
  private readonly static string MapDefaultValue = "";

  private string map_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Map {
    get { return map_ ?? MapDefaultValue; }
    set {
      map_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "map" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMap {
    get { return map_ != null; }
  }
  /// <summary>Clears the value of the "map" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMap() {
    map_ = null;
  }

  /// <summary>Field number for the "round" field.</summary>
  public const int RoundFieldNumber = 4;
  private readonly static int RoundDefaultValue = 0;

  private int round_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Round {
    get { if ((_hasBits0 & 2) != 0) { return round_; } else { return RoundDefaultValue; } }
    set {
      _hasBits0 |= 2;
      round_ = value;
    }
  }
  /// <summary>Gets whether the "round" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRound {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "round" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRound() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "kills" field.</summary>
  public const int KillsFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_kills_codec
      = pb::FieldCodec.ForInt32(40);
  private readonly pbc::RepeatedField<int> kills_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Kills {
    get { return kills_; }
  }

  /// <summary>Field number for the "assists" field.</summary>
  public const int AssistsFieldNumber = 6;
  private static readonly pb::FieldCodec<int> _repeated_assists_codec
      = pb::FieldCodec.ForInt32(48);
  private readonly pbc::RepeatedField<int> assists_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Assists {
    get { return assists_; }
  }

  /// <summary>Field number for the "deaths" field.</summary>
  public const int DeathsFieldNumber = 7;
  private static readonly pb::FieldCodec<int> _repeated_deaths_codec
      = pb::FieldCodec.ForInt32(56);
  private readonly pbc::RepeatedField<int> deaths_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Deaths {
    get { return deaths_; }
  }

  /// <summary>Field number for the "scores" field.</summary>
  public const int ScoresFieldNumber = 8;
  private static readonly pb::FieldCodec<int> _repeated_scores_codec
      = pb::FieldCodec.ForInt32(64);
  private readonly pbc::RepeatedField<int> scores_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Scores {
    get { return scores_; }
  }

  /// <summary>Field number for the "pings" field.</summary>
  public const int PingsFieldNumber = 9;
  private static readonly pb::FieldCodec<int> _repeated_pings_codec
      = pb::FieldCodec.ForInt32(72);
  private readonly pbc::RepeatedField<int> pings_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Pings {
    get { return pings_; }
  }

  /// <summary>Field number for the "round_result" field.</summary>
  public const int RoundResultFieldNumber = 10;
  private readonly static int RoundResultDefaultValue = 0;

  private int roundResult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int RoundResult {
    get { if ((_hasBits0 & 4) != 0) { return roundResult_; } else { return RoundResultDefaultValue; } }
    set {
      _hasBits0 |= 4;
      roundResult_ = value;
    }
  }
  /// <summary>Gets whether the "round_result" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRoundResult {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "round_result" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRoundResult() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "match_result" field.</summary>
  public const int MatchResultFieldNumber = 11;
  private readonly static int MatchResultDefaultValue = 0;

  private int matchResult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MatchResult {
    get { if ((_hasBits0 & 8) != 0) { return matchResult_; } else { return MatchResultDefaultValue; } }
    set {
      _hasBits0 |= 8;
      matchResult_ = value;
    }
  }
  /// <summary>Gets whether the "match_result" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchResult {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "match_result" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchResult() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "team_scores" field.</summary>
  public const int TeamScoresFieldNumber = 12;
  private static readonly pb::FieldCodec<int> _repeated_teamScores_codec
      = pb::FieldCodec.ForInt32(96);
  private readonly pbc::RepeatedField<int> teamScores_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> TeamScores {
    get { return teamScores_; }
  }

  /// <summary>Field number for the "confirm" field.</summary>
  public const int ConfirmFieldNumber = 13;
  private global::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm confirm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm Confirm {
    get { return confirm_; }
    set {
      confirm_ = value;
    }
  }

  /// <summary>Field number for the "reservation_stage" field.</summary>
  public const int ReservationStageFieldNumber = 14;
  private readonly static int ReservationStageDefaultValue = 0;

  private int reservationStage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ReservationStage {
    get { if ((_hasBits0 & 16) != 0) { return reservationStage_; } else { return ReservationStageDefaultValue; } }
    set {
      _hasBits0 |= 16;
      reservationStage_ = value;
    }
  }
  /// <summary>Gets whether the "reservation_stage" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservationStage {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "reservation_stage" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservationStage() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "match_duration" field.</summary>
  public const int MatchDurationFieldNumber = 15;
  private readonly static int MatchDurationDefaultValue = 0;

  private int matchDuration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MatchDuration {
    get { if ((_hasBits0 & 32) != 0) { return matchDuration_; } else { return MatchDurationDefaultValue; } }
    set {
      _hasBits0 |= 32;
      matchDuration_ = value;
    }
  }
  /// <summary>Gets whether the "match_duration" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchDuration {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "match_duration" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchDuration() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "enemy_kills" field.</summary>
  public const int EnemyKillsFieldNumber = 16;
  private static readonly pb::FieldCodec<int> _repeated_enemyKills_codec
      = pb::FieldCodec.ForInt32(128);
  private readonly pbc::RepeatedField<int> enemyKills_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> EnemyKills {
    get { return enemyKills_; }
  }

  /// <summary>Field number for the "enemy_headshots" field.</summary>
  public const int EnemyHeadshotsFieldNumber = 17;
  private static readonly pb::FieldCodec<int> _repeated_enemyHeadshots_codec
      = pb::FieldCodec.ForInt32(136);
  private readonly pbc::RepeatedField<int> enemyHeadshots_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> EnemyHeadshots {
    get { return enemyHeadshots_; }
  }

  /// <summary>Field number for the "enemy_3ks" field.</summary>
  public const int Enemy3KsFieldNumber = 18;
  private static readonly pb::FieldCodec<int> _repeated_enemy3Ks_codec
      = pb::FieldCodec.ForInt32(144);
  private readonly pbc::RepeatedField<int> enemy3Ks_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Enemy3Ks {
    get { return enemy3Ks_; }
  }

  /// <summary>Field number for the "enemy_4ks" field.</summary>
  public const int Enemy4KsFieldNumber = 19;
  private static readonly pb::FieldCodec<int> _repeated_enemy4Ks_codec
      = pb::FieldCodec.ForInt32(152);
  private readonly pbc::RepeatedField<int> enemy4Ks_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Enemy4Ks {
    get { return enemy4Ks_; }
  }

  /// <summary>Field number for the "enemy_5ks" field.</summary>
  public const int Enemy5KsFieldNumber = 20;
  private static readonly pb::FieldCodec<int> _repeated_enemy5Ks_codec
      = pb::FieldCodec.ForInt32(160);
  private readonly pbc::RepeatedField<int> enemy5Ks_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Enemy5Ks {
    get { return enemy5Ks_; }
  }

  /// <summary>Field number for the "mvps" field.</summary>
  public const int MvpsFieldNumber = 21;
  private static readonly pb::FieldCodec<int> _repeated_mvps_codec
      = pb::FieldCodec.ForInt32(168);
  private readonly pbc::RepeatedField<int> mvps_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Mvps {
    get { return mvps_; }
  }

  /// <summary>Field number for the "spectators_count" field.</summary>
  public const int SpectatorsCountFieldNumber = 22;
  private readonly static uint SpectatorsCountDefaultValue = 0;

  private uint spectatorsCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SpectatorsCount {
    get { if ((_hasBits0 & 64) != 0) { return spectatorsCount_; } else { return SpectatorsCountDefaultValue; } }
    set {
      _hasBits0 |= 64;
      spectatorsCount_ = value;
    }
  }
  /// <summary>Gets whether the "spectators_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpectatorsCount {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "spectators_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpectatorsCount() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "spectators_count_tv" field.</summary>
  public const int SpectatorsCountTvFieldNumber = 23;
  private readonly static uint SpectatorsCountTvDefaultValue = 0;

  private uint spectatorsCountTv_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SpectatorsCountTv {
    get { if ((_hasBits0 & 128) != 0) { return spectatorsCountTv_; } else { return SpectatorsCountTvDefaultValue; } }
    set {
      _hasBits0 |= 128;
      spectatorsCountTv_ = value;
    }
  }
  /// <summary>Gets whether the "spectators_count_tv" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpectatorsCountTv {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "spectators_count_tv" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpectatorsCountTv() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "spectators_count_lnk" field.</summary>
  public const int SpectatorsCountLnkFieldNumber = 24;
  private readonly static uint SpectatorsCountLnkDefaultValue = 0;

  private uint spectatorsCountLnk_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SpectatorsCountLnk {
    get { if ((_hasBits0 & 256) != 0) { return spectatorsCountLnk_; } else { return SpectatorsCountLnkDefaultValue; } }
    set {
      _hasBits0 |= 256;
      spectatorsCountLnk_ = value;
    }
  }
  /// <summary>Gets whether the "spectators_count_lnk" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpectatorsCountLnk {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "spectators_count_lnk" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpectatorsCountLnk() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "enemy_kills_agg" field.</summary>
  public const int EnemyKillsAggFieldNumber = 25;
  private static readonly pb::FieldCodec<int> _repeated_enemyKillsAgg_codec
      = pb::FieldCodec.ForInt32(200);
  private readonly pbc::RepeatedField<int> enemyKillsAgg_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> EnemyKillsAgg {
    get { return enemyKillsAgg_; }
  }

  /// <summary>Field number for the "drop_info" field.</summary>
  public const int DropInfoFieldNumber = 26;
  private global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Types.DropInfo dropInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Types.DropInfo DropInfo {
    get { return dropInfo_; }
    set {
      dropInfo_ = value;
    }
  }

  /// <summary>Field number for the "b_switched_teams" field.</summary>
  public const int BSwitchedTeamsFieldNumber = 27;
  private readonly static bool BSwitchedTeamsDefaultValue = false;

  private bool bSwitchedTeams_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BSwitchedTeams {
    get { if ((_hasBits0 & 512) != 0) { return bSwitchedTeams_; } else { return BSwitchedTeamsDefaultValue; } }
    set {
      _hasBits0 |= 512;
      bSwitchedTeams_ = value;
    }
  }
  /// <summary>Gets whether the "b_switched_teams" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBSwitchedTeams {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "b_switched_teams" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBSwitchedTeams() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "enemy_2ks" field.</summary>
  public const int Enemy2KsFieldNumber = 28;
  private static readonly pb::FieldCodec<int> _repeated_enemy2Ks_codec
      = pb::FieldCodec.ForInt32(224);
  private readonly pbc::RepeatedField<int> enemy2Ks_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Enemy2Ks {
    get { return enemy2Ks_; }
  }

  /// <summary>Field number for the "player_spawned" field.</summary>
  public const int PlayerSpawnedFieldNumber = 29;
  private static readonly pb::FieldCodec<int> _repeated_playerSpawned_codec
      = pb::FieldCodec.ForInt32(232);
  private readonly pbc::RepeatedField<int> playerSpawned_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> PlayerSpawned {
    get { return playerSpawned_; }
  }

  /// <summary>Field number for the "team_spawn_count" field.</summary>
  public const int TeamSpawnCountFieldNumber = 30;
  private static readonly pb::FieldCodec<int> _repeated_teamSpawnCount_codec
      = pb::FieldCodec.ForInt32(240);
  private readonly pbc::RepeatedField<int> teamSpawnCount_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> TeamSpawnCount {
    get { return teamSpawnCount_; }
  }

  /// <summary>Field number for the "max_rounds" field.</summary>
  public const int MaxRoundsFieldNumber = 31;
  private readonly static uint MaxRoundsDefaultValue = 0;

  private uint maxRounds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MaxRounds {
    get { if ((_hasBits0 & 1024) != 0) { return maxRounds_; } else { return MaxRoundsDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      maxRounds_ = value;
    }
  }
  /// <summary>Gets whether the "max_rounds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxRounds {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "max_rounds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxRounds() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "map_id" field.</summary>
  public const int MapIdFieldNumber = 32;
  private readonly static int MapIdDefaultValue = 0;

  private int mapId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MapId {
    get { if ((_hasBits0 & 2048) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      mapId_ = value;
    }
  }
  /// <summary>Gets whether the "map_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMapId {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "map_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMapId() {
    _hasBits0 &= ~2048;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingServerRoundStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingServerRoundStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Reservationid != other.Reservationid) return false;
    if (!object.Equals(Reservation, other.Reservation)) return false;
    if (Map != other.Map) return false;
    if (Round != other.Round) return false;
    if(!kills_.Equals(other.kills_)) return false;
    if(!assists_.Equals(other.assists_)) return false;
    if(!deaths_.Equals(other.deaths_)) return false;
    if(!scores_.Equals(other.scores_)) return false;
    if(!pings_.Equals(other.pings_)) return false;
    if (RoundResult != other.RoundResult) return false;
    if (MatchResult != other.MatchResult) return false;
    if(!teamScores_.Equals(other.teamScores_)) return false;
    if (!object.Equals(Confirm, other.Confirm)) return false;
    if (ReservationStage != other.ReservationStage) return false;
    if (MatchDuration != other.MatchDuration) return false;
    if(!enemyKills_.Equals(other.enemyKills_)) return false;
    if(!enemyHeadshots_.Equals(other.enemyHeadshots_)) return false;
    if(!enemy3Ks_.Equals(other.enemy3Ks_)) return false;
    if(!enemy4Ks_.Equals(other.enemy4Ks_)) return false;
    if(!enemy5Ks_.Equals(other.enemy5Ks_)) return false;
    if(!mvps_.Equals(other.mvps_)) return false;
    if (SpectatorsCount != other.SpectatorsCount) return false;
    if (SpectatorsCountTv != other.SpectatorsCountTv) return false;
    if (SpectatorsCountLnk != other.SpectatorsCountLnk) return false;
    if(!enemyKillsAgg_.Equals(other.enemyKillsAgg_)) return false;
    if (!object.Equals(DropInfo, other.DropInfo)) return false;
    if (BSwitchedTeams != other.BSwitchedTeams) return false;
    if(!enemy2Ks_.Equals(other.enemy2Ks_)) return false;
    if(!playerSpawned_.Equals(other.playerSpawned_)) return false;
    if(!teamSpawnCount_.Equals(other.teamSpawnCount_)) return false;
    if (MaxRounds != other.MaxRounds) return false;
    if (MapId != other.MapId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasReservationid) hash ^= Reservationid.GetHashCode();
    if (reservation_ != null) hash ^= Reservation.GetHashCode();
    if (HasMap) hash ^= Map.GetHashCode();
    if (HasRound) hash ^= Round.GetHashCode();
    hash ^= kills_.GetHashCode();
    hash ^= assists_.GetHashCode();
    hash ^= deaths_.GetHashCode();
    hash ^= scores_.GetHashCode();
    hash ^= pings_.GetHashCode();
    if (HasRoundResult) hash ^= RoundResult.GetHashCode();
    if (HasMatchResult) hash ^= MatchResult.GetHashCode();
    hash ^= teamScores_.GetHashCode();
    if (confirm_ != null) hash ^= Confirm.GetHashCode();
    if (HasReservationStage) hash ^= ReservationStage.GetHashCode();
    if (HasMatchDuration) hash ^= MatchDuration.GetHashCode();
    hash ^= enemyKills_.GetHashCode();
    hash ^= enemyHeadshots_.GetHashCode();
    hash ^= enemy3Ks_.GetHashCode();
    hash ^= enemy4Ks_.GetHashCode();
    hash ^= enemy5Ks_.GetHashCode();
    hash ^= mvps_.GetHashCode();
    if (HasSpectatorsCount) hash ^= SpectatorsCount.GetHashCode();
    if (HasSpectatorsCountTv) hash ^= SpectatorsCountTv.GetHashCode();
    if (HasSpectatorsCountLnk) hash ^= SpectatorsCountLnk.GetHashCode();
    hash ^= enemyKillsAgg_.GetHashCode();
    if (dropInfo_ != null) hash ^= DropInfo.GetHashCode();
    if (HasBSwitchedTeams) hash ^= BSwitchedTeams.GetHashCode();
    hash ^= enemy2Ks_.GetHashCode();
    hash ^= playerSpawned_.GetHashCode();
    hash ^= teamSpawnCount_.GetHashCode();
    if (HasMaxRounds) hash ^= MaxRounds.GetHashCode();
    if (HasMapId) hash ^= MapId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasReservationid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Reservationid);
    }
    if (reservation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Reservation);
    }
    if (HasMap) {
      output.WriteRawTag(26);
      output.WriteString(Map);
    }
    if (HasRound) {
      output.WriteRawTag(32);
      output.WriteInt32(Round);
    }
    kills_.WriteTo(output, _repeated_kills_codec);
    assists_.WriteTo(output, _repeated_assists_codec);
    deaths_.WriteTo(output, _repeated_deaths_codec);
    scores_.WriteTo(output, _repeated_scores_codec);
    pings_.WriteTo(output, _repeated_pings_codec);
    if (HasRoundResult) {
      output.WriteRawTag(80);
      output.WriteInt32(RoundResult);
    }
    if (HasMatchResult) {
      output.WriteRawTag(88);
      output.WriteInt32(MatchResult);
    }
    teamScores_.WriteTo(output, _repeated_teamScores_codec);
    if (confirm_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(Confirm);
    }
    if (HasReservationStage) {
      output.WriteRawTag(112);
      output.WriteInt32(ReservationStage);
    }
    if (HasMatchDuration) {
      output.WriteRawTag(120);
      output.WriteInt32(MatchDuration);
    }
    enemyKills_.WriteTo(output, _repeated_enemyKills_codec);
    enemyHeadshots_.WriteTo(output, _repeated_enemyHeadshots_codec);
    enemy3Ks_.WriteTo(output, _repeated_enemy3Ks_codec);
    enemy4Ks_.WriteTo(output, _repeated_enemy4Ks_codec);
    enemy5Ks_.WriteTo(output, _repeated_enemy5Ks_codec);
    mvps_.WriteTo(output, _repeated_mvps_codec);
    if (HasSpectatorsCount) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(SpectatorsCount);
    }
    if (HasSpectatorsCountTv) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(SpectatorsCountTv);
    }
    if (HasSpectatorsCountLnk) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(SpectatorsCountLnk);
    }
    enemyKillsAgg_.WriteTo(output, _repeated_enemyKillsAgg_codec);
    if (dropInfo_ != null) {
      output.WriteRawTag(210, 1);
      output.WriteMessage(DropInfo);
    }
    if (HasBSwitchedTeams) {
      output.WriteRawTag(216, 1);
      output.WriteBool(BSwitchedTeams);
    }
    enemy2Ks_.WriteTo(output, _repeated_enemy2Ks_codec);
    playerSpawned_.WriteTo(output, _repeated_playerSpawned_codec);
    teamSpawnCount_.WriteTo(output, _repeated_teamSpawnCount_codec);
    if (HasMaxRounds) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(MaxRounds);
    }
    if (HasMapId) {
      output.WriteRawTag(128, 2);
      output.WriteInt32(MapId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasReservationid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Reservationid);
    }
    if (reservation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Reservation);
    }
    if (HasMap) {
      output.WriteRawTag(26);
      output.WriteString(Map);
    }
    if (HasRound) {
      output.WriteRawTag(32);
      output.WriteInt32(Round);
    }
    kills_.WriteTo(ref output, _repeated_kills_codec);
    assists_.WriteTo(ref output, _repeated_assists_codec);
    deaths_.WriteTo(ref output, _repeated_deaths_codec);
    scores_.WriteTo(ref output, _repeated_scores_codec);
    pings_.WriteTo(ref output, _repeated_pings_codec);
    if (HasRoundResult) {
      output.WriteRawTag(80);
      output.WriteInt32(RoundResult);
    }
    if (HasMatchResult) {
      output.WriteRawTag(88);
      output.WriteInt32(MatchResult);
    }
    teamScores_.WriteTo(ref output, _repeated_teamScores_codec);
    if (confirm_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(Confirm);
    }
    if (HasReservationStage) {
      output.WriteRawTag(112);
      output.WriteInt32(ReservationStage);
    }
    if (HasMatchDuration) {
      output.WriteRawTag(120);
      output.WriteInt32(MatchDuration);
    }
    enemyKills_.WriteTo(ref output, _repeated_enemyKills_codec);
    enemyHeadshots_.WriteTo(ref output, _repeated_enemyHeadshots_codec);
    enemy3Ks_.WriteTo(ref output, _repeated_enemy3Ks_codec);
    enemy4Ks_.WriteTo(ref output, _repeated_enemy4Ks_codec);
    enemy5Ks_.WriteTo(ref output, _repeated_enemy5Ks_codec);
    mvps_.WriteTo(ref output, _repeated_mvps_codec);
    if (HasSpectatorsCount) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(SpectatorsCount);
    }
    if (HasSpectatorsCountTv) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(SpectatorsCountTv);
    }
    if (HasSpectatorsCountLnk) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(SpectatorsCountLnk);
    }
    enemyKillsAgg_.WriteTo(ref output, _repeated_enemyKillsAgg_codec);
    if (dropInfo_ != null) {
      output.WriteRawTag(210, 1);
      output.WriteMessage(DropInfo);
    }
    if (HasBSwitchedTeams) {
      output.WriteRawTag(216, 1);
      output.WriteBool(BSwitchedTeams);
    }
    enemy2Ks_.WriteTo(ref output, _repeated_enemy2Ks_codec);
    playerSpawned_.WriteTo(ref output, _repeated_playerSpawned_codec);
    teamSpawnCount_.WriteTo(ref output, _repeated_teamSpawnCount_codec);
    if (HasMaxRounds) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(MaxRounds);
    }
    if (HasMapId) {
      output.WriteRawTag(128, 2);
      output.WriteInt32(MapId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasReservationid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Reservationid);
    }
    if (reservation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
    }
    if (HasMap) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Map);
    }
    if (HasRound) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
    }
    size += kills_.CalculateSize(_repeated_kills_codec);
    size += assists_.CalculateSize(_repeated_assists_codec);
    size += deaths_.CalculateSize(_repeated_deaths_codec);
    size += scores_.CalculateSize(_repeated_scores_codec);
    size += pings_.CalculateSize(_repeated_pings_codec);
    if (HasRoundResult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundResult);
    }
    if (HasMatchResult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchResult);
    }
    size += teamScores_.CalculateSize(_repeated_teamScores_codec);
    if (confirm_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Confirm);
    }
    if (HasReservationStage) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReservationStage);
    }
    if (HasMatchDuration) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchDuration);
    }
    size += enemyKills_.CalculateSize(_repeated_enemyKills_codec);
    size += enemyHeadshots_.CalculateSize(_repeated_enemyHeadshots_codec);
    size += enemy3Ks_.CalculateSize(_repeated_enemy3Ks_codec);
    size += enemy4Ks_.CalculateSize(_repeated_enemy4Ks_codec);
    size += enemy5Ks_.CalculateSize(_repeated_enemy5Ks_codec);
    size += mvps_.CalculateSize(_repeated_mvps_codec);
    if (HasSpectatorsCount) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpectatorsCount);
    }
    if (HasSpectatorsCountTv) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpectatorsCountTv);
    }
    if (HasSpectatorsCountLnk) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpectatorsCountLnk);
    }
    size += enemyKillsAgg_.CalculateSize(_repeated_enemyKillsAgg_codec);
    if (dropInfo_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DropInfo);
    }
    if (HasBSwitchedTeams) {
      size += 2 + 1;
    }
    size += enemy2Ks_.CalculateSize(_repeated_enemy2Ks_codec);
    size += playerSpawned_.CalculateSize(_repeated_playerSpawned_codec);
    size += teamSpawnCount_.CalculateSize(_repeated_teamSpawnCount_codec);
    if (HasMaxRounds) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxRounds);
    }
    if (HasMapId) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(MapId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingServerRoundStats other) {
    if (other == null) {
      return;
    }
    if (other.HasReservationid) {
      Reservationid = other.Reservationid;
    }
    if (other.reservation_ != null) {
      if (reservation_ == null) {
        Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
      }
      Reservation.MergeFrom(other.Reservation);
    }
    if (other.HasMap) {
      Map = other.Map;
    }
    if (other.HasRound) {
      Round = other.Round;
    }
    kills_.Add(other.kills_);
    assists_.Add(other.assists_);
    deaths_.Add(other.deaths_);
    scores_.Add(other.scores_);
    pings_.Add(other.pings_);
    if (other.HasRoundResult) {
      RoundResult = other.RoundResult;
    }
    if (other.HasMatchResult) {
      MatchResult = other.MatchResult;
    }
    teamScores_.Add(other.teamScores_);
    if (other.confirm_ != null) {
      if (confirm_ == null) {
        Confirm = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm();
      }
      Confirm.MergeFrom(other.Confirm);
    }
    if (other.HasReservationStage) {
      ReservationStage = other.ReservationStage;
    }
    if (other.HasMatchDuration) {
      MatchDuration = other.MatchDuration;
    }
    enemyKills_.Add(other.enemyKills_);
    enemyHeadshots_.Add(other.enemyHeadshots_);
    enemy3Ks_.Add(other.enemy3Ks_);
    enemy4Ks_.Add(other.enemy4Ks_);
    enemy5Ks_.Add(other.enemy5Ks_);
    mvps_.Add(other.mvps_);
    if (other.HasSpectatorsCount) {
      SpectatorsCount = other.SpectatorsCount;
    }
    if (other.HasSpectatorsCountTv) {
      SpectatorsCountTv = other.SpectatorsCountTv;
    }
    if (other.HasSpectatorsCountLnk) {
      SpectatorsCountLnk = other.SpectatorsCountLnk;
    }
    enemyKillsAgg_.Add(other.enemyKillsAgg_);
    if (other.dropInfo_ != null) {
      if (dropInfo_ == null) {
        DropInfo = new global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Types.DropInfo();
      }
      DropInfo.MergeFrom(other.DropInfo);
    }
    if (other.HasBSwitchedTeams) {
      BSwitchedTeams = other.BSwitchedTeams;
    }
    enemy2Ks_.Add(other.enemy2Ks_);
    playerSpawned_.Add(other.playerSpawned_);
    teamSpawnCount_.Add(other.teamSpawnCount_);
    if (other.HasMaxRounds) {
      MaxRounds = other.MaxRounds;
    }
    if (other.HasMapId) {
      MapId = other.MapId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Reservationid = input.ReadUInt64();
          break;
        }
        case 18: {
          if (reservation_ == null) {
            Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
          }
          input.ReadMessage(Reservation);
          break;
        }
        case 26: {
          Map = input.ReadString();
          break;
        }
        case 32: {
          Round = input.ReadInt32();
          break;
        }
        case 42:
        case 40: {
          kills_.AddEntriesFrom(input, _repeated_kills_codec);
          break;
        }
        case 50:
        case 48: {
          assists_.AddEntriesFrom(input, _repeated_assists_codec);
          break;
        }
        case 58:
        case 56: {
          deaths_.AddEntriesFrom(input, _repeated_deaths_codec);
          break;
        }
        case 66:
        case 64: {
          scores_.AddEntriesFrom(input, _repeated_scores_codec);
          break;
        }
        case 74:
        case 72: {
          pings_.AddEntriesFrom(input, _repeated_pings_codec);
          break;
        }
        case 80: {
          RoundResult = input.ReadInt32();
          break;
        }
        case 88: {
          MatchResult = input.ReadInt32();
          break;
        }
        case 98:
        case 96: {
          teamScores_.AddEntriesFrom(input, _repeated_teamScores_codec);
          break;
        }
        case 106: {
          if (confirm_ == null) {
            Confirm = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm();
          }
          input.ReadMessage(Confirm);
          break;
        }
        case 112: {
          ReservationStage = input.ReadInt32();
          break;
        }
        case 120: {
          MatchDuration = input.ReadInt32();
          break;
        }
        case 130:
        case 128: {
          enemyKills_.AddEntriesFrom(input, _repeated_enemyKills_codec);
          break;
        }
        case 138:
        case 136: {
          enemyHeadshots_.AddEntriesFrom(input, _repeated_enemyHeadshots_codec);
          break;
        }
        case 146:
        case 144: {
          enemy3Ks_.AddEntriesFrom(input, _repeated_enemy3Ks_codec);
          break;
        }
        case 154:
        case 152: {
          enemy4Ks_.AddEntriesFrom(input, _repeated_enemy4Ks_codec);
          break;
        }
        case 162:
        case 160: {
          enemy5Ks_.AddEntriesFrom(input, _repeated_enemy5Ks_codec);
          break;
        }
        case 170:
        case 168: {
          mvps_.AddEntriesFrom(input, _repeated_mvps_codec);
          break;
        }
        case 176: {
          SpectatorsCount = input.ReadUInt32();
          break;
        }
        case 184: {
          SpectatorsCountTv = input.ReadUInt32();
          break;
        }
        case 192: {
          SpectatorsCountLnk = input.ReadUInt32();
          break;
        }
        case 202:
        case 200: {
          enemyKillsAgg_.AddEntriesFrom(input, _repeated_enemyKillsAgg_codec);
          break;
        }
        case 210: {
          if (dropInfo_ == null) {
            DropInfo = new global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Types.DropInfo();
          }
          input.ReadMessage(DropInfo);
          break;
        }
        case 216: {
          BSwitchedTeams = input.ReadBool();
          break;
        }
        case 226:
        case 224: {
          enemy2Ks_.AddEntriesFrom(input, _repeated_enemy2Ks_codec);
          break;
        }
        case 234:
        case 232: {
          playerSpawned_.AddEntriesFrom(input, _repeated_playerSpawned_codec);
          break;
        }
        case 242:
        case 240: {
          teamSpawnCount_.AddEntriesFrom(input, _repeated_teamSpawnCount_codec);
          break;
        }
        case 248: {
          MaxRounds = input.ReadUInt32();
          break;
        }
        case 256: {
          MapId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Reservationid = input.ReadUInt64();
          break;
        }
        case 18: {
          if (reservation_ == null) {
            Reservation = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve();
          }
          input.ReadMessage(Reservation);
          break;
        }
        case 26: {
          Map = input.ReadString();
          break;
        }
        case 32: {
          Round = input.ReadInt32();
          break;
        }
        case 42:
        case 40: {
          kills_.AddEntriesFrom(ref input, _repeated_kills_codec);
          break;
        }
        case 50:
        case 48: {
          assists_.AddEntriesFrom(ref input, _repeated_assists_codec);
          break;
        }
        case 58:
        case 56: {
          deaths_.AddEntriesFrom(ref input, _repeated_deaths_codec);
          break;
        }
        case 66:
        case 64: {
          scores_.AddEntriesFrom(ref input, _repeated_scores_codec);
          break;
        }
        case 74:
        case 72: {
          pings_.AddEntriesFrom(ref input, _repeated_pings_codec);
          break;
        }
        case 80: {
          RoundResult = input.ReadInt32();
          break;
        }
        case 88: {
          MatchResult = input.ReadInt32();
          break;
        }
        case 98:
        case 96: {
          teamScores_.AddEntriesFrom(ref input, _repeated_teamScores_codec);
          break;
        }
        case 106: {
          if (confirm_ == null) {
            Confirm = new global::CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm();
          }
          input.ReadMessage(Confirm);
          break;
        }
        case 112: {
          ReservationStage = input.ReadInt32();
          break;
        }
        case 120: {
          MatchDuration = input.ReadInt32();
          break;
        }
        case 130:
        case 128: {
          enemyKills_.AddEntriesFrom(ref input, _repeated_enemyKills_codec);
          break;
        }
        case 138:
        case 136: {
          enemyHeadshots_.AddEntriesFrom(ref input, _repeated_enemyHeadshots_codec);
          break;
        }
        case 146:
        case 144: {
          enemy3Ks_.AddEntriesFrom(ref input, _repeated_enemy3Ks_codec);
          break;
        }
        case 154:
        case 152: {
          enemy4Ks_.AddEntriesFrom(ref input, _repeated_enemy4Ks_codec);
          break;
        }
        case 162:
        case 160: {
          enemy5Ks_.AddEntriesFrom(ref input, _repeated_enemy5Ks_codec);
          break;
        }
        case 170:
        case 168: {
          mvps_.AddEntriesFrom(ref input, _repeated_mvps_codec);
          break;
        }
        case 176: {
          SpectatorsCount = input.ReadUInt32();
          break;
        }
        case 184: {
          SpectatorsCountTv = input.ReadUInt32();
          break;
        }
        case 192: {
          SpectatorsCountLnk = input.ReadUInt32();
          break;
        }
        case 202:
        case 200: {
          enemyKillsAgg_.AddEntriesFrom(ref input, _repeated_enemyKillsAgg_codec);
          break;
        }
        case 210: {
          if (dropInfo_ == null) {
            DropInfo = new global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Types.DropInfo();
          }
          input.ReadMessage(DropInfo);
          break;
        }
        case 216: {
          BSwitchedTeams = input.ReadBool();
          break;
        }
        case 226:
        case 224: {
          enemy2Ks_.AddEntriesFrom(ref input, _repeated_enemy2Ks_codec);
          break;
        }
        case 234:
        case 232: {
          playerSpawned_.AddEntriesFrom(ref input, _repeated_playerSpawned_codec);
          break;
        }
        case 242:
        case 240: {
          teamSpawnCount_.AddEntriesFrom(ref input, _repeated_teamSpawnCount_codec);
          break;
        }
        case 248: {
          MaxRounds = input.ReadUInt32();
          break;
        }
        case 256: {
          MapId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_MatchmakingServerRoundStats message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class DropInfo : pb::IMessage<DropInfo>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DropInfo> _parser = new pb::MessageParser<DropInfo>(() => new DropInfo());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DropInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DropInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DropInfo(DropInfo other) : this() {
        _hasBits0 = other._hasBits0;
        accountMvp_ = other.accountMvp_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DropInfo Clone() {
        return new DropInfo(this);
      }

      /// <summary>Field number for the "account_mvp" field.</summary>
      public const int AccountMvpFieldNumber = 1;
      private readonly static uint AccountMvpDefaultValue = 0;

      private uint accountMvp_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AccountMvp {
        get { if ((_hasBits0 & 1) != 0) { return accountMvp_; } else { return AccountMvpDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountMvp_ = value;
        }
      }
      /// <summary>Gets whether the "account_mvp" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountMvp {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "account_mvp" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountMvp() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DropInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DropInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AccountMvp != other.AccountMvp) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountMvp) hash ^= AccountMvp.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountMvp) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountMvp);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountMvp) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountMvp);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountMvp) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountMvp);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DropInfo other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountMvp) {
          AccountMvp = other.AccountMvp;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              AccountMvp = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              AccountMvp = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingClient2GCHello : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingClient2GCHello>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingClient2GCHello> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingClient2GCHello>(() => new CMsgGCCStrike15_v2_MatchmakingClient2GCHello());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingClient2GCHello> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingClient2GCHello() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingClient2GCHello(CMsgGCCStrike15_v2_MatchmakingClient2GCHello other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingClient2GCHello Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingClient2GCHello(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingClient2GCHello);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingClient2GCHello other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingClient2GCHello other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingGC2ClientHello : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello>(() => new CMsgGCCStrike15_v2_MatchmakingGC2ClientHello());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientHello() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientHello(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    ongoingmatch_ = other.ongoingmatch_ != null ? other.ongoingmatch_.Clone() : null;
    globalStats_ = other.globalStats_ != null ? other.globalStats_.Clone() : null;
    penaltySeconds_ = other.penaltySeconds_;
    penaltyReason_ = other.penaltyReason_;
    vacBanned_ = other.vacBanned_;
    ranking_ = other.ranking_ != null ? other.ranking_.Clone() : null;
    commendation_ = other.commendation_ != null ? other.commendation_.Clone() : null;
    medals_ = other.medals_ != null ? other.medals_.Clone() : null;
    myCurrentEvent_ = other.myCurrentEvent_ != null ? other.myCurrentEvent_.Clone() : null;
    myCurrentEventTeams_ = other.myCurrentEventTeams_.Clone();
    myCurrentTeam_ = other.myCurrentTeam_ != null ? other.myCurrentTeam_.Clone() : null;
    myCurrentEventStages_ = other.myCurrentEventStages_.Clone();
    surveyVote_ = other.surveyVote_;
    activity_ = other.activity_ != null ? other.activity_.Clone() : null;
    playerLevel_ = other.playerLevel_;
    playerCurXp_ = other.playerCurXp_;
    playerXpBonusFlags_ = other.playerXpBonusFlags_;
    rankings_ = other.rankings_.Clone();
    owcaseid_ = other.owcaseid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientHello Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingGC2ClientHello(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ongoingmatch" field.</summary>
  public const int OngoingmatchFieldNumber = 2;
  private global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve ongoingmatch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve Ongoingmatch {
    get { return ongoingmatch_; }
    set {
      ongoingmatch_ = value;
    }
  }

  /// <summary>Field number for the "global_stats" field.</summary>
  public const int GlobalStatsFieldNumber = 3;
  private global::GlobalStatistics globalStats_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GlobalStatistics GlobalStats {
    get { return globalStats_; }
    set {
      globalStats_ = value;
    }
  }

  /// <summary>Field number for the "penalty_seconds" field.</summary>
  public const int PenaltySecondsFieldNumber = 4;
  private readonly static uint PenaltySecondsDefaultValue = 0;

  private uint penaltySeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PenaltySeconds {
    get { if ((_hasBits0 & 2) != 0) { return penaltySeconds_; } else { return PenaltySecondsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      penaltySeconds_ = value;
    }
  }
  /// <summary>Gets whether the "penalty_seconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPenaltySeconds {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "penalty_seconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPenaltySeconds() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "penalty_reason" field.</summary>
  public const int PenaltyReasonFieldNumber = 5;
  private readonly static uint PenaltyReasonDefaultValue = 0;

  private uint penaltyReason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PenaltyReason {
    get { if ((_hasBits0 & 4) != 0) { return penaltyReason_; } else { return PenaltyReasonDefaultValue; } }
    set {
      _hasBits0 |= 4;
      penaltyReason_ = value;
    }
  }
  /// <summary>Gets whether the "penalty_reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPenaltyReason {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "penalty_reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPenaltyReason() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "vac_banned" field.</summary>
  public const int VacBannedFieldNumber = 6;
  private readonly static int VacBannedDefaultValue = 0;

  private int vacBanned_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int VacBanned {
    get { if ((_hasBits0 & 8) != 0) { return vacBanned_; } else { return VacBannedDefaultValue; } }
    set {
      _hasBits0 |= 8;
      vacBanned_ = value;
    }
  }
  /// <summary>Gets whether the "vac_banned" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVacBanned {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "vac_banned" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVacBanned() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "ranking" field.</summary>
  public const int RankingFieldNumber = 7;
  private global::PlayerRankingInfo ranking_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerRankingInfo Ranking {
    get { return ranking_; }
    set {
      ranking_ = value;
    }
  }

  /// <summary>Field number for the "commendation" field.</summary>
  public const int CommendationFieldNumber = 8;
  private global::PlayerCommendationInfo commendation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerCommendationInfo Commendation {
    get { return commendation_; }
    set {
      commendation_ = value;
    }
  }

  /// <summary>Field number for the "medals" field.</summary>
  public const int MedalsFieldNumber = 9;
  private global::PlayerMedalsInfo medals_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerMedalsInfo Medals {
    get { return medals_; }
    set {
      medals_ = value;
    }
  }

  /// <summary>Field number for the "my_current_event" field.</summary>
  public const int MyCurrentEventFieldNumber = 10;
  private global::TournamentEvent myCurrentEvent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::TournamentEvent MyCurrentEvent {
    get { return myCurrentEvent_; }
    set {
      myCurrentEvent_ = value;
    }
  }

  /// <summary>Field number for the "my_current_event_teams" field.</summary>
  public const int MyCurrentEventTeamsFieldNumber = 11;
  private static readonly pb::FieldCodec<global::TournamentTeam> _repeated_myCurrentEventTeams_codec
      = pb::FieldCodec.ForMessage(90, global::TournamentTeam.Parser);
  private readonly pbc::RepeatedField<global::TournamentTeam> myCurrentEventTeams_ = new pbc::RepeatedField<global::TournamentTeam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::TournamentTeam> MyCurrentEventTeams {
    get { return myCurrentEventTeams_; }
  }

  /// <summary>Field number for the "my_current_team" field.</summary>
  public const int MyCurrentTeamFieldNumber = 12;
  private global::TournamentTeam myCurrentTeam_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::TournamentTeam MyCurrentTeam {
    get { return myCurrentTeam_; }
    set {
      myCurrentTeam_ = value;
    }
  }

  /// <summary>Field number for the "my_current_event_stages" field.</summary>
  public const int MyCurrentEventStagesFieldNumber = 13;
  private static readonly pb::FieldCodec<global::TournamentEvent> _repeated_myCurrentEventStages_codec
      = pb::FieldCodec.ForMessage(106, global::TournamentEvent.Parser);
  private readonly pbc::RepeatedField<global::TournamentEvent> myCurrentEventStages_ = new pbc::RepeatedField<global::TournamentEvent>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::TournamentEvent> MyCurrentEventStages {
    get { return myCurrentEventStages_; }
  }

  /// <summary>Field number for the "survey_vote" field.</summary>
  public const int SurveyVoteFieldNumber = 14;
  private readonly static uint SurveyVoteDefaultValue = 0;

  private uint surveyVote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SurveyVote {
    get { if ((_hasBits0 & 16) != 0) { return surveyVote_; } else { return SurveyVoteDefaultValue; } }
    set {
      _hasBits0 |= 16;
      surveyVote_ = value;
    }
  }
  /// <summary>Gets whether the "survey_vote" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSurveyVote {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "survey_vote" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSurveyVote() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "activity" field.</summary>
  public const int ActivityFieldNumber = 15;
  private global::AccountActivity activity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AccountActivity Activity {
    get { return activity_; }
    set {
      activity_ = value;
    }
  }

  /// <summary>Field number for the "player_level" field.</summary>
  public const int PlayerLevelFieldNumber = 17;
  private readonly static int PlayerLevelDefaultValue = 0;

  private int playerLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PlayerLevel {
    get { if ((_hasBits0 & 32) != 0) { return playerLevel_; } else { return PlayerLevelDefaultValue; } }
    set {
      _hasBits0 |= 32;
      playerLevel_ = value;
    }
  }
  /// <summary>Gets whether the "player_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerLevel {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "player_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerLevel() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "player_cur_xp" field.</summary>
  public const int PlayerCurXpFieldNumber = 18;
  private readonly static int PlayerCurXpDefaultValue = 0;

  private int playerCurXp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PlayerCurXp {
    get { if ((_hasBits0 & 64) != 0) { return playerCurXp_; } else { return PlayerCurXpDefaultValue; } }
    set {
      _hasBits0 |= 64;
      playerCurXp_ = value;
    }
  }
  /// <summary>Gets whether the "player_cur_xp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerCurXp {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "player_cur_xp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerCurXp() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "player_xp_bonus_flags" field.</summary>
  public const int PlayerXpBonusFlagsFieldNumber = 19;
  private readonly static int PlayerXpBonusFlagsDefaultValue = 0;

  private int playerXpBonusFlags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PlayerXpBonusFlags {
    get { if ((_hasBits0 & 128) != 0) { return playerXpBonusFlags_; } else { return PlayerXpBonusFlagsDefaultValue; } }
    set {
      _hasBits0 |= 128;
      playerXpBonusFlags_ = value;
    }
  }
  /// <summary>Gets whether the "player_xp_bonus_flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerXpBonusFlags {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "player_xp_bonus_flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerXpBonusFlags() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "rankings" field.</summary>
  public const int RankingsFieldNumber = 20;
  private static readonly pb::FieldCodec<global::PlayerRankingInfo> _repeated_rankings_codec
      = pb::FieldCodec.ForMessage(162, global::PlayerRankingInfo.Parser);
  private readonly pbc::RepeatedField<global::PlayerRankingInfo> rankings_ = new pbc::RepeatedField<global::PlayerRankingInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PlayerRankingInfo> Rankings {
    get { return rankings_; }
  }

  /// <summary>Field number for the "owcaseid" field.</summary>
  public const int OwcaseidFieldNumber = 21;
  private readonly static ulong OwcaseidDefaultValue = 0UL;

  private ulong owcaseid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Owcaseid {
    get { if ((_hasBits0 & 256) != 0) { return owcaseid_; } else { return OwcaseidDefaultValue; } }
    set {
      _hasBits0 |= 256;
      owcaseid_ = value;
    }
  }
  /// <summary>Gets whether the "owcaseid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOwcaseid {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "owcaseid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOwcaseid() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingGC2ClientHello);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (!object.Equals(Ongoingmatch, other.Ongoingmatch)) return false;
    if (!object.Equals(GlobalStats, other.GlobalStats)) return false;
    if (PenaltySeconds != other.PenaltySeconds) return false;
    if (PenaltyReason != other.PenaltyReason) return false;
    if (VacBanned != other.VacBanned) return false;
    if (!object.Equals(Ranking, other.Ranking)) return false;
    if (!object.Equals(Commendation, other.Commendation)) return false;
    if (!object.Equals(Medals, other.Medals)) return false;
    if (!object.Equals(MyCurrentEvent, other.MyCurrentEvent)) return false;
    if(!myCurrentEventTeams_.Equals(other.myCurrentEventTeams_)) return false;
    if (!object.Equals(MyCurrentTeam, other.MyCurrentTeam)) return false;
    if(!myCurrentEventStages_.Equals(other.myCurrentEventStages_)) return false;
    if (SurveyVote != other.SurveyVote) return false;
    if (!object.Equals(Activity, other.Activity)) return false;
    if (PlayerLevel != other.PlayerLevel) return false;
    if (PlayerCurXp != other.PlayerCurXp) return false;
    if (PlayerXpBonusFlags != other.PlayerXpBonusFlags) return false;
    if(!rankings_.Equals(other.rankings_)) return false;
    if (Owcaseid != other.Owcaseid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (ongoingmatch_ != null) hash ^= Ongoingmatch.GetHashCode();
    if (globalStats_ != null) hash ^= GlobalStats.GetHashCode();
    if (HasPenaltySeconds) hash ^= PenaltySeconds.GetHashCode();
    if (HasPenaltyReason) hash ^= PenaltyReason.GetHashCode();
    if (HasVacBanned) hash ^= VacBanned.GetHashCode();
    if (ranking_ != null) hash ^= Ranking.GetHashCode();
    if (commendation_ != null) hash ^= Commendation.GetHashCode();
    if (medals_ != null) hash ^= Medals.GetHashCode();
    if (myCurrentEvent_ != null) hash ^= MyCurrentEvent.GetHashCode();
    hash ^= myCurrentEventTeams_.GetHashCode();
    if (myCurrentTeam_ != null) hash ^= MyCurrentTeam.GetHashCode();
    hash ^= myCurrentEventStages_.GetHashCode();
    if (HasSurveyVote) hash ^= SurveyVote.GetHashCode();
    if (activity_ != null) hash ^= Activity.GetHashCode();
    if (HasPlayerLevel) hash ^= PlayerLevel.GetHashCode();
    if (HasPlayerCurXp) hash ^= PlayerCurXp.GetHashCode();
    if (HasPlayerXpBonusFlags) hash ^= PlayerXpBonusFlags.GetHashCode();
    hash ^= rankings_.GetHashCode();
    if (HasOwcaseid) hash ^= Owcaseid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (ongoingmatch_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Ongoingmatch);
    }
    if (globalStats_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GlobalStats);
    }
    if (HasPenaltySeconds) {
      output.WriteRawTag(32);
      output.WriteUInt32(PenaltySeconds);
    }
    if (HasPenaltyReason) {
      output.WriteRawTag(40);
      output.WriteUInt32(PenaltyReason);
    }
    if (HasVacBanned) {
      output.WriteRawTag(48);
      output.WriteInt32(VacBanned);
    }
    if (ranking_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Ranking);
    }
    if (commendation_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Commendation);
    }
    if (medals_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Medals);
    }
    if (myCurrentEvent_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(MyCurrentEvent);
    }
    myCurrentEventTeams_.WriteTo(output, _repeated_myCurrentEventTeams_codec);
    if (myCurrentTeam_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(MyCurrentTeam);
    }
    myCurrentEventStages_.WriteTo(output, _repeated_myCurrentEventStages_codec);
    if (HasSurveyVote) {
      output.WriteRawTag(112);
      output.WriteUInt32(SurveyVote);
    }
    if (activity_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(Activity);
    }
    if (HasPlayerLevel) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(PlayerLevel);
    }
    if (HasPlayerCurXp) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(PlayerCurXp);
    }
    if (HasPlayerXpBonusFlags) {
      output.WriteRawTag(152, 1);
      output.WriteInt32(PlayerXpBonusFlags);
    }
    rankings_.WriteTo(output, _repeated_rankings_codec);
    if (HasOwcaseid) {
      output.WriteRawTag(168, 1);
      output.WriteUInt64(Owcaseid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (ongoingmatch_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Ongoingmatch);
    }
    if (globalStats_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GlobalStats);
    }
    if (HasPenaltySeconds) {
      output.WriteRawTag(32);
      output.WriteUInt32(PenaltySeconds);
    }
    if (HasPenaltyReason) {
      output.WriteRawTag(40);
      output.WriteUInt32(PenaltyReason);
    }
    if (HasVacBanned) {
      output.WriteRawTag(48);
      output.WriteInt32(VacBanned);
    }
    if (ranking_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Ranking);
    }
    if (commendation_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Commendation);
    }
    if (medals_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Medals);
    }
    if (myCurrentEvent_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(MyCurrentEvent);
    }
    myCurrentEventTeams_.WriteTo(ref output, _repeated_myCurrentEventTeams_codec);
    if (myCurrentTeam_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(MyCurrentTeam);
    }
    myCurrentEventStages_.WriteTo(ref output, _repeated_myCurrentEventStages_codec);
    if (HasSurveyVote) {
      output.WriteRawTag(112);
      output.WriteUInt32(SurveyVote);
    }
    if (activity_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(Activity);
    }
    if (HasPlayerLevel) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(PlayerLevel);
    }
    if (HasPlayerCurXp) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(PlayerCurXp);
    }
    if (HasPlayerXpBonusFlags) {
      output.WriteRawTag(152, 1);
      output.WriteInt32(PlayerXpBonusFlags);
    }
    rankings_.WriteTo(ref output, _repeated_rankings_codec);
    if (HasOwcaseid) {
      output.WriteRawTag(168, 1);
      output.WriteUInt64(Owcaseid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (ongoingmatch_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ongoingmatch);
    }
    if (globalStats_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlobalStats);
    }
    if (HasPenaltySeconds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PenaltySeconds);
    }
    if (HasPenaltyReason) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PenaltyReason);
    }
    if (HasVacBanned) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VacBanned);
    }
    if (ranking_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ranking);
    }
    if (commendation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Commendation);
    }
    if (medals_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Medals);
    }
    if (myCurrentEvent_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyCurrentEvent);
    }
    size += myCurrentEventTeams_.CalculateSize(_repeated_myCurrentEventTeams_codec);
    if (myCurrentTeam_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyCurrentTeam);
    }
    size += myCurrentEventStages_.CalculateSize(_repeated_myCurrentEventStages_codec);
    if (HasSurveyVote) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SurveyVote);
    }
    if (activity_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Activity);
    }
    if (HasPlayerLevel) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
    }
    if (HasPlayerCurXp) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(PlayerCurXp);
    }
    if (HasPlayerXpBonusFlags) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(PlayerXpBonusFlags);
    }
    size += rankings_.CalculateSize(_repeated_rankings_codec);
    if (HasOwcaseid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Owcaseid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientHello other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.ongoingmatch_ != null) {
      if (ongoingmatch_ == null) {
        Ongoingmatch = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
      }
      Ongoingmatch.MergeFrom(other.Ongoingmatch);
    }
    if (other.globalStats_ != null) {
      if (globalStats_ == null) {
        GlobalStats = new global::GlobalStatistics();
      }
      GlobalStats.MergeFrom(other.GlobalStats);
    }
    if (other.HasPenaltySeconds) {
      PenaltySeconds = other.PenaltySeconds;
    }
    if (other.HasPenaltyReason) {
      PenaltyReason = other.PenaltyReason;
    }
    if (other.HasVacBanned) {
      VacBanned = other.VacBanned;
    }
    if (other.ranking_ != null) {
      if (ranking_ == null) {
        Ranking = new global::PlayerRankingInfo();
      }
      Ranking.MergeFrom(other.Ranking);
    }
    if (other.commendation_ != null) {
      if (commendation_ == null) {
        Commendation = new global::PlayerCommendationInfo();
      }
      Commendation.MergeFrom(other.Commendation);
    }
    if (other.medals_ != null) {
      if (medals_ == null) {
        Medals = new global::PlayerMedalsInfo();
      }
      Medals.MergeFrom(other.Medals);
    }
    if (other.myCurrentEvent_ != null) {
      if (myCurrentEvent_ == null) {
        MyCurrentEvent = new global::TournamentEvent();
      }
      MyCurrentEvent.MergeFrom(other.MyCurrentEvent);
    }
    myCurrentEventTeams_.Add(other.myCurrentEventTeams_);
    if (other.myCurrentTeam_ != null) {
      if (myCurrentTeam_ == null) {
        MyCurrentTeam = new global::TournamentTeam();
      }
      MyCurrentTeam.MergeFrom(other.MyCurrentTeam);
    }
    myCurrentEventStages_.Add(other.myCurrentEventStages_);
    if (other.HasSurveyVote) {
      SurveyVote = other.SurveyVote;
    }
    if (other.activity_ != null) {
      if (activity_ == null) {
        Activity = new global::AccountActivity();
      }
      Activity.MergeFrom(other.Activity);
    }
    if (other.HasPlayerLevel) {
      PlayerLevel = other.PlayerLevel;
    }
    if (other.HasPlayerCurXp) {
      PlayerCurXp = other.PlayerCurXp;
    }
    if (other.HasPlayerXpBonusFlags) {
      PlayerXpBonusFlags = other.PlayerXpBonusFlags;
    }
    rankings_.Add(other.rankings_);
    if (other.HasOwcaseid) {
      Owcaseid = other.Owcaseid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (ongoingmatch_ == null) {
            Ongoingmatch = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
          }
          input.ReadMessage(Ongoingmatch);
          break;
        }
        case 26: {
          if (globalStats_ == null) {
            GlobalStats = new global::GlobalStatistics();
          }
          input.ReadMessage(GlobalStats);
          break;
        }
        case 32: {
          PenaltySeconds = input.ReadUInt32();
          break;
        }
        case 40: {
          PenaltyReason = input.ReadUInt32();
          break;
        }
        case 48: {
          VacBanned = input.ReadInt32();
          break;
        }
        case 58: {
          if (ranking_ == null) {
            Ranking = new global::PlayerRankingInfo();
          }
          input.ReadMessage(Ranking);
          break;
        }
        case 66: {
          if (commendation_ == null) {
            Commendation = new global::PlayerCommendationInfo();
          }
          input.ReadMessage(Commendation);
          break;
        }
        case 74: {
          if (medals_ == null) {
            Medals = new global::PlayerMedalsInfo();
          }
          input.ReadMessage(Medals);
          break;
        }
        case 82: {
          if (myCurrentEvent_ == null) {
            MyCurrentEvent = new global::TournamentEvent();
          }
          input.ReadMessage(MyCurrentEvent);
          break;
        }
        case 90: {
          myCurrentEventTeams_.AddEntriesFrom(input, _repeated_myCurrentEventTeams_codec);
          break;
        }
        case 98: {
          if (myCurrentTeam_ == null) {
            MyCurrentTeam = new global::TournamentTeam();
          }
          input.ReadMessage(MyCurrentTeam);
          break;
        }
        case 106: {
          myCurrentEventStages_.AddEntriesFrom(input, _repeated_myCurrentEventStages_codec);
          break;
        }
        case 112: {
          SurveyVote = input.ReadUInt32();
          break;
        }
        case 122: {
          if (activity_ == null) {
            Activity = new global::AccountActivity();
          }
          input.ReadMessage(Activity);
          break;
        }
        case 136: {
          PlayerLevel = input.ReadInt32();
          break;
        }
        case 144: {
          PlayerCurXp = input.ReadInt32();
          break;
        }
        case 152: {
          PlayerXpBonusFlags = input.ReadInt32();
          break;
        }
        case 162: {
          rankings_.AddEntriesFrom(input, _repeated_rankings_codec);
          break;
        }
        case 168: {
          Owcaseid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (ongoingmatch_ == null) {
            Ongoingmatch = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
          }
          input.ReadMessage(Ongoingmatch);
          break;
        }
        case 26: {
          if (globalStats_ == null) {
            GlobalStats = new global::GlobalStatistics();
          }
          input.ReadMessage(GlobalStats);
          break;
        }
        case 32: {
          PenaltySeconds = input.ReadUInt32();
          break;
        }
        case 40: {
          PenaltyReason = input.ReadUInt32();
          break;
        }
        case 48: {
          VacBanned = input.ReadInt32();
          break;
        }
        case 58: {
          if (ranking_ == null) {
            Ranking = new global::PlayerRankingInfo();
          }
          input.ReadMessage(Ranking);
          break;
        }
        case 66: {
          if (commendation_ == null) {
            Commendation = new global::PlayerCommendationInfo();
          }
          input.ReadMessage(Commendation);
          break;
        }
        case 74: {
          if (medals_ == null) {
            Medals = new global::PlayerMedalsInfo();
          }
          input.ReadMessage(Medals);
          break;
        }
        case 82: {
          if (myCurrentEvent_ == null) {
            MyCurrentEvent = new global::TournamentEvent();
          }
          input.ReadMessage(MyCurrentEvent);
          break;
        }
        case 90: {
          myCurrentEventTeams_.AddEntriesFrom(ref input, _repeated_myCurrentEventTeams_codec);
          break;
        }
        case 98: {
          if (myCurrentTeam_ == null) {
            MyCurrentTeam = new global::TournamentTeam();
          }
          input.ReadMessage(MyCurrentTeam);
          break;
        }
        case 106: {
          myCurrentEventStages_.AddEntriesFrom(ref input, _repeated_myCurrentEventStages_codec);
          break;
        }
        case 112: {
          SurveyVote = input.ReadUInt32();
          break;
        }
        case 122: {
          if (activity_ == null) {
            Activity = new global::AccountActivity();
          }
          input.ReadMessage(Activity);
          break;
        }
        case 136: {
          PlayerLevel = input.ReadInt32();
          break;
        }
        case 144: {
          PlayerCurXp = input.ReadInt32();
          break;
        }
        case 152: {
          PlayerXpBonusFlags = input.ReadInt32();
          break;
        }
        case 162: {
          rankings_.AddEntriesFrom(ref input, _repeated_rankings_codec);
          break;
        }
        case 168: {
          Owcaseid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_AccountPrivacySettings : pb::IMessage<CMsgGCCStrike15_v2_AccountPrivacySettings>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_AccountPrivacySettings> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_AccountPrivacySettings>(() => new CMsgGCCStrike15_v2_AccountPrivacySettings());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_AccountPrivacySettings> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_AccountPrivacySettings() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_AccountPrivacySettings(CMsgGCCStrike15_v2_AccountPrivacySettings other) : this() {
    settings_ = other.settings_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_AccountPrivacySettings Clone() {
    return new CMsgGCCStrike15_v2_AccountPrivacySettings(this);
  }

  /// <summary>Field number for the "settings" field.</summary>
  public const int SettingsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_AccountPrivacySettings.Types.Setting> _repeated_settings_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgGCCStrike15_v2_AccountPrivacySettings.Types.Setting.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_AccountPrivacySettings.Types.Setting> settings_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_AccountPrivacySettings.Types.Setting>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_AccountPrivacySettings.Types.Setting> Settings {
    get { return settings_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_AccountPrivacySettings);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_AccountPrivacySettings other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!settings_.Equals(other.settings_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= settings_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    settings_.WriteTo(output, _repeated_settings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    settings_.WriteTo(ref output, _repeated_settings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += settings_.CalculateSize(_repeated_settings_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_AccountPrivacySettings other) {
    if (other == null) {
      return;
    }
    settings_.Add(other.settings_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          settings_.AddEntriesFrom(input, _repeated_settings_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          settings_.AddEntriesFrom(ref input, _repeated_settings_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_AccountPrivacySettings message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Setting : pb::IMessage<Setting>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Setting> _parser = new pb::MessageParser<Setting>(() => new Setting());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Setting> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_AccountPrivacySettings.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Setting() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Setting(Setting other) : this() {
        _hasBits0 = other._hasBits0;
        settingType_ = other.settingType_;
        settingValue_ = other.settingValue_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Setting Clone() {
        return new Setting(this);
      }

      /// <summary>Field number for the "setting_type" field.</summary>
      public const int SettingTypeFieldNumber = 1;
      private readonly static uint SettingTypeDefaultValue = 0;

      private uint settingType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SettingType {
        get { if ((_hasBits0 & 1) != 0) { return settingType_; } else { return SettingTypeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          settingType_ = value;
        }
      }
      /// <summary>Gets whether the "setting_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSettingType {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "setting_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSettingType() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "setting_value" field.</summary>
      public const int SettingValueFieldNumber = 2;
      private readonly static uint SettingValueDefaultValue = 0;

      private uint settingValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SettingValue {
        get { if ((_hasBits0 & 2) != 0) { return settingValue_; } else { return SettingValueDefaultValue; } }
        set {
          _hasBits0 |= 2;
          settingValue_ = value;
        }
      }
      /// <summary>Gets whether the "setting_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSettingValue {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "setting_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSettingValue() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Setting);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Setting other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (SettingType != other.SettingType) return false;
        if (SettingValue != other.SettingValue) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSettingType) hash ^= SettingType.GetHashCode();
        if (HasSettingValue) hash ^= SettingValue.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSettingType) {
          output.WriteRawTag(8);
          output.WriteUInt32(SettingType);
        }
        if (HasSettingValue) {
          output.WriteRawTag(16);
          output.WriteUInt32(SettingValue);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSettingType) {
          output.WriteRawTag(8);
          output.WriteUInt32(SettingType);
        }
        if (HasSettingValue) {
          output.WriteRawTag(16);
          output.WriteUInt32(SettingValue);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSettingType) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SettingType);
        }
        if (HasSettingValue) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SettingValue);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Setting other) {
        if (other == null) {
          return;
        }
        if (other.HasSettingType) {
          SettingType = other.SettingType;
        }
        if (other.HasSettingValue) {
          SettingValue = other.SettingValue;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              SettingType = input.ReadUInt32();
              break;
            }
            case 16: {
              SettingValue = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              SettingType = input.ReadUInt32();
              break;
            }
            case 16: {
              SettingValue = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon>(() => new CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    abandonedMatch_ = other.abandonedMatch_ != null ? other.abandonedMatch_.Clone() : null;
    penaltySeconds_ = other.penaltySeconds_;
    penaltyReason_ = other.penaltyReason_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "abandoned_match" field.</summary>
  public const int AbandonedMatchFieldNumber = 2;
  private global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve abandonedMatch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve AbandonedMatch {
    get { return abandonedMatch_; }
    set {
      abandonedMatch_ = value;
    }
  }

  /// <summary>Field number for the "penalty_seconds" field.</summary>
  public const int PenaltySecondsFieldNumber = 3;
  private readonly static uint PenaltySecondsDefaultValue = 0;

  private uint penaltySeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PenaltySeconds {
    get { if ((_hasBits0 & 2) != 0) { return penaltySeconds_; } else { return PenaltySecondsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      penaltySeconds_ = value;
    }
  }
  /// <summary>Gets whether the "penalty_seconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPenaltySeconds {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "penalty_seconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPenaltySeconds() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "penalty_reason" field.</summary>
  public const int PenaltyReasonFieldNumber = 4;
  private readonly static uint PenaltyReasonDefaultValue = 0;

  private uint penaltyReason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PenaltyReason {
    get { if ((_hasBits0 & 4) != 0) { return penaltyReason_; } else { return PenaltyReasonDefaultValue; } }
    set {
      _hasBits0 |= 4;
      penaltyReason_ = value;
    }
  }
  /// <summary>Gets whether the "penalty_reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPenaltyReason {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "penalty_reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPenaltyReason() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (!object.Equals(AbandonedMatch, other.AbandonedMatch)) return false;
    if (PenaltySeconds != other.PenaltySeconds) return false;
    if (PenaltyReason != other.PenaltyReason) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (abandonedMatch_ != null) hash ^= AbandonedMatch.GetHashCode();
    if (HasPenaltySeconds) hash ^= PenaltySeconds.GetHashCode();
    if (HasPenaltyReason) hash ^= PenaltyReason.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (abandonedMatch_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(AbandonedMatch);
    }
    if (HasPenaltySeconds) {
      output.WriteRawTag(24);
      output.WriteUInt32(PenaltySeconds);
    }
    if (HasPenaltyReason) {
      output.WriteRawTag(32);
      output.WriteUInt32(PenaltyReason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (abandonedMatch_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(AbandonedMatch);
    }
    if (HasPenaltySeconds) {
      output.WriteRawTag(24);
      output.WriteUInt32(PenaltySeconds);
    }
    if (HasPenaltyReason) {
      output.WriteRawTag(32);
      output.WriteUInt32(PenaltyReason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (abandonedMatch_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AbandonedMatch);
    }
    if (HasPenaltySeconds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PenaltySeconds);
    }
    if (HasPenaltyReason) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PenaltyReason);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.abandonedMatch_ != null) {
      if (abandonedMatch_ == null) {
        AbandonedMatch = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
      }
      AbandonedMatch.MergeFrom(other.AbandonedMatch);
    }
    if (other.HasPenaltySeconds) {
      PenaltySeconds = other.PenaltySeconds;
    }
    if (other.HasPenaltyReason) {
      PenaltyReason = other.PenaltyReason;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (abandonedMatch_ == null) {
            AbandonedMatch = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
          }
          input.ReadMessage(AbandonedMatch);
          break;
        }
        case 24: {
          PenaltySeconds = input.ReadUInt32();
          break;
        }
        case 32: {
          PenaltyReason = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (abandonedMatch_ == null) {
            AbandonedMatch = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
          }
          input.ReadMessage(AbandonedMatch);
          break;
        }
        case 24: {
          PenaltySeconds = input.ReadUInt32();
          break;
        }
        case 32: {
          PenaltyReason = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientGCRankUpdate : pb::IMessage<CMsgGCCStrike15_v2_ClientGCRankUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientGCRankUpdate> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientGCRankUpdate>(() => new CMsgGCCStrike15_v2_ClientGCRankUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientGCRankUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientGCRankUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientGCRankUpdate(CMsgGCCStrike15_v2_ClientGCRankUpdate other) : this() {
    rankings_ = other.rankings_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientGCRankUpdate Clone() {
    return new CMsgGCCStrike15_v2_ClientGCRankUpdate(this);
  }

  /// <summary>Field number for the "rankings" field.</summary>
  public const int RankingsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PlayerRankingInfo> _repeated_rankings_codec
      = pb::FieldCodec.ForMessage(10, global::PlayerRankingInfo.Parser);
  private readonly pbc::RepeatedField<global::PlayerRankingInfo> rankings_ = new pbc::RepeatedField<global::PlayerRankingInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PlayerRankingInfo> Rankings {
    get { return rankings_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientGCRankUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientGCRankUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rankings_.Equals(other.rankings_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rankings_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    rankings_.WriteTo(output, _repeated_rankings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    rankings_.WriteTo(ref output, _repeated_rankings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += rankings_.CalculateSize(_repeated_rankings_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientGCRankUpdate other) {
    if (other == null) {
      return;
    }
    rankings_.Add(other.rankings_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          rankings_.AddEntriesFrom(input, _repeated_rankings_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          rankings_.AddEntriesFrom(ref input, _repeated_rankings_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate>(() => new CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate other) : this() {
    mainPostUrl_ = other.mainPostUrl_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate(this);
  }

  /// <summary>Field number for the "main_post_url" field.</summary>
  public const int MainPostUrlFieldNumber = 1;
  private readonly static string MainPostUrlDefaultValue = "";

  private string mainPostUrl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MainPostUrl {
    get { return mainPostUrl_ ?? MainPostUrlDefaultValue; }
    set {
      mainPostUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "main_post_url" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMainPostUrl {
    get { return mainPostUrl_ != null; }
  }
  /// <summary>Clears the value of the "main_post_url" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMainPostUrl() {
    mainPostUrl_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MainPostUrl != other.MainPostUrl) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMainPostUrl) hash ^= MainPostUrl.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMainPostUrl) {
      output.WriteRawTag(10);
      output.WriteString(MainPostUrl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMainPostUrl) {
      output.WriteRawTag(10);
      output.WriteString(MainPostUrl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMainPostUrl) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MainPostUrl);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate other) {
    if (other == null) {
      return;
    }
    if (other.HasMainPostUrl) {
      MainPostUrl = other.MainPostUrl;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MainPostUrl = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          MainPostUrl = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ServerNotificationForUserPenalty : pb::IMessage<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty>(() => new CMsgGCCStrike15_v2_ServerNotificationForUserPenalty());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ServerNotificationForUserPenalty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ServerNotificationForUserPenalty(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    reason_ = other.reason_;
    seconds_ = other.seconds_;
    communicationCooldown_ = other.communicationCooldown_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ServerNotificationForUserPenalty Clone() {
    return new CMsgGCCStrike15_v2_ServerNotificationForUserPenalty(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "reason" field.</summary>
  public const int ReasonFieldNumber = 2;
  private readonly static uint ReasonDefaultValue = 0;

  private uint reason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Reason {
    get { if ((_hasBits0 & 2) != 0) { return reason_; } else { return ReasonDefaultValue; } }
    set {
      _hasBits0 |= 2;
      reason_ = value;
    }
  }
  /// <summary>Gets whether the "reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReason {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReason() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "seconds" field.</summary>
  public const int SecondsFieldNumber = 3;
  private readonly static uint SecondsDefaultValue = 0;

  private uint seconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Seconds {
    get { if ((_hasBits0 & 4) != 0) { return seconds_; } else { return SecondsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      seconds_ = value;
    }
  }
  /// <summary>Gets whether the "seconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeconds {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "seconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeconds() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "communication_cooldown" field.</summary>
  public const int CommunicationCooldownFieldNumber = 4;
  private readonly static bool CommunicationCooldownDefaultValue = false;

  private bool communicationCooldown_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CommunicationCooldown {
    get { if ((_hasBits0 & 8) != 0) { return communicationCooldown_; } else { return CommunicationCooldownDefaultValue; } }
    set {
      _hasBits0 |= 8;
      communicationCooldown_ = value;
    }
  }
  /// <summary>Gets whether the "communication_cooldown" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCommunicationCooldown {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "communication_cooldown" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCommunicationCooldown() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ServerNotificationForUserPenalty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (Reason != other.Reason) return false;
    if (Seconds != other.Seconds) return false;
    if (CommunicationCooldown != other.CommunicationCooldown) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasReason) hash ^= Reason.GetHashCode();
    if (HasSeconds) hash ^= Seconds.GetHashCode();
    if (HasCommunicationCooldown) hash ^= CommunicationCooldown.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasReason) {
      output.WriteRawTag(16);
      output.WriteUInt32(Reason);
    }
    if (HasSeconds) {
      output.WriteRawTag(24);
      output.WriteUInt32(Seconds);
    }
    if (HasCommunicationCooldown) {
      output.WriteRawTag(32);
      output.WriteBool(CommunicationCooldown);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasReason) {
      output.WriteRawTag(16);
      output.WriteUInt32(Reason);
    }
    if (HasSeconds) {
      output.WriteRawTag(24);
      output.WriteUInt32(Seconds);
    }
    if (HasCommunicationCooldown) {
      output.WriteRawTag(32);
      output.WriteBool(CommunicationCooldown);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasReason) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reason);
    }
    if (HasSeconds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seconds);
    }
    if (HasCommunicationCooldown) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ServerNotificationForUserPenalty other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasReason) {
      Reason = other.Reason;
    }
    if (other.HasSeconds) {
      Seconds = other.Seconds;
    }
    if (other.HasCommunicationCooldown) {
      CommunicationCooldown = other.CommunicationCooldown;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          Reason = input.ReadUInt32();
          break;
        }
        case 24: {
          Seconds = input.ReadUInt32();
          break;
        }
        case 32: {
          CommunicationCooldown = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          Reason = input.ReadUInt32();
          break;
        }
        case 24: {
          Seconds = input.ReadUInt32();
          break;
        }
        case 32: {
          CommunicationCooldown = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientReportPlayer : pb::IMessage<CMsgGCCStrike15_v2_ClientReportPlayer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientReportPlayer> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientReportPlayer>(() => new CMsgGCCStrike15_v2_ClientReportPlayer());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientReportPlayer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportPlayer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportPlayer(CMsgGCCStrike15_v2_ClientReportPlayer other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    rptAimbot_ = other.rptAimbot_;
    rptWallhack_ = other.rptWallhack_;
    rptSpeedhack_ = other.rptSpeedhack_;
    rptTeamharm_ = other.rptTeamharm_;
    rptTextabuse_ = other.rptTextabuse_;
    rptVoiceabuse_ = other.rptVoiceabuse_;
    matchId_ = other.matchId_;
    reportFromDemo_ = other.reportFromDemo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportPlayer Clone() {
    return new CMsgGCCStrike15_v2_ClientReportPlayer(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "rpt_aimbot" field.</summary>
  public const int RptAimbotFieldNumber = 2;
  private readonly static uint RptAimbotDefaultValue = 0;

  private uint rptAimbot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptAimbot {
    get { if ((_hasBits0 & 2) != 0) { return rptAimbot_; } else { return RptAimbotDefaultValue; } }
    set {
      _hasBits0 |= 2;
      rptAimbot_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_aimbot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptAimbot {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "rpt_aimbot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptAimbot() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "rpt_wallhack" field.</summary>
  public const int RptWallhackFieldNumber = 3;
  private readonly static uint RptWallhackDefaultValue = 0;

  private uint rptWallhack_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptWallhack {
    get { if ((_hasBits0 & 4) != 0) { return rptWallhack_; } else { return RptWallhackDefaultValue; } }
    set {
      _hasBits0 |= 4;
      rptWallhack_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_wallhack" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptWallhack {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "rpt_wallhack" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptWallhack() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "rpt_speedhack" field.</summary>
  public const int RptSpeedhackFieldNumber = 4;
  private readonly static uint RptSpeedhackDefaultValue = 0;

  private uint rptSpeedhack_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptSpeedhack {
    get { if ((_hasBits0 & 8) != 0) { return rptSpeedhack_; } else { return RptSpeedhackDefaultValue; } }
    set {
      _hasBits0 |= 8;
      rptSpeedhack_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_speedhack" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptSpeedhack {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "rpt_speedhack" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptSpeedhack() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "rpt_teamharm" field.</summary>
  public const int RptTeamharmFieldNumber = 5;
  private readonly static uint RptTeamharmDefaultValue = 0;

  private uint rptTeamharm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptTeamharm {
    get { if ((_hasBits0 & 16) != 0) { return rptTeamharm_; } else { return RptTeamharmDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rptTeamharm_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_teamharm" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptTeamharm {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rpt_teamharm" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptTeamharm() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "rpt_textabuse" field.</summary>
  public const int RptTextabuseFieldNumber = 6;
  private readonly static uint RptTextabuseDefaultValue = 0;

  private uint rptTextabuse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptTextabuse {
    get { if ((_hasBits0 & 32) != 0) { return rptTextabuse_; } else { return RptTextabuseDefaultValue; } }
    set {
      _hasBits0 |= 32;
      rptTextabuse_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_textabuse" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptTextabuse {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "rpt_textabuse" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptTextabuse() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "rpt_voiceabuse" field.</summary>
  public const int RptVoiceabuseFieldNumber = 7;
  private readonly static uint RptVoiceabuseDefaultValue = 0;

  private uint rptVoiceabuse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptVoiceabuse {
    get { if ((_hasBits0 & 64) != 0) { return rptVoiceabuse_; } else { return RptVoiceabuseDefaultValue; } }
    set {
      _hasBits0 |= 64;
      rptVoiceabuse_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_voiceabuse" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptVoiceabuse {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "rpt_voiceabuse" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptVoiceabuse() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 8;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 128) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 128;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "report_from_demo" field.</summary>
  public const int ReportFromDemoFieldNumber = 9;
  private readonly static bool ReportFromDemoDefaultValue = false;

  private bool reportFromDemo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ReportFromDemo {
    get { if ((_hasBits0 & 256) != 0) { return reportFromDemo_; } else { return ReportFromDemoDefaultValue; } }
    set {
      _hasBits0 |= 256;
      reportFromDemo_ = value;
    }
  }
  /// <summary>Gets whether the "report_from_demo" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReportFromDemo {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "report_from_demo" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReportFromDemo() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientReportPlayer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientReportPlayer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (RptAimbot != other.RptAimbot) return false;
    if (RptWallhack != other.RptWallhack) return false;
    if (RptSpeedhack != other.RptSpeedhack) return false;
    if (RptTeamharm != other.RptTeamharm) return false;
    if (RptTextabuse != other.RptTextabuse) return false;
    if (RptVoiceabuse != other.RptVoiceabuse) return false;
    if (MatchId != other.MatchId) return false;
    if (ReportFromDemo != other.ReportFromDemo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasRptAimbot) hash ^= RptAimbot.GetHashCode();
    if (HasRptWallhack) hash ^= RptWallhack.GetHashCode();
    if (HasRptSpeedhack) hash ^= RptSpeedhack.GetHashCode();
    if (HasRptTeamharm) hash ^= RptTeamharm.GetHashCode();
    if (HasRptTextabuse) hash ^= RptTextabuse.GetHashCode();
    if (HasRptVoiceabuse) hash ^= RptVoiceabuse.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (HasReportFromDemo) hash ^= ReportFromDemo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasRptAimbot) {
      output.WriteRawTag(16);
      output.WriteUInt32(RptAimbot);
    }
    if (HasRptWallhack) {
      output.WriteRawTag(24);
      output.WriteUInt32(RptWallhack);
    }
    if (HasRptSpeedhack) {
      output.WriteRawTag(32);
      output.WriteUInt32(RptSpeedhack);
    }
    if (HasRptTeamharm) {
      output.WriteRawTag(40);
      output.WriteUInt32(RptTeamharm);
    }
    if (HasRptTextabuse) {
      output.WriteRawTag(48);
      output.WriteUInt32(RptTextabuse);
    }
    if (HasRptVoiceabuse) {
      output.WriteRawTag(56);
      output.WriteUInt32(RptVoiceabuse);
    }
    if (HasMatchId) {
      output.WriteRawTag(64);
      output.WriteUInt64(MatchId);
    }
    if (HasReportFromDemo) {
      output.WriteRawTag(72);
      output.WriteBool(ReportFromDemo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasRptAimbot) {
      output.WriteRawTag(16);
      output.WriteUInt32(RptAimbot);
    }
    if (HasRptWallhack) {
      output.WriteRawTag(24);
      output.WriteUInt32(RptWallhack);
    }
    if (HasRptSpeedhack) {
      output.WriteRawTag(32);
      output.WriteUInt32(RptSpeedhack);
    }
    if (HasRptTeamharm) {
      output.WriteRawTag(40);
      output.WriteUInt32(RptTeamharm);
    }
    if (HasRptTextabuse) {
      output.WriteRawTag(48);
      output.WriteUInt32(RptTextabuse);
    }
    if (HasRptVoiceabuse) {
      output.WriteRawTag(56);
      output.WriteUInt32(RptVoiceabuse);
    }
    if (HasMatchId) {
      output.WriteRawTag(64);
      output.WriteUInt64(MatchId);
    }
    if (HasReportFromDemo) {
      output.WriteRawTag(72);
      output.WriteBool(ReportFromDemo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasRptAimbot) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptAimbot);
    }
    if (HasRptWallhack) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptWallhack);
    }
    if (HasRptSpeedhack) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptSpeedhack);
    }
    if (HasRptTeamharm) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptTeamharm);
    }
    if (HasRptTextabuse) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptTextabuse);
    }
    if (HasRptVoiceabuse) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptVoiceabuse);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (HasReportFromDemo) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientReportPlayer other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasRptAimbot) {
      RptAimbot = other.RptAimbot;
    }
    if (other.HasRptWallhack) {
      RptWallhack = other.RptWallhack;
    }
    if (other.HasRptSpeedhack) {
      RptSpeedhack = other.RptSpeedhack;
    }
    if (other.HasRptTeamharm) {
      RptTeamharm = other.RptTeamharm;
    }
    if (other.HasRptTextabuse) {
      RptTextabuse = other.RptTextabuse;
    }
    if (other.HasRptVoiceabuse) {
      RptVoiceabuse = other.RptVoiceabuse;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    if (other.HasReportFromDemo) {
      ReportFromDemo = other.ReportFromDemo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          RptAimbot = input.ReadUInt32();
          break;
        }
        case 24: {
          RptWallhack = input.ReadUInt32();
          break;
        }
        case 32: {
          RptSpeedhack = input.ReadUInt32();
          break;
        }
        case 40: {
          RptTeamharm = input.ReadUInt32();
          break;
        }
        case 48: {
          RptTextabuse = input.ReadUInt32();
          break;
        }
        case 56: {
          RptVoiceabuse = input.ReadUInt32();
          break;
        }
        case 64: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 72: {
          ReportFromDemo = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          RptAimbot = input.ReadUInt32();
          break;
        }
        case 24: {
          RptWallhack = input.ReadUInt32();
          break;
        }
        case 32: {
          RptSpeedhack = input.ReadUInt32();
          break;
        }
        case 40: {
          RptTeamharm = input.ReadUInt32();
          break;
        }
        case 48: {
          RptTextabuse = input.ReadUInt32();
          break;
        }
        case 56: {
          RptVoiceabuse = input.ReadUInt32();
          break;
        }
        case 64: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 72: {
          ReportFromDemo = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientCommendPlayer : pb::IMessage<CMsgGCCStrike15_v2_ClientCommendPlayer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientCommendPlayer> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientCommendPlayer>(() => new CMsgGCCStrike15_v2_ClientCommendPlayer());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientCommendPlayer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientCommendPlayer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientCommendPlayer(CMsgGCCStrike15_v2_ClientCommendPlayer other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    matchId_ = other.matchId_;
    commendation_ = other.commendation_ != null ? other.commendation_.Clone() : null;
    tokens_ = other.tokens_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientCommendPlayer Clone() {
    return new CMsgGCCStrike15_v2_ClientCommendPlayer(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 8;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 2) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "commendation" field.</summary>
  public const int CommendationFieldNumber = 9;
  private global::PlayerCommendationInfo commendation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerCommendationInfo Commendation {
    get { return commendation_; }
    set {
      commendation_ = value;
    }
  }

  /// <summary>Field number for the "tokens" field.</summary>
  public const int TokensFieldNumber = 10;
  private readonly static uint TokensDefaultValue = 0;

  private uint tokens_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Tokens {
    get { if ((_hasBits0 & 4) != 0) { return tokens_; } else { return TokensDefaultValue; } }
    set {
      _hasBits0 |= 4;
      tokens_ = value;
    }
  }
  /// <summary>Gets whether the "tokens" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTokens {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "tokens" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTokens() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientCommendPlayer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientCommendPlayer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (MatchId != other.MatchId) return false;
    if (!object.Equals(Commendation, other.Commendation)) return false;
    if (Tokens != other.Tokens) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (commendation_ != null) hash ^= Commendation.GetHashCode();
    if (HasTokens) hash ^= Tokens.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasMatchId) {
      output.WriteRawTag(64);
      output.WriteUInt64(MatchId);
    }
    if (commendation_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Commendation);
    }
    if (HasTokens) {
      output.WriteRawTag(80);
      output.WriteUInt32(Tokens);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasMatchId) {
      output.WriteRawTag(64);
      output.WriteUInt64(MatchId);
    }
    if (commendation_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Commendation);
    }
    if (HasTokens) {
      output.WriteRawTag(80);
      output.WriteUInt32(Tokens);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (commendation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Commendation);
    }
    if (HasTokens) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tokens);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientCommendPlayer other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    if (other.commendation_ != null) {
      if (commendation_ == null) {
        Commendation = new global::PlayerCommendationInfo();
      }
      Commendation.MergeFrom(other.Commendation);
    }
    if (other.HasTokens) {
      Tokens = other.Tokens;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 64: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 74: {
          if (commendation_ == null) {
            Commendation = new global::PlayerCommendationInfo();
          }
          input.ReadMessage(Commendation);
          break;
        }
        case 80: {
          Tokens = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 64: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 74: {
          if (commendation_ == null) {
            Commendation = new global::PlayerCommendationInfo();
          }
          input.ReadMessage(Commendation);
          break;
        }
        case 80: {
          Tokens = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientReportServer : pb::IMessage<CMsgGCCStrike15_v2_ClientReportServer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientReportServer> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientReportServer>(() => new CMsgGCCStrike15_v2_ClientReportServer());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientReportServer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportServer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportServer(CMsgGCCStrike15_v2_ClientReportServer other) : this() {
    _hasBits0 = other._hasBits0;
    rptPoorperf_ = other.rptPoorperf_;
    rptAbusivemodels_ = other.rptAbusivemodels_;
    rptBadmotd_ = other.rptBadmotd_;
    rptListingabuse_ = other.rptListingabuse_;
    rptInventoryabuse_ = other.rptInventoryabuse_;
    matchId_ = other.matchId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportServer Clone() {
    return new CMsgGCCStrike15_v2_ClientReportServer(this);
  }

  /// <summary>Field number for the "rpt_poorperf" field.</summary>
  public const int RptPoorperfFieldNumber = 1;
  private readonly static uint RptPoorperfDefaultValue = 0;

  private uint rptPoorperf_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptPoorperf {
    get { if ((_hasBits0 & 1) != 0) { return rptPoorperf_; } else { return RptPoorperfDefaultValue; } }
    set {
      _hasBits0 |= 1;
      rptPoorperf_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_poorperf" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptPoorperf {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "rpt_poorperf" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptPoorperf() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "rpt_abusivemodels" field.</summary>
  public const int RptAbusivemodelsFieldNumber = 2;
  private readonly static uint RptAbusivemodelsDefaultValue = 0;

  private uint rptAbusivemodels_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptAbusivemodels {
    get { if ((_hasBits0 & 2) != 0) { return rptAbusivemodels_; } else { return RptAbusivemodelsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      rptAbusivemodels_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_abusivemodels" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptAbusivemodels {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "rpt_abusivemodels" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptAbusivemodels() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "rpt_badmotd" field.</summary>
  public const int RptBadmotdFieldNumber = 3;
  private readonly static uint RptBadmotdDefaultValue = 0;

  private uint rptBadmotd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptBadmotd {
    get { if ((_hasBits0 & 4) != 0) { return rptBadmotd_; } else { return RptBadmotdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      rptBadmotd_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_badmotd" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptBadmotd {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "rpt_badmotd" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptBadmotd() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "rpt_listingabuse" field.</summary>
  public const int RptListingabuseFieldNumber = 4;
  private readonly static uint RptListingabuseDefaultValue = 0;

  private uint rptListingabuse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptListingabuse {
    get { if ((_hasBits0 & 8) != 0) { return rptListingabuse_; } else { return RptListingabuseDefaultValue; } }
    set {
      _hasBits0 |= 8;
      rptListingabuse_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_listingabuse" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptListingabuse {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "rpt_listingabuse" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptListingabuse() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "rpt_inventoryabuse" field.</summary>
  public const int RptInventoryabuseFieldNumber = 5;
  private readonly static uint RptInventoryabuseDefaultValue = 0;

  private uint rptInventoryabuse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptInventoryabuse {
    get { if ((_hasBits0 & 16) != 0) { return rptInventoryabuse_; } else { return RptInventoryabuseDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rptInventoryabuse_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_inventoryabuse" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptInventoryabuse {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rpt_inventoryabuse" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptInventoryabuse() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 8;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 32) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 32;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientReportServer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientReportServer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RptPoorperf != other.RptPoorperf) return false;
    if (RptAbusivemodels != other.RptAbusivemodels) return false;
    if (RptBadmotd != other.RptBadmotd) return false;
    if (RptListingabuse != other.RptListingabuse) return false;
    if (RptInventoryabuse != other.RptInventoryabuse) return false;
    if (MatchId != other.MatchId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRptPoorperf) hash ^= RptPoorperf.GetHashCode();
    if (HasRptAbusivemodels) hash ^= RptAbusivemodels.GetHashCode();
    if (HasRptBadmotd) hash ^= RptBadmotd.GetHashCode();
    if (HasRptListingabuse) hash ^= RptListingabuse.GetHashCode();
    if (HasRptInventoryabuse) hash ^= RptInventoryabuse.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRptPoorperf) {
      output.WriteRawTag(8);
      output.WriteUInt32(RptPoorperf);
    }
    if (HasRptAbusivemodels) {
      output.WriteRawTag(16);
      output.WriteUInt32(RptAbusivemodels);
    }
    if (HasRptBadmotd) {
      output.WriteRawTag(24);
      output.WriteUInt32(RptBadmotd);
    }
    if (HasRptListingabuse) {
      output.WriteRawTag(32);
      output.WriteUInt32(RptListingabuse);
    }
    if (HasRptInventoryabuse) {
      output.WriteRawTag(40);
      output.WriteUInt32(RptInventoryabuse);
    }
    if (HasMatchId) {
      output.WriteRawTag(64);
      output.WriteUInt64(MatchId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRptPoorperf) {
      output.WriteRawTag(8);
      output.WriteUInt32(RptPoorperf);
    }
    if (HasRptAbusivemodels) {
      output.WriteRawTag(16);
      output.WriteUInt32(RptAbusivemodels);
    }
    if (HasRptBadmotd) {
      output.WriteRawTag(24);
      output.WriteUInt32(RptBadmotd);
    }
    if (HasRptListingabuse) {
      output.WriteRawTag(32);
      output.WriteUInt32(RptListingabuse);
    }
    if (HasRptInventoryabuse) {
      output.WriteRawTag(40);
      output.WriteUInt32(RptInventoryabuse);
    }
    if (HasMatchId) {
      output.WriteRawTag(64);
      output.WriteUInt64(MatchId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRptPoorperf) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptPoorperf);
    }
    if (HasRptAbusivemodels) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptAbusivemodels);
    }
    if (HasRptBadmotd) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptBadmotd);
    }
    if (HasRptListingabuse) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptListingabuse);
    }
    if (HasRptInventoryabuse) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptInventoryabuse);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientReportServer other) {
    if (other == null) {
      return;
    }
    if (other.HasRptPoorperf) {
      RptPoorperf = other.RptPoorperf;
    }
    if (other.HasRptAbusivemodels) {
      RptAbusivemodels = other.RptAbusivemodels;
    }
    if (other.HasRptBadmotd) {
      RptBadmotd = other.RptBadmotd;
    }
    if (other.HasRptListingabuse) {
      RptListingabuse = other.RptListingabuse;
    }
    if (other.HasRptInventoryabuse) {
      RptInventoryabuse = other.RptInventoryabuse;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RptPoorperf = input.ReadUInt32();
          break;
        }
        case 16: {
          RptAbusivemodels = input.ReadUInt32();
          break;
        }
        case 24: {
          RptBadmotd = input.ReadUInt32();
          break;
        }
        case 32: {
          RptListingabuse = input.ReadUInt32();
          break;
        }
        case 40: {
          RptInventoryabuse = input.ReadUInt32();
          break;
        }
        case 64: {
          MatchId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RptPoorperf = input.ReadUInt32();
          break;
        }
        case 16: {
          RptAbusivemodels = input.ReadUInt32();
          break;
        }
        case 24: {
          RptBadmotd = input.ReadUInt32();
          break;
        }
        case 32: {
          RptListingabuse = input.ReadUInt32();
          break;
        }
        case 40: {
          RptInventoryabuse = input.ReadUInt32();
          break;
        }
        case 64: {
          MatchId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientReportResponse : pb::IMessage<CMsgGCCStrike15_v2_ClientReportResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientReportResponse> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientReportResponse>(() => new CMsgGCCStrike15_v2_ClientReportResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientReportResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportResponse(CMsgGCCStrike15_v2_ClientReportResponse other) : this() {
    _hasBits0 = other._hasBits0;
    confirmationId_ = other.confirmationId_;
    accountId_ = other.accountId_;
    serverIp_ = other.serverIp_;
    responseType_ = other.responseType_;
    responseResult_ = other.responseResult_;
    tokens_ = other.tokens_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportResponse Clone() {
    return new CMsgGCCStrike15_v2_ClientReportResponse(this);
  }

  /// <summary>Field number for the "confirmation_id" field.</summary>
  public const int ConfirmationIdFieldNumber = 1;
  private readonly static ulong ConfirmationIdDefaultValue = 0UL;

  private ulong confirmationId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ConfirmationId {
    get { if ((_hasBits0 & 1) != 0) { return confirmationId_; } else { return ConfirmationIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      confirmationId_ = value;
    }
  }
  /// <summary>Gets whether the "confirmation_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConfirmationId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "confirmation_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConfirmationId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 2;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 2) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "server_ip" field.</summary>
  public const int ServerIpFieldNumber = 3;
  private readonly static uint ServerIpDefaultValue = 0;

  private uint serverIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerIp {
    get { if ((_hasBits0 & 4) != 0) { return serverIp_; } else { return ServerIpDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serverIp_ = value;
    }
  }
  /// <summary>Gets whether the "server_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerIp {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "server_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerIp() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "response_type" field.</summary>
  public const int ResponseTypeFieldNumber = 4;
  private readonly static uint ResponseTypeDefaultValue = 0;

  private uint responseType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ResponseType {
    get { if ((_hasBits0 & 8) != 0) { return responseType_; } else { return ResponseTypeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      responseType_ = value;
    }
  }
  /// <summary>Gets whether the "response_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasResponseType {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "response_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearResponseType() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "response_result" field.</summary>
  public const int ResponseResultFieldNumber = 5;
  private readonly static uint ResponseResultDefaultValue = 0;

  private uint responseResult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ResponseResult {
    get { if ((_hasBits0 & 16) != 0) { return responseResult_; } else { return ResponseResultDefaultValue; } }
    set {
      _hasBits0 |= 16;
      responseResult_ = value;
    }
  }
  /// <summary>Gets whether the "response_result" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasResponseResult {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "response_result" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearResponseResult() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "tokens" field.</summary>
  public const int TokensFieldNumber = 6;
  private readonly static uint TokensDefaultValue = 0;

  private uint tokens_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Tokens {
    get { if ((_hasBits0 & 32) != 0) { return tokens_; } else { return TokensDefaultValue; } }
    set {
      _hasBits0 |= 32;
      tokens_ = value;
    }
  }
  /// <summary>Gets whether the "tokens" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTokens {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "tokens" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTokens() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientReportResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientReportResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConfirmationId != other.ConfirmationId) return false;
    if (AccountId != other.AccountId) return false;
    if (ServerIp != other.ServerIp) return false;
    if (ResponseType != other.ResponseType) return false;
    if (ResponseResult != other.ResponseResult) return false;
    if (Tokens != other.Tokens) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasConfirmationId) hash ^= ConfirmationId.GetHashCode();
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasServerIp) hash ^= ServerIp.GetHashCode();
    if (HasResponseType) hash ^= ResponseType.GetHashCode();
    if (HasResponseResult) hash ^= ResponseResult.GetHashCode();
    if (HasTokens) hash ^= Tokens.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasConfirmationId) {
      output.WriteRawTag(8);
      output.WriteUInt64(ConfirmationId);
    }
    if (HasAccountId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (HasServerIp) {
      output.WriteRawTag(24);
      output.WriteUInt32(ServerIp);
    }
    if (HasResponseType) {
      output.WriteRawTag(32);
      output.WriteUInt32(ResponseType);
    }
    if (HasResponseResult) {
      output.WriteRawTag(40);
      output.WriteUInt32(ResponseResult);
    }
    if (HasTokens) {
      output.WriteRawTag(48);
      output.WriteUInt32(Tokens);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasConfirmationId) {
      output.WriteRawTag(8);
      output.WriteUInt64(ConfirmationId);
    }
    if (HasAccountId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (HasServerIp) {
      output.WriteRawTag(24);
      output.WriteUInt32(ServerIp);
    }
    if (HasResponseType) {
      output.WriteRawTag(32);
      output.WriteUInt32(ResponseType);
    }
    if (HasResponseResult) {
      output.WriteRawTag(40);
      output.WriteUInt32(ResponseResult);
    }
    if (HasTokens) {
      output.WriteRawTag(48);
      output.WriteUInt32(Tokens);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasConfirmationId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConfirmationId);
    }
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasServerIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerIp);
    }
    if (HasResponseType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResponseType);
    }
    if (HasResponseResult) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResponseResult);
    }
    if (HasTokens) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tokens);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientReportResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasConfirmationId) {
      ConfirmationId = other.ConfirmationId;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasServerIp) {
      ServerIp = other.ServerIp;
    }
    if (other.HasResponseType) {
      ResponseType = other.ResponseType;
    }
    if (other.HasResponseResult) {
      ResponseResult = other.ResponseResult;
    }
    if (other.HasTokens) {
      Tokens = other.Tokens;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ConfirmationId = input.ReadUInt64();
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 24: {
          ServerIp = input.ReadUInt32();
          break;
        }
        case 32: {
          ResponseType = input.ReadUInt32();
          break;
        }
        case 40: {
          ResponseResult = input.ReadUInt32();
          break;
        }
        case 48: {
          Tokens = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ConfirmationId = input.ReadUInt64();
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 24: {
          ServerIp = input.ReadUInt32();
          break;
        }
        case 32: {
          ResponseType = input.ReadUInt32();
          break;
        }
        case 40: {
          ResponseResult = input.ReadUInt32();
          break;
        }
        case 48: {
          Tokens = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends : pb::IMessage<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends>(() => new CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends other) : this() {
    _hasBits0 = other._hasBits0;
    requestId_ = other.requestId_;
    accountIds_ = other.accountIds_.Clone();
    serverid_ = other.serverid_;
    matchid_ = other.matchid_;
    clientLauncher_ = other.clientLauncher_;
    dataCenterPings_ = other.dataCenterPings_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends Clone() {
    return new CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends(this);
  }

  /// <summary>Field number for the "request_id" field.</summary>
  public const int RequestIdFieldNumber = 1;
  private readonly static uint RequestIdDefaultValue = 0;

  private uint requestId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RequestId {
    get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      requestId_ = value;
    }
  }
  /// <summary>Gets whether the "request_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRequestId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "request_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRequestId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_ids" field.</summary>
  public const int AccountIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_accountIds_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> accountIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AccountIds {
    get { return accountIds_; }
  }

  /// <summary>Field number for the "serverid" field.</summary>
  public const int ServeridFieldNumber = 3;
  private readonly static ulong ServeridDefaultValue = 0UL;

  private ulong serverid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Serverid {
    get { if ((_hasBits0 & 2) != 0) { return serverid_; } else { return ServeridDefaultValue; } }
    set {
      _hasBits0 |= 2;
      serverid_ = value;
    }
  }
  /// <summary>Gets whether the "serverid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "serverid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "matchid" field.</summary>
  public const int MatchidFieldNumber = 4;
  private readonly static ulong MatchidDefaultValue = 0UL;

  private ulong matchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Matchid {
    get { if ((_hasBits0 & 4) != 0) { return matchid_; } else { return MatchidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      matchid_ = value;
    }
  }
  /// <summary>Gets whether the "matchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "matchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "client_launcher" field.</summary>
  public const int ClientLauncherFieldNumber = 5;
  private readonly static uint ClientLauncherDefaultValue = 0;

  private uint clientLauncher_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientLauncher {
    get { if ((_hasBits0 & 8) != 0) { return clientLauncher_; } else { return ClientLauncherDefaultValue; } }
    set {
      _hasBits0 |= 8;
      clientLauncher_ = value;
    }
  }
  /// <summary>Gets whether the "client_launcher" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientLauncher {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "client_launcher" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientLauncher() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "data_center_pings" field.</summary>
  public const int DataCenterPingsFieldNumber = 6;
  private static readonly pb::FieldCodec<global::DataCenterPing> _repeated_dataCenterPings_codec
      = pb::FieldCodec.ForMessage(50, global::DataCenterPing.Parser);
  private readonly pbc::RepeatedField<global::DataCenterPing> dataCenterPings_ = new pbc::RepeatedField<global::DataCenterPing>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::DataCenterPing> DataCenterPings {
    get { return dataCenterPings_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RequestId != other.RequestId) return false;
    if(!accountIds_.Equals(other.accountIds_)) return false;
    if (Serverid != other.Serverid) return false;
    if (Matchid != other.Matchid) return false;
    if (ClientLauncher != other.ClientLauncher) return false;
    if(!dataCenterPings_.Equals(other.dataCenterPings_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRequestId) hash ^= RequestId.GetHashCode();
    hash ^= accountIds_.GetHashCode();
    if (HasServerid) hash ^= Serverid.GetHashCode();
    if (HasMatchid) hash ^= Matchid.GetHashCode();
    if (HasClientLauncher) hash ^= ClientLauncher.GetHashCode();
    hash ^= dataCenterPings_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRequestId) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestId);
    }
    accountIds_.WriteTo(output, _repeated_accountIds_codec);
    if (HasServerid) {
      output.WriteRawTag(24);
      output.WriteUInt64(Serverid);
    }
    if (HasMatchid) {
      output.WriteRawTag(32);
      output.WriteUInt64(Matchid);
    }
    if (HasClientLauncher) {
      output.WriteRawTag(40);
      output.WriteUInt32(ClientLauncher);
    }
    dataCenterPings_.WriteTo(output, _repeated_dataCenterPings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRequestId) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestId);
    }
    accountIds_.WriteTo(ref output, _repeated_accountIds_codec);
    if (HasServerid) {
      output.WriteRawTag(24);
      output.WriteUInt64(Serverid);
    }
    if (HasMatchid) {
      output.WriteRawTag(32);
      output.WriteUInt64(Matchid);
    }
    if (HasClientLauncher) {
      output.WriteRawTag(40);
      output.WriteUInt32(ClientLauncher);
    }
    dataCenterPings_.WriteTo(ref output, _repeated_dataCenterPings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRequestId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
    }
    size += accountIds_.CalculateSize(_repeated_accountIds_codec);
    if (HasServerid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Serverid);
    }
    if (HasMatchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Matchid);
    }
    if (HasClientLauncher) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientLauncher);
    }
    size += dataCenterPings_.CalculateSize(_repeated_dataCenterPings_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends other) {
    if (other == null) {
      return;
    }
    if (other.HasRequestId) {
      RequestId = other.RequestId;
    }
    accountIds_.Add(other.accountIds_);
    if (other.HasServerid) {
      Serverid = other.Serverid;
    }
    if (other.HasMatchid) {
      Matchid = other.Matchid;
    }
    if (other.HasClientLauncher) {
      ClientLauncher = other.ClientLauncher;
    }
    dataCenterPings_.Add(other.dataCenterPings_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RequestId = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          accountIds_.AddEntriesFrom(input, _repeated_accountIds_codec);
          break;
        }
        case 24: {
          Serverid = input.ReadUInt64();
          break;
        }
        case 32: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 40: {
          ClientLauncher = input.ReadUInt32();
          break;
        }
        case 50: {
          dataCenterPings_.AddEntriesFrom(input, _repeated_dataCenterPings_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RequestId = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          accountIds_.AddEntriesFrom(ref input, _repeated_accountIds_codec);
          break;
        }
        case 24: {
          Serverid = input.ReadUInt64();
          break;
        }
        case 32: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 40: {
          ClientLauncher = input.ReadUInt32();
          break;
        }
        case 50: {
          dataCenterPings_.AddEntriesFrom(ref input, _repeated_dataCenterPings_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WatchableMatchInfo : pb::IMessage<WatchableMatchInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WatchableMatchInfo> _parser = new pb::MessageParser<WatchableMatchInfo>(() => new WatchableMatchInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<WatchableMatchInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public WatchableMatchInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public WatchableMatchInfo(WatchableMatchInfo other) : this() {
    _hasBits0 = other._hasBits0;
    serverIp_ = other.serverIp_;
    tvPort_ = other.tvPort_;
    tvSpectators_ = other.tvSpectators_;
    tvTime_ = other.tvTime_;
    tvWatchPassword_ = other.tvWatchPassword_;
    clDecryptdataKey_ = other.clDecryptdataKey_;
    clDecryptdataKeyPub_ = other.clDecryptdataKeyPub_;
    gameType_ = other.gameType_;
    gameMapgroup_ = other.gameMapgroup_;
    gameMap_ = other.gameMap_;
    serverId_ = other.serverId_;
    matchId_ = other.matchId_;
    reservationId_ = other.reservationId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public WatchableMatchInfo Clone() {
    return new WatchableMatchInfo(this);
  }

  /// <summary>Field number for the "server_ip" field.</summary>
  public const int ServerIpFieldNumber = 1;
  private readonly static uint ServerIpDefaultValue = 0;

  private uint serverIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerIp {
    get { if ((_hasBits0 & 1) != 0) { return serverIp_; } else { return ServerIpDefaultValue; } }
    set {
      _hasBits0 |= 1;
      serverIp_ = value;
    }
  }
  /// <summary>Gets whether the "server_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerIp {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "server_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerIp() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "tv_port" field.</summary>
  public const int TvPortFieldNumber = 2;
  private readonly static uint TvPortDefaultValue = 0;

  private uint tvPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvPort {
    get { if ((_hasBits0 & 2) != 0) { return tvPort_; } else { return TvPortDefaultValue; } }
    set {
      _hasBits0 |= 2;
      tvPort_ = value;
    }
  }
  /// <summary>Gets whether the "tv_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvPort {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "tv_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvPort() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "tv_spectators" field.</summary>
  public const int TvSpectatorsFieldNumber = 3;
  private readonly static uint TvSpectatorsDefaultValue = 0;

  private uint tvSpectators_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvSpectators {
    get { if ((_hasBits0 & 4) != 0) { return tvSpectators_; } else { return TvSpectatorsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      tvSpectators_ = value;
    }
  }
  /// <summary>Gets whether the "tv_spectators" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvSpectators {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "tv_spectators" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvSpectators() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "tv_time" field.</summary>
  public const int TvTimeFieldNumber = 4;
  private readonly static uint TvTimeDefaultValue = 0;

  private uint tvTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TvTime {
    get { if ((_hasBits0 & 8) != 0) { return tvTime_; } else { return TvTimeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      tvTime_ = value;
    }
  }
  /// <summary>Gets whether the "tv_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvTime {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "tv_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvTime() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "tv_watch_password" field.</summary>
  public const int TvWatchPasswordFieldNumber = 5;
  private readonly static pb::ByteString TvWatchPasswordDefaultValue = pb::ByteString.Empty;

  private pb::ByteString tvWatchPassword_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString TvWatchPassword {
    get { return tvWatchPassword_ ?? TvWatchPasswordDefaultValue; }
    set {
      tvWatchPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "tv_watch_password" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTvWatchPassword {
    get { return tvWatchPassword_ != null; }
  }
  /// <summary>Clears the value of the "tv_watch_password" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTvWatchPassword() {
    tvWatchPassword_ = null;
  }

  /// <summary>Field number for the "cl_decryptdata_key" field.</summary>
  public const int ClDecryptdataKeyFieldNumber = 6;
  private readonly static ulong ClDecryptdataKeyDefaultValue = 0UL;

  private ulong clDecryptdataKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClDecryptdataKey {
    get { if ((_hasBits0 & 16) != 0) { return clDecryptdataKey_; } else { return ClDecryptdataKeyDefaultValue; } }
    set {
      _hasBits0 |= 16;
      clDecryptdataKey_ = value;
    }
  }
  /// <summary>Gets whether the "cl_decryptdata_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClDecryptdataKey {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "cl_decryptdata_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClDecryptdataKey() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "cl_decryptdata_key_pub" field.</summary>
  public const int ClDecryptdataKeyPubFieldNumber = 7;
  private readonly static ulong ClDecryptdataKeyPubDefaultValue = 0UL;

  private ulong clDecryptdataKeyPub_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClDecryptdataKeyPub {
    get { if ((_hasBits0 & 32) != 0) { return clDecryptdataKeyPub_; } else { return ClDecryptdataKeyPubDefaultValue; } }
    set {
      _hasBits0 |= 32;
      clDecryptdataKeyPub_ = value;
    }
  }
  /// <summary>Gets whether the "cl_decryptdata_key_pub" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClDecryptdataKeyPub {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "cl_decryptdata_key_pub" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClDecryptdataKeyPub() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "game_type" field.</summary>
  public const int GameTypeFieldNumber = 8;
  private readonly static uint GameTypeDefaultValue = 0;

  private uint gameType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameType {
    get { if ((_hasBits0 & 64) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
    set {
      _hasBits0 |= 64;
      gameType_ = value;
    }
  }
  /// <summary>Gets whether the "game_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameType {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "game_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameType() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "game_mapgroup" field.</summary>
  public const int GameMapgroupFieldNumber = 9;
  private readonly static string GameMapgroupDefaultValue = "";

  private string gameMapgroup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameMapgroup {
    get { return gameMapgroup_ ?? GameMapgroupDefaultValue; }
    set {
      gameMapgroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_mapgroup" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameMapgroup {
    get { return gameMapgroup_ != null; }
  }
  /// <summary>Clears the value of the "game_mapgroup" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameMapgroup() {
    gameMapgroup_ = null;
  }

  /// <summary>Field number for the "game_map" field.</summary>
  public const int GameMapFieldNumber = 10;
  private readonly static string GameMapDefaultValue = "";

  private string gameMap_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameMap {
    get { return gameMap_ ?? GameMapDefaultValue; }
    set {
      gameMap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_map" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameMap {
    get { return gameMap_ != null; }
  }
  /// <summary>Clears the value of the "game_map" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameMap() {
    gameMap_ = null;
  }

  /// <summary>Field number for the "server_id" field.</summary>
  public const int ServerIdFieldNumber = 11;
  private readonly static ulong ServerIdDefaultValue = 0UL;

  private ulong serverId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ServerId {
    get { if ((_hasBits0 & 128) != 0) { return serverId_; } else { return ServerIdDefaultValue; } }
    set {
      _hasBits0 |= 128;
      serverId_ = value;
    }
  }
  /// <summary>Gets whether the "server_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerId {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "server_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerId() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 12;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 256) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 256;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "reservation_id" field.</summary>
  public const int ReservationIdFieldNumber = 13;
  private readonly static ulong ReservationIdDefaultValue = 0UL;

  private ulong reservationId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ReservationId {
    get { if ((_hasBits0 & 512) != 0) { return reservationId_; } else { return ReservationIdDefaultValue; } }
    set {
      _hasBits0 |= 512;
      reservationId_ = value;
    }
  }
  /// <summary>Gets whether the "reservation_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservationId {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "reservation_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservationId() {
    _hasBits0 &= ~512;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as WatchableMatchInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(WatchableMatchInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServerIp != other.ServerIp) return false;
    if (TvPort != other.TvPort) return false;
    if (TvSpectators != other.TvSpectators) return false;
    if (TvTime != other.TvTime) return false;
    if (TvWatchPassword != other.TvWatchPassword) return false;
    if (ClDecryptdataKey != other.ClDecryptdataKey) return false;
    if (ClDecryptdataKeyPub != other.ClDecryptdataKeyPub) return false;
    if (GameType != other.GameType) return false;
    if (GameMapgroup != other.GameMapgroup) return false;
    if (GameMap != other.GameMap) return false;
    if (ServerId != other.ServerId) return false;
    if (MatchId != other.MatchId) return false;
    if (ReservationId != other.ReservationId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasServerIp) hash ^= ServerIp.GetHashCode();
    if (HasTvPort) hash ^= TvPort.GetHashCode();
    if (HasTvSpectators) hash ^= TvSpectators.GetHashCode();
    if (HasTvTime) hash ^= TvTime.GetHashCode();
    if (HasTvWatchPassword) hash ^= TvWatchPassword.GetHashCode();
    if (HasClDecryptdataKey) hash ^= ClDecryptdataKey.GetHashCode();
    if (HasClDecryptdataKeyPub) hash ^= ClDecryptdataKeyPub.GetHashCode();
    if (HasGameType) hash ^= GameType.GetHashCode();
    if (HasGameMapgroup) hash ^= GameMapgroup.GetHashCode();
    if (HasGameMap) hash ^= GameMap.GetHashCode();
    if (HasServerId) hash ^= ServerId.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (HasReservationId) hash ^= ReservationId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasServerIp) {
      output.WriteRawTag(8);
      output.WriteUInt32(ServerIp);
    }
    if (HasTvPort) {
      output.WriteRawTag(16);
      output.WriteUInt32(TvPort);
    }
    if (HasTvSpectators) {
      output.WriteRawTag(24);
      output.WriteUInt32(TvSpectators);
    }
    if (HasTvTime) {
      output.WriteRawTag(32);
      output.WriteUInt32(TvTime);
    }
    if (HasTvWatchPassword) {
      output.WriteRawTag(42);
      output.WriteBytes(TvWatchPassword);
    }
    if (HasClDecryptdataKey) {
      output.WriteRawTag(48);
      output.WriteUInt64(ClDecryptdataKey);
    }
    if (HasClDecryptdataKeyPub) {
      output.WriteRawTag(56);
      output.WriteUInt64(ClDecryptdataKeyPub);
    }
    if (HasGameType) {
      output.WriteRawTag(64);
      output.WriteUInt32(GameType);
    }
    if (HasGameMapgroup) {
      output.WriteRawTag(74);
      output.WriteString(GameMapgroup);
    }
    if (HasGameMap) {
      output.WriteRawTag(82);
      output.WriteString(GameMap);
    }
    if (HasServerId) {
      output.WriteRawTag(88);
      output.WriteUInt64(ServerId);
    }
    if (HasMatchId) {
      output.WriteRawTag(96);
      output.WriteUInt64(MatchId);
    }
    if (HasReservationId) {
      output.WriteRawTag(104);
      output.WriteUInt64(ReservationId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasServerIp) {
      output.WriteRawTag(8);
      output.WriteUInt32(ServerIp);
    }
    if (HasTvPort) {
      output.WriteRawTag(16);
      output.WriteUInt32(TvPort);
    }
    if (HasTvSpectators) {
      output.WriteRawTag(24);
      output.WriteUInt32(TvSpectators);
    }
    if (HasTvTime) {
      output.WriteRawTag(32);
      output.WriteUInt32(TvTime);
    }
    if (HasTvWatchPassword) {
      output.WriteRawTag(42);
      output.WriteBytes(TvWatchPassword);
    }
    if (HasClDecryptdataKey) {
      output.WriteRawTag(48);
      output.WriteUInt64(ClDecryptdataKey);
    }
    if (HasClDecryptdataKeyPub) {
      output.WriteRawTag(56);
      output.WriteUInt64(ClDecryptdataKeyPub);
    }
    if (HasGameType) {
      output.WriteRawTag(64);
      output.WriteUInt32(GameType);
    }
    if (HasGameMapgroup) {
      output.WriteRawTag(74);
      output.WriteString(GameMapgroup);
    }
    if (HasGameMap) {
      output.WriteRawTag(82);
      output.WriteString(GameMap);
    }
    if (HasServerId) {
      output.WriteRawTag(88);
      output.WriteUInt64(ServerId);
    }
    if (HasMatchId) {
      output.WriteRawTag(96);
      output.WriteUInt64(MatchId);
    }
    if (HasReservationId) {
      output.WriteRawTag(104);
      output.WriteUInt64(ReservationId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasServerIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerIp);
    }
    if (HasTvPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvPort);
    }
    if (HasTvSpectators) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvSpectators);
    }
    if (HasTvTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TvTime);
    }
    if (HasTvWatchPassword) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(TvWatchPassword);
    }
    if (HasClDecryptdataKey) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClDecryptdataKey);
    }
    if (HasClDecryptdataKeyPub) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClDecryptdataKeyPub);
    }
    if (HasGameType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
    }
    if (HasGameMapgroup) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameMapgroup);
    }
    if (HasGameMap) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameMap);
    }
    if (HasServerId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerId);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (HasReservationId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReservationId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(WatchableMatchInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasServerIp) {
      ServerIp = other.ServerIp;
    }
    if (other.HasTvPort) {
      TvPort = other.TvPort;
    }
    if (other.HasTvSpectators) {
      TvSpectators = other.TvSpectators;
    }
    if (other.HasTvTime) {
      TvTime = other.TvTime;
    }
    if (other.HasTvWatchPassword) {
      TvWatchPassword = other.TvWatchPassword;
    }
    if (other.HasClDecryptdataKey) {
      ClDecryptdataKey = other.ClDecryptdataKey;
    }
    if (other.HasClDecryptdataKeyPub) {
      ClDecryptdataKeyPub = other.ClDecryptdataKeyPub;
    }
    if (other.HasGameType) {
      GameType = other.GameType;
    }
    if (other.HasGameMapgroup) {
      GameMapgroup = other.GameMapgroup;
    }
    if (other.HasGameMap) {
      GameMap = other.GameMap;
    }
    if (other.HasServerId) {
      ServerId = other.ServerId;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    if (other.HasReservationId) {
      ReservationId = other.ReservationId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ServerIp = input.ReadUInt32();
          break;
        }
        case 16: {
          TvPort = input.ReadUInt32();
          break;
        }
        case 24: {
          TvSpectators = input.ReadUInt32();
          break;
        }
        case 32: {
          TvTime = input.ReadUInt32();
          break;
        }
        case 42: {
          TvWatchPassword = input.ReadBytes();
          break;
        }
        case 48: {
          ClDecryptdataKey = input.ReadUInt64();
          break;
        }
        case 56: {
          ClDecryptdataKeyPub = input.ReadUInt64();
          break;
        }
        case 64: {
          GameType = input.ReadUInt32();
          break;
        }
        case 74: {
          GameMapgroup = input.ReadString();
          break;
        }
        case 82: {
          GameMap = input.ReadString();
          break;
        }
        case 88: {
          ServerId = input.ReadUInt64();
          break;
        }
        case 96: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 104: {
          ReservationId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ServerIp = input.ReadUInt32();
          break;
        }
        case 16: {
          TvPort = input.ReadUInt32();
          break;
        }
        case 24: {
          TvSpectators = input.ReadUInt32();
          break;
        }
        case 32: {
          TvTime = input.ReadUInt32();
          break;
        }
        case 42: {
          TvWatchPassword = input.ReadBytes();
          break;
        }
        case 48: {
          ClDecryptdataKey = input.ReadUInt64();
          break;
        }
        case 56: {
          ClDecryptdataKeyPub = input.ReadUInt64();
          break;
        }
        case 64: {
          GameType = input.ReadUInt32();
          break;
        }
        case 74: {
          GameMapgroup = input.ReadString();
          break;
        }
        case 82: {
          GameMap = input.ReadString();
          break;
        }
        case 88: {
          ServerId = input.ReadUInt64();
          break;
        }
        case 96: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 104: {
          ReservationId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientRequestJoinFriendData : pb::IMessage<CMsgGCCStrike15_v2_ClientRequestJoinFriendData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestJoinFriendData> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestJoinFriendData>(() => new CMsgGCCStrike15_v2_ClientRequestJoinFriendData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestJoinFriendData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestJoinFriendData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestJoinFriendData(CMsgGCCStrike15_v2_ClientRequestJoinFriendData other) : this() {
    _hasBits0 = other._hasBits0;
    version_ = other.version_;
    accountId_ = other.accountId_;
    joinToken_ = other.joinToken_;
    joinIpp_ = other.joinIpp_;
    res_ = other.res_ != null ? other.res_.Clone() : null;
    errormsg_ = other.errormsg_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestJoinFriendData Clone() {
    return new CMsgGCCStrike15_v2_ClientRequestJoinFriendData(this);
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 1;
  private readonly static uint VersionDefaultValue = 0;

  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Version {
    get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      version_ = value;
    }
  }
  /// <summary>Gets whether the "version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 2;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 2) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "join_token" field.</summary>
  public const int JoinTokenFieldNumber = 3;
  private readonly static uint JoinTokenDefaultValue = 0;

  private uint joinToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint JoinToken {
    get { if ((_hasBits0 & 4) != 0) { return joinToken_; } else { return JoinTokenDefaultValue; } }
    set {
      _hasBits0 |= 4;
      joinToken_ = value;
    }
  }
  /// <summary>Gets whether the "join_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJoinToken {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "join_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJoinToken() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "join_ipp" field.</summary>
  public const int JoinIppFieldNumber = 4;
  private readonly static uint JoinIppDefaultValue = 0;

  private uint joinIpp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint JoinIpp {
    get { if ((_hasBits0 & 8) != 0) { return joinIpp_; } else { return JoinIppDefaultValue; } }
    set {
      _hasBits0 |= 8;
      joinIpp_ = value;
    }
  }
  /// <summary>Gets whether the "join_ipp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJoinIpp {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "join_ipp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJoinIpp() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "res" field.</summary>
  public const int ResFieldNumber = 5;
  private global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve Res {
    get { return res_; }
    set {
      res_ = value;
    }
  }

  /// <summary>Field number for the "errormsg" field.</summary>
  public const int ErrormsgFieldNumber = 6;
  private readonly static string ErrormsgDefaultValue = "";

  private string errormsg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Errormsg {
    get { return errormsg_ ?? ErrormsgDefaultValue; }
    set {
      errormsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "errormsg" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasErrormsg {
    get { return errormsg_ != null; }
  }
  /// <summary>Clears the value of the "errormsg" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearErrormsg() {
    errormsg_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientRequestJoinFriendData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientRequestJoinFriendData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Version != other.Version) return false;
    if (AccountId != other.AccountId) return false;
    if (JoinToken != other.JoinToken) return false;
    if (JoinIpp != other.JoinIpp) return false;
    if (!object.Equals(Res, other.Res)) return false;
    if (Errormsg != other.Errormsg) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVersion) hash ^= Version.GetHashCode();
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasJoinToken) hash ^= JoinToken.GetHashCode();
    if (HasJoinIpp) hash ^= JoinIpp.GetHashCode();
    if (res_ != null) hash ^= Res.GetHashCode();
    if (HasErrormsg) hash ^= Errormsg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasAccountId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (HasJoinToken) {
      output.WriteRawTag(24);
      output.WriteUInt32(JoinToken);
    }
    if (HasJoinIpp) {
      output.WriteRawTag(32);
      output.WriteUInt32(JoinIpp);
    }
    if (res_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Res);
    }
    if (HasErrormsg) {
      output.WriteRawTag(50);
      output.WriteString(Errormsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasAccountId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (HasJoinToken) {
      output.WriteRawTag(24);
      output.WriteUInt32(JoinToken);
    }
    if (HasJoinIpp) {
      output.WriteRawTag(32);
      output.WriteUInt32(JoinIpp);
    }
    if (res_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Res);
    }
    if (HasErrormsg) {
      output.WriteRawTag(50);
      output.WriteString(Errormsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasJoinToken) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(JoinToken);
    }
    if (HasJoinIpp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(JoinIpp);
    }
    if (res_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Res);
    }
    if (HasErrormsg) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Errormsg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientRequestJoinFriendData other) {
    if (other == null) {
      return;
    }
    if (other.HasVersion) {
      Version = other.Version;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasJoinToken) {
      JoinToken = other.JoinToken;
    }
    if (other.HasJoinIpp) {
      JoinIpp = other.JoinIpp;
    }
    if (other.res_ != null) {
      if (res_ == null) {
        Res = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
      }
      Res.MergeFrom(other.Res);
    }
    if (other.HasErrormsg) {
      Errormsg = other.Errormsg;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 24: {
          JoinToken = input.ReadUInt32();
          break;
        }
        case 32: {
          JoinIpp = input.ReadUInt32();
          break;
        }
        case 42: {
          if (res_ == null) {
            Res = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
          }
          input.ReadMessage(Res);
          break;
        }
        case 50: {
          Errormsg = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 24: {
          JoinToken = input.ReadUInt32();
          break;
        }
        case 32: {
          JoinIpp = input.ReadUInt32();
          break;
        }
        case 42: {
          if (res_ == null) {
            Res = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
          }
          input.ReadMessage(Res);
          break;
        }
        case 50: {
          Errormsg = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientRequestJoinServerData : pb::IMessage<CMsgGCCStrike15_v2_ClientRequestJoinServerData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestJoinServerData> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestJoinServerData>(() => new CMsgGCCStrike15_v2_ClientRequestJoinServerData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestJoinServerData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestJoinServerData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestJoinServerData(CMsgGCCStrike15_v2_ClientRequestJoinServerData other) : this() {
    _hasBits0 = other._hasBits0;
    version_ = other.version_;
    accountId_ = other.accountId_;
    serverid_ = other.serverid_;
    serverIp_ = other.serverIp_;
    serverPort_ = other.serverPort_;
    res_ = other.res_ != null ? other.res_.Clone() : null;
    errormsg_ = other.errormsg_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestJoinServerData Clone() {
    return new CMsgGCCStrike15_v2_ClientRequestJoinServerData(this);
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 1;
  private readonly static uint VersionDefaultValue = 0;

  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Version {
    get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      version_ = value;
    }
  }
  /// <summary>Gets whether the "version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 2;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 2) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "serverid" field.</summary>
  public const int ServeridFieldNumber = 3;
  private readonly static ulong ServeridDefaultValue = 0UL;

  private ulong serverid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Serverid {
    get { if ((_hasBits0 & 4) != 0) { return serverid_; } else { return ServeridDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serverid_ = value;
    }
  }
  /// <summary>Gets whether the "serverid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "serverid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "server_ip" field.</summary>
  public const int ServerIpFieldNumber = 4;
  private readonly static uint ServerIpDefaultValue = 0;

  private uint serverIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerIp {
    get { if ((_hasBits0 & 8) != 0) { return serverIp_; } else { return ServerIpDefaultValue; } }
    set {
      _hasBits0 |= 8;
      serverIp_ = value;
    }
  }
  /// <summary>Gets whether the "server_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerIp {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "server_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerIp() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "server_port" field.</summary>
  public const int ServerPortFieldNumber = 5;
  private readonly static uint ServerPortDefaultValue = 0;

  private uint serverPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerPort {
    get { if ((_hasBits0 & 16) != 0) { return serverPort_; } else { return ServerPortDefaultValue; } }
    set {
      _hasBits0 |= 16;
      serverPort_ = value;
    }
  }
  /// <summary>Gets whether the "server_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerPort {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "server_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerPort() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "res" field.</summary>
  public const int ResFieldNumber = 6;
  private global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve Res {
    get { return res_; }
    set {
      res_ = value;
    }
  }

  /// <summary>Field number for the "errormsg" field.</summary>
  public const int ErrormsgFieldNumber = 7;
  private readonly static string ErrormsgDefaultValue = "";

  private string errormsg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Errormsg {
    get { return errormsg_ ?? ErrormsgDefaultValue; }
    set {
      errormsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "errormsg" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasErrormsg {
    get { return errormsg_ != null; }
  }
  /// <summary>Clears the value of the "errormsg" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearErrormsg() {
    errormsg_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientRequestJoinServerData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientRequestJoinServerData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Version != other.Version) return false;
    if (AccountId != other.AccountId) return false;
    if (Serverid != other.Serverid) return false;
    if (ServerIp != other.ServerIp) return false;
    if (ServerPort != other.ServerPort) return false;
    if (!object.Equals(Res, other.Res)) return false;
    if (Errormsg != other.Errormsg) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVersion) hash ^= Version.GetHashCode();
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasServerid) hash ^= Serverid.GetHashCode();
    if (HasServerIp) hash ^= ServerIp.GetHashCode();
    if (HasServerPort) hash ^= ServerPort.GetHashCode();
    if (res_ != null) hash ^= Res.GetHashCode();
    if (HasErrormsg) hash ^= Errormsg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasAccountId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (HasServerid) {
      output.WriteRawTag(24);
      output.WriteUInt64(Serverid);
    }
    if (HasServerIp) {
      output.WriteRawTag(32);
      output.WriteUInt32(ServerIp);
    }
    if (HasServerPort) {
      output.WriteRawTag(40);
      output.WriteUInt32(ServerPort);
    }
    if (res_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Res);
    }
    if (HasErrormsg) {
      output.WriteRawTag(58);
      output.WriteString(Errormsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasAccountId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (HasServerid) {
      output.WriteRawTag(24);
      output.WriteUInt64(Serverid);
    }
    if (HasServerIp) {
      output.WriteRawTag(32);
      output.WriteUInt32(ServerIp);
    }
    if (HasServerPort) {
      output.WriteRawTag(40);
      output.WriteUInt32(ServerPort);
    }
    if (res_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Res);
    }
    if (HasErrormsg) {
      output.WriteRawTag(58);
      output.WriteString(Errormsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasServerid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Serverid);
    }
    if (HasServerIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerIp);
    }
    if (HasServerPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerPort);
    }
    if (res_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Res);
    }
    if (HasErrormsg) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Errormsg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientRequestJoinServerData other) {
    if (other == null) {
      return;
    }
    if (other.HasVersion) {
      Version = other.Version;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasServerid) {
      Serverid = other.Serverid;
    }
    if (other.HasServerIp) {
      ServerIp = other.ServerIp;
    }
    if (other.HasServerPort) {
      ServerPort = other.ServerPort;
    }
    if (other.res_ != null) {
      if (res_ == null) {
        Res = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
      }
      Res.MergeFrom(other.Res);
    }
    if (other.HasErrormsg) {
      Errormsg = other.Errormsg;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 24: {
          Serverid = input.ReadUInt64();
          break;
        }
        case 32: {
          ServerIp = input.ReadUInt32();
          break;
        }
        case 40: {
          ServerPort = input.ReadUInt32();
          break;
        }
        case 50: {
          if (res_ == null) {
            Res = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
          }
          input.ReadMessage(Res);
          break;
        }
        case 58: {
          Errormsg = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 24: {
          Serverid = input.ReadUInt64();
          break;
        }
        case 32: {
          ServerIp = input.ReadUInt32();
          break;
        }
        case 40: {
          ServerPort = input.ReadUInt32();
          break;
        }
        case 50: {
          if (res_ == null) {
            Res = new global::CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve();
          }
          input.ReadMessage(Res);
          break;
        }
        case 58: {
          Errormsg = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCstrike15_v2_ClientRedeemMissionReward : pb::IMessage<CMsgGCCstrike15_v2_ClientRedeemMissionReward>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCstrike15_v2_ClientRedeemMissionReward> _parser = new pb::MessageParser<CMsgGCCstrike15_v2_ClientRedeemMissionReward>(() => new CMsgGCCstrike15_v2_ClientRedeemMissionReward());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCstrike15_v2_ClientRedeemMissionReward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_ClientRedeemMissionReward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_ClientRedeemMissionReward(CMsgGCCstrike15_v2_ClientRedeemMissionReward other) : this() {
    _hasBits0 = other._hasBits0;
    campaignId_ = other.campaignId_;
    redeemId_ = other.redeemId_;
    redeemableBalance_ = other.redeemableBalance_;
    expectedCost_ = other.expectedCost_;
    bidControl_ = other.bidControl_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_ClientRedeemMissionReward Clone() {
    return new CMsgGCCstrike15_v2_ClientRedeemMissionReward(this);
  }

  /// <summary>Field number for the "campaign_id" field.</summary>
  public const int CampaignIdFieldNumber = 1;
  private readonly static uint CampaignIdDefaultValue = 0;

  private uint campaignId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CampaignId {
    get { if ((_hasBits0 & 1) != 0) { return campaignId_; } else { return CampaignIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      campaignId_ = value;
    }
  }
  /// <summary>Gets whether the "campaign_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCampaignId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "campaign_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCampaignId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "redeem_id" field.</summary>
  public const int RedeemIdFieldNumber = 2;
  private readonly static uint RedeemIdDefaultValue = 0;

  private uint redeemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RedeemId {
    get { if ((_hasBits0 & 2) != 0) { return redeemId_; } else { return RedeemIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      redeemId_ = value;
    }
  }
  /// <summary>Gets whether the "redeem_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRedeemId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "redeem_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRedeemId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "redeemable_balance" field.</summary>
  public const int RedeemableBalanceFieldNumber = 3;
  private readonly static uint RedeemableBalanceDefaultValue = 0;

  private uint redeemableBalance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RedeemableBalance {
    get { if ((_hasBits0 & 4) != 0) { return redeemableBalance_; } else { return RedeemableBalanceDefaultValue; } }
    set {
      _hasBits0 |= 4;
      redeemableBalance_ = value;
    }
  }
  /// <summary>Gets whether the "redeemable_balance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRedeemableBalance {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "redeemable_balance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRedeemableBalance() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "expected_cost" field.</summary>
  public const int ExpectedCostFieldNumber = 4;
  private readonly static uint ExpectedCostDefaultValue = 0;

  private uint expectedCost_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ExpectedCost {
    get { if ((_hasBits0 & 8) != 0) { return expectedCost_; } else { return ExpectedCostDefaultValue; } }
    set {
      _hasBits0 |= 8;
      expectedCost_ = value;
    }
  }
  /// <summary>Gets whether the "expected_cost" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExpectedCost {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "expected_cost" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExpectedCost() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "bid_control" field.</summary>
  public const int BidControlFieldNumber = 5;
  private readonly static int BidControlDefaultValue = 0;

  private int bidControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int BidControl {
    get { if ((_hasBits0 & 16) != 0) { return bidControl_; } else { return BidControlDefaultValue; } }
    set {
      _hasBits0 |= 16;
      bidControl_ = value;
    }
  }
  /// <summary>Gets whether the "bid_control" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBidControl {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "bid_control" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBidControl() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCstrike15_v2_ClientRedeemMissionReward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCstrike15_v2_ClientRedeemMissionReward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CampaignId != other.CampaignId) return false;
    if (RedeemId != other.RedeemId) return false;
    if (RedeemableBalance != other.RedeemableBalance) return false;
    if (ExpectedCost != other.ExpectedCost) return false;
    if (BidControl != other.BidControl) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCampaignId) hash ^= CampaignId.GetHashCode();
    if (HasRedeemId) hash ^= RedeemId.GetHashCode();
    if (HasRedeemableBalance) hash ^= RedeemableBalance.GetHashCode();
    if (HasExpectedCost) hash ^= ExpectedCost.GetHashCode();
    if (HasBidControl) hash ^= BidControl.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCampaignId) {
      output.WriteRawTag(8);
      output.WriteUInt32(CampaignId);
    }
    if (HasRedeemId) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemId);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(24);
      output.WriteUInt32(RedeemableBalance);
    }
    if (HasExpectedCost) {
      output.WriteRawTag(32);
      output.WriteUInt32(ExpectedCost);
    }
    if (HasBidControl) {
      output.WriteRawTag(40);
      output.WriteInt32(BidControl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCampaignId) {
      output.WriteRawTag(8);
      output.WriteUInt32(CampaignId);
    }
    if (HasRedeemId) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemId);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(24);
      output.WriteUInt32(RedeemableBalance);
    }
    if (HasExpectedCost) {
      output.WriteRawTag(32);
      output.WriteUInt32(ExpectedCost);
    }
    if (HasBidControl) {
      output.WriteRawTag(40);
      output.WriteInt32(BidControl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCampaignId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CampaignId);
    }
    if (HasRedeemId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedeemId);
    }
    if (HasRedeemableBalance) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedeemableBalance);
    }
    if (HasExpectedCost) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpectedCost);
    }
    if (HasBidControl) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BidControl);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCstrike15_v2_ClientRedeemMissionReward other) {
    if (other == null) {
      return;
    }
    if (other.HasCampaignId) {
      CampaignId = other.CampaignId;
    }
    if (other.HasRedeemId) {
      RedeemId = other.RedeemId;
    }
    if (other.HasRedeemableBalance) {
      RedeemableBalance = other.RedeemableBalance;
    }
    if (other.HasExpectedCost) {
      ExpectedCost = other.ExpectedCost;
    }
    if (other.HasBidControl) {
      BidControl = other.BidControl;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CampaignId = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemId = input.ReadUInt32();
          break;
        }
        case 24: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 32: {
          ExpectedCost = input.ReadUInt32();
          break;
        }
        case 40: {
          BidControl = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CampaignId = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemId = input.ReadUInt32();
          break;
        }
        case 24: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 32: {
          ExpectedCost = input.ReadUInt32();
          break;
        }
        case 40: {
          BidControl = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCstrike15_v2_ClientRedeemFreeReward : pb::IMessage<CMsgGCCstrike15_v2_ClientRedeemFreeReward>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCstrike15_v2_ClientRedeemFreeReward> _parser = new pb::MessageParser<CMsgGCCstrike15_v2_ClientRedeemFreeReward>(() => new CMsgGCCstrike15_v2_ClientRedeemFreeReward());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCstrike15_v2_ClientRedeemFreeReward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_ClientRedeemFreeReward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_ClientRedeemFreeReward(CMsgGCCstrike15_v2_ClientRedeemFreeReward other) : this() {
    _hasBits0 = other._hasBits0;
    generationTime_ = other.generationTime_;
    redeemableBalance_ = other.redeemableBalance_;
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_ClientRedeemFreeReward Clone() {
    return new CMsgGCCstrike15_v2_ClientRedeemFreeReward(this);
  }

  /// <summary>Field number for the "generation_time" field.</summary>
  public const int GenerationTimeFieldNumber = 1;
  private readonly static uint GenerationTimeDefaultValue = 0;

  private uint generationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GenerationTime {
    get { if ((_hasBits0 & 1) != 0) { return generationTime_; } else { return GenerationTimeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      generationTime_ = value;
    }
  }
  /// <summary>Gets whether the "generation_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGenerationTime {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "generation_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGenerationTime() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "redeemable_balance" field.</summary>
  public const int RedeemableBalanceFieldNumber = 2;
  private readonly static uint RedeemableBalanceDefaultValue = 0;

  private uint redeemableBalance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RedeemableBalance {
    get { if ((_hasBits0 & 2) != 0) { return redeemableBalance_; } else { return RedeemableBalanceDefaultValue; } }
    set {
      _hasBits0 |= 2;
      redeemableBalance_ = value;
    }
  }
  /// <summary>Gets whether the "redeemable_balance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRedeemableBalance {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "redeemable_balance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRedeemableBalance() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 3;
  private static readonly pb::FieldCodec<ulong> _repeated_items_codec
      = pb::FieldCodec.ForUInt64(24);
  private readonly pbc::RepeatedField<ulong> items_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCstrike15_v2_ClientRedeemFreeReward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCstrike15_v2_ClientRedeemFreeReward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GenerationTime != other.GenerationTime) return false;
    if (RedeemableBalance != other.RedeemableBalance) return false;
    if(!items_.Equals(other.items_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGenerationTime) hash ^= GenerationTime.GetHashCode();
    if (HasRedeemableBalance) hash ^= RedeemableBalance.GetHashCode();
    hash ^= items_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGenerationTime) {
      output.WriteRawTag(8);
      output.WriteUInt32(GenerationTime);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemableBalance);
    }
    items_.WriteTo(output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGenerationTime) {
      output.WriteRawTag(8);
      output.WriteUInt32(GenerationTime);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemableBalance);
    }
    items_.WriteTo(ref output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGenerationTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GenerationTime);
    }
    if (HasRedeemableBalance) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedeemableBalance);
    }
    size += items_.CalculateSize(_repeated_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCstrike15_v2_ClientRedeemFreeReward other) {
    if (other == null) {
      return;
    }
    if (other.HasGenerationTime) {
      GenerationTime = other.GenerationTime;
    }
    if (other.HasRedeemableBalance) {
      RedeemableBalance = other.RedeemableBalance;
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GenerationTime = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          items_.AddEntriesFrom(input, _repeated_items_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          GenerationTime = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          items_.AddEntriesFrom(ref input, _repeated_items_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded : pb::IMessage<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded> _parser = new pb::MessageParser<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded>(() => new CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded other) : this() {
    _hasBits0 = other._hasBits0;
    xpProgressData_ = other.xpProgressData_.Clone();
    accountId_ = other.accountId_;
    currentXp_ = other.currentXp_;
    currentLevel_ = other.currentLevel_;
    upgradedDefidx_ = other.upgradedDefidx_;
    operationPointsAwarded_ = other.operationPointsAwarded_;
    freeRewards_ = other.freeRewards_;
    xpTrailRemaining_ = other.xpTrailRemaining_;
    xpTrailXpNeeded_ = other.xpTrailXpNeeded_;
    xpTrailLevel_ = other.xpTrailLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded Clone() {
    return new CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(this);
  }

  /// <summary>Field number for the "xp_progress_data" field.</summary>
  public const int XpProgressDataFieldNumber = 1;
  private static readonly pb::FieldCodec<global::XpProgressData> _repeated_xpProgressData_codec
      = pb::FieldCodec.ForMessage(10, global::XpProgressData.Parser);
  private readonly pbc::RepeatedField<global::XpProgressData> xpProgressData_ = new pbc::RepeatedField<global::XpProgressData>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::XpProgressData> XpProgressData {
    get { return xpProgressData_; }
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 2;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "current_xp" field.</summary>
  public const int CurrentXpFieldNumber = 3;
  private readonly static uint CurrentXpDefaultValue = 0;

  private uint currentXp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CurrentXp {
    get { if ((_hasBits0 & 2) != 0) { return currentXp_; } else { return CurrentXpDefaultValue; } }
    set {
      _hasBits0 |= 2;
      currentXp_ = value;
    }
  }
  /// <summary>Gets whether the "current_xp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrentXp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "current_xp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrentXp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "current_level" field.</summary>
  public const int CurrentLevelFieldNumber = 4;
  private readonly static uint CurrentLevelDefaultValue = 0;

  private uint currentLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CurrentLevel {
    get { if ((_hasBits0 & 4) != 0) { return currentLevel_; } else { return CurrentLevelDefaultValue; } }
    set {
      _hasBits0 |= 4;
      currentLevel_ = value;
    }
  }
  /// <summary>Gets whether the "current_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrentLevel {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "current_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrentLevel() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "upgraded_defidx" field.</summary>
  public const int UpgradedDefidxFieldNumber = 5;
  private readonly static uint UpgradedDefidxDefaultValue = 0;

  private uint upgradedDefidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UpgradedDefidx {
    get { if ((_hasBits0 & 8) != 0) { return upgradedDefidx_; } else { return UpgradedDefidxDefaultValue; } }
    set {
      _hasBits0 |= 8;
      upgradedDefidx_ = value;
    }
  }
  /// <summary>Gets whether the "upgraded_defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUpgradedDefidx {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "upgraded_defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUpgradedDefidx() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "operation_points_awarded" field.</summary>
  public const int OperationPointsAwardedFieldNumber = 6;
  private readonly static uint OperationPointsAwardedDefaultValue = 0;

  private uint operationPointsAwarded_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint OperationPointsAwarded {
    get { if ((_hasBits0 & 16) != 0) { return operationPointsAwarded_; } else { return OperationPointsAwardedDefaultValue; } }
    set {
      _hasBits0 |= 16;
      operationPointsAwarded_ = value;
    }
  }
  /// <summary>Gets whether the "operation_points_awarded" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOperationPointsAwarded {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "operation_points_awarded" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOperationPointsAwarded() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "free_rewards" field.</summary>
  public const int FreeRewardsFieldNumber = 7;
  private readonly static uint FreeRewardsDefaultValue = 0;

  private uint freeRewards_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FreeRewards {
    get { if ((_hasBits0 & 32) != 0) { return freeRewards_; } else { return FreeRewardsDefaultValue; } }
    set {
      _hasBits0 |= 32;
      freeRewards_ = value;
    }
  }
  /// <summary>Gets whether the "free_rewards" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFreeRewards {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "free_rewards" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFreeRewards() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "xp_trail_remaining" field.</summary>
  public const int XpTrailRemainingFieldNumber = 8;
  private readonly static uint XpTrailRemainingDefaultValue = 0;

  private uint xpTrailRemaining_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint XpTrailRemaining {
    get { if ((_hasBits0 & 64) != 0) { return xpTrailRemaining_; } else { return XpTrailRemainingDefaultValue; } }
    set {
      _hasBits0 |= 64;
      xpTrailRemaining_ = value;
    }
  }
  /// <summary>Gets whether the "xp_trail_remaining" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXpTrailRemaining {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "xp_trail_remaining" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXpTrailRemaining() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "xp_trail_xp_needed" field.</summary>
  public const int XpTrailXpNeededFieldNumber = 9;
  private readonly static int XpTrailXpNeededDefaultValue = 0;

  private int xpTrailXpNeeded_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int XpTrailXpNeeded {
    get { if ((_hasBits0 & 128) != 0) { return xpTrailXpNeeded_; } else { return XpTrailXpNeededDefaultValue; } }
    set {
      _hasBits0 |= 128;
      xpTrailXpNeeded_ = value;
    }
  }
  /// <summary>Gets whether the "xp_trail_xp_needed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXpTrailXpNeeded {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "xp_trail_xp_needed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXpTrailXpNeeded() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "xp_trail_level" field.</summary>
  public const int XpTrailLevelFieldNumber = 10;
  private readonly static uint XpTrailLevelDefaultValue = 0;

  private uint xpTrailLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint XpTrailLevel {
    get { if ((_hasBits0 & 256) != 0) { return xpTrailLevel_; } else { return XpTrailLevelDefaultValue; } }
    set {
      _hasBits0 |= 256;
      xpTrailLevel_ = value;
    }
  }
  /// <summary>Gets whether the "xp_trail_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXpTrailLevel {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "xp_trail_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXpTrailLevel() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!xpProgressData_.Equals(other.xpProgressData_)) return false;
    if (AccountId != other.AccountId) return false;
    if (CurrentXp != other.CurrentXp) return false;
    if (CurrentLevel != other.CurrentLevel) return false;
    if (UpgradedDefidx != other.UpgradedDefidx) return false;
    if (OperationPointsAwarded != other.OperationPointsAwarded) return false;
    if (FreeRewards != other.FreeRewards) return false;
    if (XpTrailRemaining != other.XpTrailRemaining) return false;
    if (XpTrailXpNeeded != other.XpTrailXpNeeded) return false;
    if (XpTrailLevel != other.XpTrailLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= xpProgressData_.GetHashCode();
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasCurrentXp) hash ^= CurrentXp.GetHashCode();
    if (HasCurrentLevel) hash ^= CurrentLevel.GetHashCode();
    if (HasUpgradedDefidx) hash ^= UpgradedDefidx.GetHashCode();
    if (HasOperationPointsAwarded) hash ^= OperationPointsAwarded.GetHashCode();
    if (HasFreeRewards) hash ^= FreeRewards.GetHashCode();
    if (HasXpTrailRemaining) hash ^= XpTrailRemaining.GetHashCode();
    if (HasXpTrailXpNeeded) hash ^= XpTrailXpNeeded.GetHashCode();
    if (HasXpTrailLevel) hash ^= XpTrailLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    xpProgressData_.WriteTo(output, _repeated_xpProgressData_codec);
    if (HasAccountId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (HasCurrentXp) {
      output.WriteRawTag(24);
      output.WriteUInt32(CurrentXp);
    }
    if (HasCurrentLevel) {
      output.WriteRawTag(32);
      output.WriteUInt32(CurrentLevel);
    }
    if (HasUpgradedDefidx) {
      output.WriteRawTag(40);
      output.WriteUInt32(UpgradedDefidx);
    }
    if (HasOperationPointsAwarded) {
      output.WriteRawTag(48);
      output.WriteUInt32(OperationPointsAwarded);
    }
    if (HasFreeRewards) {
      output.WriteRawTag(56);
      output.WriteUInt32(FreeRewards);
    }
    if (HasXpTrailRemaining) {
      output.WriteRawTag(64);
      output.WriteUInt32(XpTrailRemaining);
    }
    if (HasXpTrailXpNeeded) {
      output.WriteRawTag(72);
      output.WriteInt32(XpTrailXpNeeded);
    }
    if (HasXpTrailLevel) {
      output.WriteRawTag(80);
      output.WriteUInt32(XpTrailLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    xpProgressData_.WriteTo(ref output, _repeated_xpProgressData_codec);
    if (HasAccountId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AccountId);
    }
    if (HasCurrentXp) {
      output.WriteRawTag(24);
      output.WriteUInt32(CurrentXp);
    }
    if (HasCurrentLevel) {
      output.WriteRawTag(32);
      output.WriteUInt32(CurrentLevel);
    }
    if (HasUpgradedDefidx) {
      output.WriteRawTag(40);
      output.WriteUInt32(UpgradedDefidx);
    }
    if (HasOperationPointsAwarded) {
      output.WriteRawTag(48);
      output.WriteUInt32(OperationPointsAwarded);
    }
    if (HasFreeRewards) {
      output.WriteRawTag(56);
      output.WriteUInt32(FreeRewards);
    }
    if (HasXpTrailRemaining) {
      output.WriteRawTag(64);
      output.WriteUInt32(XpTrailRemaining);
    }
    if (HasXpTrailXpNeeded) {
      output.WriteRawTag(72);
      output.WriteInt32(XpTrailXpNeeded);
    }
    if (HasXpTrailLevel) {
      output.WriteRawTag(80);
      output.WriteUInt32(XpTrailLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += xpProgressData_.CalculateSize(_repeated_xpProgressData_codec);
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasCurrentXp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentXp);
    }
    if (HasCurrentLevel) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentLevel);
    }
    if (HasUpgradedDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UpgradedDefidx);
    }
    if (HasOperationPointsAwarded) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OperationPointsAwarded);
    }
    if (HasFreeRewards) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FreeRewards);
    }
    if (HasXpTrailRemaining) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XpTrailRemaining);
    }
    if (HasXpTrailXpNeeded) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(XpTrailXpNeeded);
    }
    if (HasXpTrailLevel) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XpTrailLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded other) {
    if (other == null) {
      return;
    }
    xpProgressData_.Add(other.xpProgressData_);
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasCurrentXp) {
      CurrentXp = other.CurrentXp;
    }
    if (other.HasCurrentLevel) {
      CurrentLevel = other.CurrentLevel;
    }
    if (other.HasUpgradedDefidx) {
      UpgradedDefidx = other.UpgradedDefidx;
    }
    if (other.HasOperationPointsAwarded) {
      OperationPointsAwarded = other.OperationPointsAwarded;
    }
    if (other.HasFreeRewards) {
      FreeRewards = other.FreeRewards;
    }
    if (other.HasXpTrailRemaining) {
      XpTrailRemaining = other.XpTrailRemaining;
    }
    if (other.HasXpTrailXpNeeded) {
      XpTrailXpNeeded = other.XpTrailXpNeeded;
    }
    if (other.HasXpTrailLevel) {
      XpTrailLevel = other.XpTrailLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          xpProgressData_.AddEntriesFrom(input, _repeated_xpProgressData_codec);
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 24: {
          CurrentXp = input.ReadUInt32();
          break;
        }
        case 32: {
          CurrentLevel = input.ReadUInt32();
          break;
        }
        case 40: {
          UpgradedDefidx = input.ReadUInt32();
          break;
        }
        case 48: {
          OperationPointsAwarded = input.ReadUInt32();
          break;
        }
        case 56: {
          FreeRewards = input.ReadUInt32();
          break;
        }
        case 64: {
          XpTrailRemaining = input.ReadUInt32();
          break;
        }
        case 72: {
          XpTrailXpNeeded = input.ReadInt32();
          break;
        }
        case 80: {
          XpTrailLevel = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          xpProgressData_.AddEntriesFrom(ref input, _repeated_xpProgressData_codec);
          break;
        }
        case 16: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 24: {
          CurrentXp = input.ReadUInt32();
          break;
        }
        case 32: {
          CurrentLevel = input.ReadUInt32();
          break;
        }
        case 40: {
          UpgradedDefidx = input.ReadUInt32();
          break;
        }
        case 48: {
          OperationPointsAwarded = input.ReadUInt32();
          break;
        }
        case 56: {
          FreeRewards = input.ReadUInt32();
          break;
        }
        case 64: {
          XpTrailRemaining = input.ReadUInt32();
          break;
        }
        case 72: {
          XpTrailXpNeeded = input.ReadInt32();
          break;
        }
        case 80: {
          XpTrailLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientNetworkConfig : pb::IMessage<CMsgGCCStrike15_v2_ClientNetworkConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientNetworkConfig> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientNetworkConfig>(() => new CMsgGCCStrike15_v2_ClientNetworkConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientNetworkConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientNetworkConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientNetworkConfig(CMsgGCCStrike15_v2_ClientNetworkConfig other) : this() {
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientNetworkConfig Clone() {
    return new CMsgGCCStrike15_v2_ClientNetworkConfig(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Data {
    get { return data_ ?? DataDefaultValue; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return data_ != null; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    data_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientNetworkConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientNetworkConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasData) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasData) {
      output.WriteRawTag(10);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasData) {
      output.WriteRawTag(10);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientNetworkConfig other) {
    if (other == null) {
      return;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_ClientDeepStats : pb::IMessage<CMsgGCCStrike15_ClientDeepStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_ClientDeepStats> _parser = new pb::MessageParser<CMsgGCCStrike15_ClientDeepStats>(() => new CMsgGCCStrike15_ClientDeepStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_ClientDeepStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_ClientDeepStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_ClientDeepStats(CMsgGCCStrike15_ClientDeepStats other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    range_ = other.range_ != null ? other.range_.Clone() : null;
    matches_ = other.matches_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_ClientDeepStats Clone() {
    return new CMsgGCCStrike15_ClientDeepStats(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "range" field.</summary>
  public const int RangeFieldNumber = 2;
  private global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsRange range_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsRange Range {
    get { return range_; }
    set {
      range_ = value;
    }
  }

  /// <summary>Field number for the "matches" field.</summary>
  public const int MatchesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsMatch> _repeated_matches_codec
      = pb::FieldCodec.ForMessage(26, global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsMatch.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsMatch> matches_ = new pbc::RepeatedField<global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsMatch>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsMatch> Matches {
    get { return matches_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_ClientDeepStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_ClientDeepStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (!object.Equals(Range, other.Range)) return false;
    if(!matches_.Equals(other.matches_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (range_ != null) hash ^= Range.GetHashCode();
    hash ^= matches_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (range_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Range);
    }
    matches_.WriteTo(output, _repeated_matches_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (range_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Range);
    }
    matches_.WriteTo(ref output, _repeated_matches_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (range_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
    }
    size += matches_.CalculateSize(_repeated_matches_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_ClientDeepStats other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.range_ != null) {
      if (range_ == null) {
        Range = new global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsRange();
      }
      Range.MergeFrom(other.Range);
    }
    matches_.Add(other.matches_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (range_ == null) {
            Range = new global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsRange();
          }
          input.ReadMessage(Range);
          break;
        }
        case 26: {
          matches_.AddEntriesFrom(input, _repeated_matches_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (range_ == null) {
            Range = new global::CMsgGCCStrike15_ClientDeepStats.Types.DeepStatsRange();
          }
          input.ReadMessage(Range);
          break;
        }
        case 26: {
          matches_.AddEntriesFrom(ref input, _repeated_matches_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_ClientDeepStats message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class DeepStatsRange : pb::IMessage<DeepStatsRange>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DeepStatsRange> _parser = new pb::MessageParser<DeepStatsRange>(() => new DeepStatsRange());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DeepStatsRange> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_ClientDeepStats.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeepStatsRange() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeepStatsRange(DeepStatsRange other) : this() {
        _hasBits0 = other._hasBits0;
        begin_ = other.begin_;
        end_ = other.end_;
        frozen_ = other.frozen_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeepStatsRange Clone() {
        return new DeepStatsRange(this);
      }

      /// <summary>Field number for the "begin" field.</summary>
      public const int BeginFieldNumber = 1;
      private readonly static uint BeginDefaultValue = 0;

      private uint begin_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Begin {
        get { if ((_hasBits0 & 1) != 0) { return begin_; } else { return BeginDefaultValue; } }
        set {
          _hasBits0 |= 1;
          begin_ = value;
        }
      }
      /// <summary>Gets whether the "begin" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBegin {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "begin" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBegin() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "end" field.</summary>
      public const int EndFieldNumber = 2;
      private readonly static uint EndDefaultValue = 0;

      private uint end_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint End {
        get { if ((_hasBits0 & 2) != 0) { return end_; } else { return EndDefaultValue; } }
        set {
          _hasBits0 |= 2;
          end_ = value;
        }
      }
      /// <summary>Gets whether the "end" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEnd {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "end" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEnd() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "frozen" field.</summary>
      public const int FrozenFieldNumber = 3;
      private readonly static bool FrozenDefaultValue = false;

      private bool frozen_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Frozen {
        get { if ((_hasBits0 & 4) != 0) { return frozen_; } else { return FrozenDefaultValue; } }
        set {
          _hasBits0 |= 4;
          frozen_ = value;
        }
      }
      /// <summary>Gets whether the "frozen" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFrozen {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "frozen" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFrozen() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DeepStatsRange);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DeepStatsRange other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Begin != other.Begin) return false;
        if (End != other.End) return false;
        if (Frozen != other.Frozen) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasBegin) hash ^= Begin.GetHashCode();
        if (HasEnd) hash ^= End.GetHashCode();
        if (HasFrozen) hash ^= Frozen.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasBegin) {
          output.WriteRawTag(8);
          output.WriteUInt32(Begin);
        }
        if (HasEnd) {
          output.WriteRawTag(16);
          output.WriteUInt32(End);
        }
        if (HasFrozen) {
          output.WriteRawTag(24);
          output.WriteBool(Frozen);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasBegin) {
          output.WriteRawTag(8);
          output.WriteUInt32(Begin);
        }
        if (HasEnd) {
          output.WriteRawTag(16);
          output.WriteUInt32(End);
        }
        if (HasFrozen) {
          output.WriteRawTag(24);
          output.WriteBool(Frozen);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasBegin) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Begin);
        }
        if (HasEnd) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(End);
        }
        if (HasFrozen) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DeepStatsRange other) {
        if (other == null) {
          return;
        }
        if (other.HasBegin) {
          Begin = other.Begin;
        }
        if (other.HasEnd) {
          End = other.End;
        }
        if (other.HasFrozen) {
          Frozen = other.Frozen;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Begin = input.ReadUInt32();
              break;
            }
            case 16: {
              End = input.ReadUInt32();
              break;
            }
            case 24: {
              Frozen = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Begin = input.ReadUInt32();
              break;
            }
            case 16: {
              End = input.ReadUInt32();
              break;
            }
            case 24: {
              Frozen = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class DeepStatsMatch : pb::IMessage<DeepStatsMatch>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DeepStatsMatch> _parser = new pb::MessageParser<DeepStatsMatch>(() => new DeepStatsMatch());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DeepStatsMatch> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_ClientDeepStats.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeepStatsMatch() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeepStatsMatch(DeepStatsMatch other) : this() {
        player_ = other.player_ != null ? other.player_.Clone() : null;
        events_ = other.events_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeepStatsMatch Clone() {
        return new DeepStatsMatch(this);
      }

      /// <summary>Field number for the "player" field.</summary>
      public const int PlayerFieldNumber = 1;
      private global::DeepPlayerStatsEntry player_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::DeepPlayerStatsEntry Player {
        get { return player_; }
        set {
          player_ = value;
        }
      }

      /// <summary>Field number for the "events" field.</summary>
      public const int EventsFieldNumber = 2;
      private static readonly pb::FieldCodec<global::DeepPlayerMatchEvent> _repeated_events_codec
          = pb::FieldCodec.ForMessage(18, global::DeepPlayerMatchEvent.Parser);
      private readonly pbc::RepeatedField<global::DeepPlayerMatchEvent> events_ = new pbc::RepeatedField<global::DeepPlayerMatchEvent>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::DeepPlayerMatchEvent> Events {
        get { return events_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DeepStatsMatch);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DeepStatsMatch other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!object.Equals(Player, other.Player)) return false;
        if(!events_.Equals(other.events_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (player_ != null) hash ^= Player.GetHashCode();
        hash ^= events_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (player_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Player);
        }
        events_.WriteTo(output, _repeated_events_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (player_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Player);
        }
        events_.WriteTo(ref output, _repeated_events_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (player_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
        }
        size += events_.CalculateSize(_repeated_events_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DeepStatsMatch other) {
        if (other == null) {
          return;
        }
        if (other.player_ != null) {
          if (player_ == null) {
            Player = new global::DeepPlayerStatsEntry();
          }
          Player.MergeFrom(other.Player);
        }
        events_.Add(other.events_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              if (player_ == null) {
                Player = new global::DeepPlayerStatsEntry();
              }
              input.ReadMessage(Player);
              break;
            }
            case 18: {
              events_.AddEntriesFrom(input, _repeated_events_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              if (player_ == null) {
                Player = new global::DeepPlayerStatsEntry();
              }
              input.ReadMessage(Player);
              break;
            }
            case 18: {
              events_.AddEntriesFrom(ref input, _repeated_events_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_WatchInfoUsers : pb::IMessage<CMsgGCCStrike15_v2_WatchInfoUsers>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_WatchInfoUsers> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_WatchInfoUsers>(() => new CMsgGCCStrike15_v2_WatchInfoUsers());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_WatchInfoUsers> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_WatchInfoUsers() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_WatchInfoUsers(CMsgGCCStrike15_v2_WatchInfoUsers other) : this() {
    _hasBits0 = other._hasBits0;
    requestId_ = other.requestId_;
    accountIds_ = other.accountIds_.Clone();
    watchableMatchInfos_ = other.watchableMatchInfos_.Clone();
    extendedTimeout_ = other.extendedTimeout_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_WatchInfoUsers Clone() {
    return new CMsgGCCStrike15_v2_WatchInfoUsers(this);
  }

  /// <summary>Field number for the "request_id" field.</summary>
  public const int RequestIdFieldNumber = 1;
  private readonly static uint RequestIdDefaultValue = 0;

  private uint requestId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RequestId {
    get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      requestId_ = value;
    }
  }
  /// <summary>Gets whether the "request_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRequestId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "request_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRequestId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_ids" field.</summary>
  public const int AccountIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_accountIds_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> accountIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AccountIds {
    get { return accountIds_; }
  }

  /// <summary>Field number for the "watchable_match_infos" field.</summary>
  public const int WatchableMatchInfosFieldNumber = 3;
  private static readonly pb::FieldCodec<global::WatchableMatchInfo> _repeated_watchableMatchInfos_codec
      = pb::FieldCodec.ForMessage(26, global::WatchableMatchInfo.Parser);
  private readonly pbc::RepeatedField<global::WatchableMatchInfo> watchableMatchInfos_ = new pbc::RepeatedField<global::WatchableMatchInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::WatchableMatchInfo> WatchableMatchInfos {
    get { return watchableMatchInfos_; }
  }

  /// <summary>Field number for the "extended_timeout" field.</summary>
  public const int ExtendedTimeoutFieldNumber = 5;
  private readonly static uint ExtendedTimeoutDefaultValue = 0;

  private uint extendedTimeout_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ExtendedTimeout {
    get { if ((_hasBits0 & 2) != 0) { return extendedTimeout_; } else { return ExtendedTimeoutDefaultValue; } }
    set {
      _hasBits0 |= 2;
      extendedTimeout_ = value;
    }
  }
  /// <summary>Gets whether the "extended_timeout" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExtendedTimeout {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "extended_timeout" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExtendedTimeout() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_WatchInfoUsers);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_WatchInfoUsers other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RequestId != other.RequestId) return false;
    if(!accountIds_.Equals(other.accountIds_)) return false;
    if(!watchableMatchInfos_.Equals(other.watchableMatchInfos_)) return false;
    if (ExtendedTimeout != other.ExtendedTimeout) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRequestId) hash ^= RequestId.GetHashCode();
    hash ^= accountIds_.GetHashCode();
    hash ^= watchableMatchInfos_.GetHashCode();
    if (HasExtendedTimeout) hash ^= ExtendedTimeout.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRequestId) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestId);
    }
    accountIds_.WriteTo(output, _repeated_accountIds_codec);
    watchableMatchInfos_.WriteTo(output, _repeated_watchableMatchInfos_codec);
    if (HasExtendedTimeout) {
      output.WriteRawTag(40);
      output.WriteUInt32(ExtendedTimeout);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRequestId) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestId);
    }
    accountIds_.WriteTo(ref output, _repeated_accountIds_codec);
    watchableMatchInfos_.WriteTo(ref output, _repeated_watchableMatchInfos_codec);
    if (HasExtendedTimeout) {
      output.WriteRawTag(40);
      output.WriteUInt32(ExtendedTimeout);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRequestId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
    }
    size += accountIds_.CalculateSize(_repeated_accountIds_codec);
    size += watchableMatchInfos_.CalculateSize(_repeated_watchableMatchInfos_codec);
    if (HasExtendedTimeout) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExtendedTimeout);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_WatchInfoUsers other) {
    if (other == null) {
      return;
    }
    if (other.HasRequestId) {
      RequestId = other.RequestId;
    }
    accountIds_.Add(other.accountIds_);
    watchableMatchInfos_.Add(other.watchableMatchInfos_);
    if (other.HasExtendedTimeout) {
      ExtendedTimeout = other.ExtendedTimeout;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RequestId = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          accountIds_.AddEntriesFrom(input, _repeated_accountIds_codec);
          break;
        }
        case 26: {
          watchableMatchInfos_.AddEntriesFrom(input, _repeated_watchableMatchInfos_codec);
          break;
        }
        case 40: {
          ExtendedTimeout = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RequestId = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          accountIds_.AddEntriesFrom(ref input, _repeated_accountIds_codec);
          break;
        }
        case 26: {
          watchableMatchInfos_.AddEntriesFrom(ref input, _repeated_watchableMatchInfos_codec);
          break;
        }
        case 40: {
          ExtendedTimeout = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientRequestPlayersProfile : pb::IMessage<CMsgGCCStrike15_v2_ClientRequestPlayersProfile>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestPlayersProfile> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestPlayersProfile>(() => new CMsgGCCStrike15_v2_ClientRequestPlayersProfile());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestPlayersProfile> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestPlayersProfile() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestPlayersProfile(CMsgGCCStrike15_v2_ClientRequestPlayersProfile other) : this() {
    _hasBits0 = other._hasBits0;
    requestIdDeprecated_ = other.requestIdDeprecated_;
    accountIdsDeprecated_ = other.accountIdsDeprecated_.Clone();
    accountId_ = other.accountId_;
    requestLevel_ = other.requestLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestPlayersProfile Clone() {
    return new CMsgGCCStrike15_v2_ClientRequestPlayersProfile(this);
  }

  /// <summary>Field number for the "request_id__deprecated" field.</summary>
  public const int RequestIdDeprecatedFieldNumber = 1;
  private readonly static uint RequestIdDeprecatedDefaultValue = 0;

  private uint requestIdDeprecated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RequestIdDeprecated {
    get { if ((_hasBits0 & 1) != 0) { return requestIdDeprecated_; } else { return RequestIdDeprecatedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      requestIdDeprecated_ = value;
    }
  }
  /// <summary>Gets whether the "request_id__deprecated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRequestIdDeprecated {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "request_id__deprecated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRequestIdDeprecated() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_ids__deprecated" field.</summary>
  public const int AccountIdsDeprecatedFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_accountIdsDeprecated_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> accountIdsDeprecated_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AccountIdsDeprecated {
    get { return accountIdsDeprecated_; }
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 3;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 2) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "request_level" field.</summary>
  public const int RequestLevelFieldNumber = 4;
  private readonly static uint RequestLevelDefaultValue = 0;

  private uint requestLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RequestLevel {
    get { if ((_hasBits0 & 4) != 0) { return requestLevel_; } else { return RequestLevelDefaultValue; } }
    set {
      _hasBits0 |= 4;
      requestLevel_ = value;
    }
  }
  /// <summary>Gets whether the "request_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRequestLevel {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "request_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRequestLevel() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientRequestPlayersProfile);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientRequestPlayersProfile other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RequestIdDeprecated != other.RequestIdDeprecated) return false;
    if(!accountIdsDeprecated_.Equals(other.accountIdsDeprecated_)) return false;
    if (AccountId != other.AccountId) return false;
    if (RequestLevel != other.RequestLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRequestIdDeprecated) hash ^= RequestIdDeprecated.GetHashCode();
    hash ^= accountIdsDeprecated_.GetHashCode();
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasRequestLevel) hash ^= RequestLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRequestIdDeprecated) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestIdDeprecated);
    }
    accountIdsDeprecated_.WriteTo(output, _repeated_accountIdsDeprecated_codec);
    if (HasAccountId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AccountId);
    }
    if (HasRequestLevel) {
      output.WriteRawTag(32);
      output.WriteUInt32(RequestLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRequestIdDeprecated) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestIdDeprecated);
    }
    accountIdsDeprecated_.WriteTo(ref output, _repeated_accountIdsDeprecated_codec);
    if (HasAccountId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AccountId);
    }
    if (HasRequestLevel) {
      output.WriteRawTag(32);
      output.WriteUInt32(RequestLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRequestIdDeprecated) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestIdDeprecated);
    }
    size += accountIdsDeprecated_.CalculateSize(_repeated_accountIdsDeprecated_codec);
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasRequestLevel) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientRequestPlayersProfile other) {
    if (other == null) {
      return;
    }
    if (other.HasRequestIdDeprecated) {
      RequestIdDeprecated = other.RequestIdDeprecated;
    }
    accountIdsDeprecated_.Add(other.accountIdsDeprecated_);
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasRequestLevel) {
      RequestLevel = other.RequestLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RequestIdDeprecated = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          accountIdsDeprecated_.AddEntriesFrom(input, _repeated_accountIdsDeprecated_codec);
          break;
        }
        case 24: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 32: {
          RequestLevel = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RequestIdDeprecated = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          accountIdsDeprecated_.AddEntriesFrom(ref input, _repeated_accountIdsDeprecated_codec);
          break;
        }
        case 24: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 32: {
          RequestLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_PlayersProfile : pb::IMessage<CMsgGCCStrike15_v2_PlayersProfile>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_PlayersProfile> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_PlayersProfile>(() => new CMsgGCCStrike15_v2_PlayersProfile());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_PlayersProfile> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayersProfile() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayersProfile(CMsgGCCStrike15_v2_PlayersProfile other) : this() {
    _hasBits0 = other._hasBits0;
    requestId_ = other.requestId_;
    accountProfiles_ = other.accountProfiles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayersProfile Clone() {
    return new CMsgGCCStrike15_v2_PlayersProfile(this);
  }

  /// <summary>Field number for the "request_id" field.</summary>
  public const int RequestIdFieldNumber = 1;
  private readonly static uint RequestIdDefaultValue = 0;

  private uint requestId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RequestId {
    get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      requestId_ = value;
    }
  }
  /// <summary>Gets whether the "request_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRequestId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "request_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRequestId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_profiles" field.</summary>
  public const int AccountProfilesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello> _repeated_accountProfiles_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello> accountProfiles_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingGC2ClientHello> AccountProfiles {
    get { return accountProfiles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_PlayersProfile);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_PlayersProfile other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RequestId != other.RequestId) return false;
    if(!accountProfiles_.Equals(other.accountProfiles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRequestId) hash ^= RequestId.GetHashCode();
    hash ^= accountProfiles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRequestId) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestId);
    }
    accountProfiles_.WriteTo(output, _repeated_accountProfiles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRequestId) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestId);
    }
    accountProfiles_.WriteTo(ref output, _repeated_accountProfiles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRequestId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
    }
    size += accountProfiles_.CalculateSize(_repeated_accountProfiles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_PlayersProfile other) {
    if (other == null) {
      return;
    }
    if (other.HasRequestId) {
      RequestId = other.RequestId;
    }
    accountProfiles_.Add(other.accountProfiles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RequestId = input.ReadUInt32();
          break;
        }
        case 18: {
          accountProfiles_.AddEntriesFrom(input, _repeated_accountProfiles_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RequestId = input.ReadUInt32();
          break;
        }
        case 18: {
          accountProfiles_.AddEntriesFrom(ref input, _repeated_accountProfiles_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_PremierSeasonSummary : pb::IMessage<CMsgGCCStrike15_v2_PremierSeasonSummary>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_PremierSeasonSummary> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_PremierSeasonSummary>(() => new CMsgGCCStrike15_v2_PremierSeasonSummary());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_PremierSeasonSummary> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PremierSeasonSummary() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PremierSeasonSummary(CMsgGCCStrike15_v2_PremierSeasonSummary other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    seasonId_ = other.seasonId_;
    dataPerWeek_ = other.dataPerWeek_.Clone();
    dataPerMap_ = other.dataPerMap_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PremierSeasonSummary Clone() {
    return new CMsgGCCStrike15_v2_PremierSeasonSummary(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "season_id" field.</summary>
  public const int SeasonIdFieldNumber = 2;
  private readonly static uint SeasonIdDefaultValue = 0;

  private uint seasonId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SeasonId {
    get { if ((_hasBits0 & 2) != 0) { return seasonId_; } else { return SeasonIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      seasonId_ = value;
    }
  }
  /// <summary>Gets whether the "season_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeasonId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "season_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeasonId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "data_per_week" field.</summary>
  public const int DataPerWeekFieldNumber = 3;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerWeek> _repeated_dataPerWeek_codec
      = pb::FieldCodec.ForMessage(26, global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerWeek.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerWeek> dataPerWeek_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerWeek>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerWeek> DataPerWeek {
    get { return dataPerWeek_; }
  }

  /// <summary>Field number for the "data_per_map" field.</summary>
  public const int DataPerMapFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerMap> _repeated_dataPerMap_codec
      = pb::FieldCodec.ForMessage(34, global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerMap.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerMap> dataPerMap_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerMap>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_PremierSeasonSummary.Types.DataPerMap> DataPerMap {
    get { return dataPerMap_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_PremierSeasonSummary);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_PremierSeasonSummary other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (SeasonId != other.SeasonId) return false;
    if(!dataPerWeek_.Equals(other.dataPerWeek_)) return false;
    if(!dataPerMap_.Equals(other.dataPerMap_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasSeasonId) hash ^= SeasonId.GetHashCode();
    hash ^= dataPerWeek_.GetHashCode();
    hash ^= dataPerMap_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasSeasonId) {
      output.WriteRawTag(16);
      output.WriteUInt32(SeasonId);
    }
    dataPerWeek_.WriteTo(output, _repeated_dataPerWeek_codec);
    dataPerMap_.WriteTo(output, _repeated_dataPerMap_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasSeasonId) {
      output.WriteRawTag(16);
      output.WriteUInt32(SeasonId);
    }
    dataPerWeek_.WriteTo(ref output, _repeated_dataPerWeek_codec);
    dataPerMap_.WriteTo(ref output, _repeated_dataPerMap_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasSeasonId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SeasonId);
    }
    size += dataPerWeek_.CalculateSize(_repeated_dataPerWeek_codec);
    size += dataPerMap_.CalculateSize(_repeated_dataPerMap_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_PremierSeasonSummary other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasSeasonId) {
      SeasonId = other.SeasonId;
    }
    dataPerWeek_.Add(other.dataPerWeek_);
    dataPerMap_.Add(other.dataPerMap_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          SeasonId = input.ReadUInt32();
          break;
        }
        case 26: {
          dataPerWeek_.AddEntriesFrom(input, _repeated_dataPerWeek_codec);
          break;
        }
        case 34: {
          dataPerMap_.AddEntriesFrom(input, _repeated_dataPerMap_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          SeasonId = input.ReadUInt32();
          break;
        }
        case 26: {
          dataPerWeek_.AddEntriesFrom(ref input, _repeated_dataPerWeek_codec);
          break;
        }
        case 34: {
          dataPerMap_.AddEntriesFrom(ref input, _repeated_dataPerMap_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_PremierSeasonSummary message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class DataPerWeek : pb::IMessage<DataPerWeek>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DataPerWeek> _parser = new pb::MessageParser<DataPerWeek>(() => new DataPerWeek());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DataPerWeek> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_PremierSeasonSummary.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DataPerWeek() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DataPerWeek(DataPerWeek other) : this() {
        _hasBits0 = other._hasBits0;
        weekId_ = other.weekId_;
        rankId_ = other.rankId_;
        matchesPlayed_ = other.matchesPlayed_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DataPerWeek Clone() {
        return new DataPerWeek(this);
      }

      /// <summary>Field number for the "week_id" field.</summary>
      public const int WeekIdFieldNumber = 1;
      private readonly static ulong WeekIdDefaultValue = 0UL;

      private ulong weekId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong WeekId {
        get { if ((_hasBits0 & 1) != 0) { return weekId_; } else { return WeekIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          weekId_ = value;
        }
      }
      /// <summary>Gets whether the "week_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasWeekId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "week_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearWeekId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "rank_id" field.</summary>
      public const int RankIdFieldNumber = 2;
      private readonly static uint RankIdDefaultValue = 0;

      private uint rankId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint RankId {
        get { if ((_hasBits0 & 2) != 0) { return rankId_; } else { return RankIdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          rankId_ = value;
        }
      }
      /// <summary>Gets whether the "rank_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRankId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "rank_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRankId() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "matches_played" field.</summary>
      public const int MatchesPlayedFieldNumber = 3;
      private readonly static uint MatchesPlayedDefaultValue = 0;

      private uint matchesPlayed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MatchesPlayed {
        get { if ((_hasBits0 & 4) != 0) { return matchesPlayed_; } else { return MatchesPlayedDefaultValue; } }
        set {
          _hasBits0 |= 4;
          matchesPlayed_ = value;
        }
      }
      /// <summary>Gets whether the "matches_played" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMatchesPlayed {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "matches_played" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMatchesPlayed() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DataPerWeek);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DataPerWeek other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (WeekId != other.WeekId) return false;
        if (RankId != other.RankId) return false;
        if (MatchesPlayed != other.MatchesPlayed) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasWeekId) hash ^= WeekId.GetHashCode();
        if (HasRankId) hash ^= RankId.GetHashCode();
        if (HasMatchesPlayed) hash ^= MatchesPlayed.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasWeekId) {
          output.WriteRawTag(8);
          output.WriteUInt64(WeekId);
        }
        if (HasRankId) {
          output.WriteRawTag(16);
          output.WriteUInt32(RankId);
        }
        if (HasMatchesPlayed) {
          output.WriteRawTag(24);
          output.WriteUInt32(MatchesPlayed);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasWeekId) {
          output.WriteRawTag(8);
          output.WriteUInt64(WeekId);
        }
        if (HasRankId) {
          output.WriteRawTag(16);
          output.WriteUInt32(RankId);
        }
        if (HasMatchesPlayed) {
          output.WriteRawTag(24);
          output.WriteUInt32(MatchesPlayed);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasWeekId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WeekId);
        }
        if (HasRankId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankId);
        }
        if (HasMatchesPlayed) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MatchesPlayed);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DataPerWeek other) {
        if (other == null) {
          return;
        }
        if (other.HasWeekId) {
          WeekId = other.WeekId;
        }
        if (other.HasRankId) {
          RankId = other.RankId;
        }
        if (other.HasMatchesPlayed) {
          MatchesPlayed = other.MatchesPlayed;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              WeekId = input.ReadUInt64();
              break;
            }
            case 16: {
              RankId = input.ReadUInt32();
              break;
            }
            case 24: {
              MatchesPlayed = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              WeekId = input.ReadUInt64();
              break;
            }
            case 16: {
              RankId = input.ReadUInt32();
              break;
            }
            case 24: {
              MatchesPlayed = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class DataPerMap : pb::IMessage<DataPerMap>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DataPerMap> _parser = new pb::MessageParser<DataPerMap>(() => new DataPerMap());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DataPerMap> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_PremierSeasonSummary.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DataPerMap() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DataPerMap(DataPerMap other) : this() {
        _hasBits0 = other._hasBits0;
        mapId_ = other.mapId_;
        wins_ = other.wins_;
        ties_ = other.ties_;
        losses_ = other.losses_;
        rounds_ = other.rounds_;
        kills_ = other.kills_;
        headshots_ = other.headshots_;
        assists_ = other.assists_;
        deaths_ = other.deaths_;
        mvps_ = other.mvps_;
        rounds3K_ = other.rounds3K_;
        rounds4K_ = other.rounds4K_;
        rounds5K_ = other.rounds5K_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DataPerMap Clone() {
        return new DataPerMap(this);
      }

      /// <summary>Field number for the "map_id" field.</summary>
      public const int MapIdFieldNumber = 1;
      private readonly static uint MapIdDefaultValue = 0;

      private uint mapId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MapId {
        get { if ((_hasBits0 & 1) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          mapId_ = value;
        }
      }
      /// <summary>Gets whether the "map_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMapId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "map_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMapId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "wins" field.</summary>
      public const int WinsFieldNumber = 2;
      private readonly static uint WinsDefaultValue = 0;

      private uint wins_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Wins {
        get { if ((_hasBits0 & 2) != 0) { return wins_; } else { return WinsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          wins_ = value;
        }
      }
      /// <summary>Gets whether the "wins" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasWins {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "wins" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearWins() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "ties" field.</summary>
      public const int TiesFieldNumber = 3;
      private readonly static uint TiesDefaultValue = 0;

      private uint ties_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Ties {
        get { if ((_hasBits0 & 4) != 0) { return ties_; } else { return TiesDefaultValue; } }
        set {
          _hasBits0 |= 4;
          ties_ = value;
        }
      }
      /// <summary>Gets whether the "ties" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTies {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "ties" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTies() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "losses" field.</summary>
      public const int LossesFieldNumber = 4;
      private readonly static uint LossesDefaultValue = 0;

      private uint losses_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Losses {
        get { if ((_hasBits0 & 8) != 0) { return losses_; } else { return LossesDefaultValue; } }
        set {
          _hasBits0 |= 8;
          losses_ = value;
        }
      }
      /// <summary>Gets whether the "losses" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLosses {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "losses" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLosses() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "rounds" field.</summary>
      public const int RoundsFieldNumber = 5;
      private readonly static uint RoundsDefaultValue = 0;

      private uint rounds_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Rounds {
        get { if ((_hasBits0 & 16) != 0) { return rounds_; } else { return RoundsDefaultValue; } }
        set {
          _hasBits0 |= 16;
          rounds_ = value;
        }
      }
      /// <summary>Gets whether the "rounds" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRounds {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "rounds" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRounds() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "kills" field.</summary>
      public const int KillsFieldNumber = 6;
      private readonly static uint KillsDefaultValue = 0;

      private uint kills_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Kills {
        get { if ((_hasBits0 & 32) != 0) { return kills_; } else { return KillsDefaultValue; } }
        set {
          _hasBits0 |= 32;
          kills_ = value;
        }
      }
      /// <summary>Gets whether the "kills" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKills {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "kills" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKills() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "headshots" field.</summary>
      public const int HeadshotsFieldNumber = 7;
      private readonly static uint HeadshotsDefaultValue = 0;

      private uint headshots_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Headshots {
        get { if ((_hasBits0 & 64) != 0) { return headshots_; } else { return HeadshotsDefaultValue; } }
        set {
          _hasBits0 |= 64;
          headshots_ = value;
        }
      }
      /// <summary>Gets whether the "headshots" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHeadshots {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "headshots" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHeadshots() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "assists" field.</summary>
      public const int AssistsFieldNumber = 8;
      private readonly static uint AssistsDefaultValue = 0;

      private uint assists_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Assists {
        get { if ((_hasBits0 & 128) != 0) { return assists_; } else { return AssistsDefaultValue; } }
        set {
          _hasBits0 |= 128;
          assists_ = value;
        }
      }
      /// <summary>Gets whether the "assists" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAssists {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "assists" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAssists() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "deaths" field.</summary>
      public const int DeathsFieldNumber = 9;
      private readonly static uint DeathsDefaultValue = 0;

      private uint deaths_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Deaths {
        get { if ((_hasBits0 & 256) != 0) { return deaths_; } else { return DeathsDefaultValue; } }
        set {
          _hasBits0 |= 256;
          deaths_ = value;
        }
      }
      /// <summary>Gets whether the "deaths" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDeaths {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "deaths" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDeaths() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "mvps" field.</summary>
      public const int MvpsFieldNumber = 10;
      private readonly static uint MvpsDefaultValue = 0;

      private uint mvps_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Mvps {
        get { if ((_hasBits0 & 512) != 0) { return mvps_; } else { return MvpsDefaultValue; } }
        set {
          _hasBits0 |= 512;
          mvps_ = value;
        }
      }
      /// <summary>Gets whether the "mvps" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMvps {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "mvps" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMvps() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "rounds_3k" field.</summary>
      public const int Rounds3KFieldNumber = 11;
      private readonly static uint Rounds3KDefaultValue = 0;

      private uint rounds3K_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Rounds3K {
        get { if ((_hasBits0 & 1024) != 0) { return rounds3K_; } else { return Rounds3KDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          rounds3K_ = value;
        }
      }
      /// <summary>Gets whether the "rounds_3k" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRounds3K {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "rounds_3k" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRounds3K() {
        _hasBits0 &= ~1024;
      }

      /// <summary>Field number for the "rounds_4k" field.</summary>
      public const int Rounds4KFieldNumber = 12;
      private readonly static uint Rounds4KDefaultValue = 0;

      private uint rounds4K_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Rounds4K {
        get { if ((_hasBits0 & 2048) != 0) { return rounds4K_; } else { return Rounds4KDefaultValue; } }
        set {
          _hasBits0 |= 2048;
          rounds4K_ = value;
        }
      }
      /// <summary>Gets whether the "rounds_4k" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRounds4K {
        get { return (_hasBits0 & 2048) != 0; }
      }
      /// <summary>Clears the value of the "rounds_4k" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRounds4K() {
        _hasBits0 &= ~2048;
      }

      /// <summary>Field number for the "rounds_5k" field.</summary>
      public const int Rounds5KFieldNumber = 13;
      private readonly static uint Rounds5KDefaultValue = 0;

      private uint rounds5K_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Rounds5K {
        get { if ((_hasBits0 & 4096) != 0) { return rounds5K_; } else { return Rounds5KDefaultValue; } }
        set {
          _hasBits0 |= 4096;
          rounds5K_ = value;
        }
      }
      /// <summary>Gets whether the "rounds_5k" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRounds5K {
        get { return (_hasBits0 & 4096) != 0; }
      }
      /// <summary>Clears the value of the "rounds_5k" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRounds5K() {
        _hasBits0 &= ~4096;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DataPerMap);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DataPerMap other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (MapId != other.MapId) return false;
        if (Wins != other.Wins) return false;
        if (Ties != other.Ties) return false;
        if (Losses != other.Losses) return false;
        if (Rounds != other.Rounds) return false;
        if (Kills != other.Kills) return false;
        if (Headshots != other.Headshots) return false;
        if (Assists != other.Assists) return false;
        if (Deaths != other.Deaths) return false;
        if (Mvps != other.Mvps) return false;
        if (Rounds3K != other.Rounds3K) return false;
        if (Rounds4K != other.Rounds4K) return false;
        if (Rounds5K != other.Rounds5K) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasMapId) hash ^= MapId.GetHashCode();
        if (HasWins) hash ^= Wins.GetHashCode();
        if (HasTies) hash ^= Ties.GetHashCode();
        if (HasLosses) hash ^= Losses.GetHashCode();
        if (HasRounds) hash ^= Rounds.GetHashCode();
        if (HasKills) hash ^= Kills.GetHashCode();
        if (HasHeadshots) hash ^= Headshots.GetHashCode();
        if (HasAssists) hash ^= Assists.GetHashCode();
        if (HasDeaths) hash ^= Deaths.GetHashCode();
        if (HasMvps) hash ^= Mvps.GetHashCode();
        if (HasRounds3K) hash ^= Rounds3K.GetHashCode();
        if (HasRounds4K) hash ^= Rounds4K.GetHashCode();
        if (HasRounds5K) hash ^= Rounds5K.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasMapId) {
          output.WriteRawTag(8);
          output.WriteUInt32(MapId);
        }
        if (HasWins) {
          output.WriteRawTag(16);
          output.WriteUInt32(Wins);
        }
        if (HasTies) {
          output.WriteRawTag(24);
          output.WriteUInt32(Ties);
        }
        if (HasLosses) {
          output.WriteRawTag(32);
          output.WriteUInt32(Losses);
        }
        if (HasRounds) {
          output.WriteRawTag(40);
          output.WriteUInt32(Rounds);
        }
        if (HasKills) {
          output.WriteRawTag(48);
          output.WriteUInt32(Kills);
        }
        if (HasHeadshots) {
          output.WriteRawTag(56);
          output.WriteUInt32(Headshots);
        }
        if (HasAssists) {
          output.WriteRawTag(64);
          output.WriteUInt32(Assists);
        }
        if (HasDeaths) {
          output.WriteRawTag(72);
          output.WriteUInt32(Deaths);
        }
        if (HasMvps) {
          output.WriteRawTag(80);
          output.WriteUInt32(Mvps);
        }
        if (HasRounds3K) {
          output.WriteRawTag(88);
          output.WriteUInt32(Rounds3K);
        }
        if (HasRounds4K) {
          output.WriteRawTag(96);
          output.WriteUInt32(Rounds4K);
        }
        if (HasRounds5K) {
          output.WriteRawTag(104);
          output.WriteUInt32(Rounds5K);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasMapId) {
          output.WriteRawTag(8);
          output.WriteUInt32(MapId);
        }
        if (HasWins) {
          output.WriteRawTag(16);
          output.WriteUInt32(Wins);
        }
        if (HasTies) {
          output.WriteRawTag(24);
          output.WriteUInt32(Ties);
        }
        if (HasLosses) {
          output.WriteRawTag(32);
          output.WriteUInt32(Losses);
        }
        if (HasRounds) {
          output.WriteRawTag(40);
          output.WriteUInt32(Rounds);
        }
        if (HasKills) {
          output.WriteRawTag(48);
          output.WriteUInt32(Kills);
        }
        if (HasHeadshots) {
          output.WriteRawTag(56);
          output.WriteUInt32(Headshots);
        }
        if (HasAssists) {
          output.WriteRawTag(64);
          output.WriteUInt32(Assists);
        }
        if (HasDeaths) {
          output.WriteRawTag(72);
          output.WriteUInt32(Deaths);
        }
        if (HasMvps) {
          output.WriteRawTag(80);
          output.WriteUInt32(Mvps);
        }
        if (HasRounds3K) {
          output.WriteRawTag(88);
          output.WriteUInt32(Rounds3K);
        }
        if (HasRounds4K) {
          output.WriteRawTag(96);
          output.WriteUInt32(Rounds4K);
        }
        if (HasRounds5K) {
          output.WriteRawTag(104);
          output.WriteUInt32(Rounds5K);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasMapId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
        }
        if (HasWins) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Wins);
        }
        if (HasTies) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ties);
        }
        if (HasLosses) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Losses);
        }
        if (HasRounds) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rounds);
        }
        if (HasKills) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Kills);
        }
        if (HasHeadshots) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Headshots);
        }
        if (HasAssists) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Assists);
        }
        if (HasDeaths) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deaths);
        }
        if (HasMvps) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mvps);
        }
        if (HasRounds3K) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rounds3K);
        }
        if (HasRounds4K) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rounds4K);
        }
        if (HasRounds5K) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rounds5K);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DataPerMap other) {
        if (other == null) {
          return;
        }
        if (other.HasMapId) {
          MapId = other.MapId;
        }
        if (other.HasWins) {
          Wins = other.Wins;
        }
        if (other.HasTies) {
          Ties = other.Ties;
        }
        if (other.HasLosses) {
          Losses = other.Losses;
        }
        if (other.HasRounds) {
          Rounds = other.Rounds;
        }
        if (other.HasKills) {
          Kills = other.Kills;
        }
        if (other.HasHeadshots) {
          Headshots = other.Headshots;
        }
        if (other.HasAssists) {
          Assists = other.Assists;
        }
        if (other.HasDeaths) {
          Deaths = other.Deaths;
        }
        if (other.HasMvps) {
          Mvps = other.Mvps;
        }
        if (other.HasRounds3K) {
          Rounds3K = other.Rounds3K;
        }
        if (other.HasRounds4K) {
          Rounds4K = other.Rounds4K;
        }
        if (other.HasRounds5K) {
          Rounds5K = other.Rounds5K;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              MapId = input.ReadUInt32();
              break;
            }
            case 16: {
              Wins = input.ReadUInt32();
              break;
            }
            case 24: {
              Ties = input.ReadUInt32();
              break;
            }
            case 32: {
              Losses = input.ReadUInt32();
              break;
            }
            case 40: {
              Rounds = input.ReadUInt32();
              break;
            }
            case 48: {
              Kills = input.ReadUInt32();
              break;
            }
            case 56: {
              Headshots = input.ReadUInt32();
              break;
            }
            case 64: {
              Assists = input.ReadUInt32();
              break;
            }
            case 72: {
              Deaths = input.ReadUInt32();
              break;
            }
            case 80: {
              Mvps = input.ReadUInt32();
              break;
            }
            case 88: {
              Rounds3K = input.ReadUInt32();
              break;
            }
            case 96: {
              Rounds4K = input.ReadUInt32();
              break;
            }
            case 104: {
              Rounds5K = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              MapId = input.ReadUInt32();
              break;
            }
            case 16: {
              Wins = input.ReadUInt32();
              break;
            }
            case 24: {
              Ties = input.ReadUInt32();
              break;
            }
            case 32: {
              Losses = input.ReadUInt32();
              break;
            }
            case 40: {
              Rounds = input.ReadUInt32();
              break;
            }
            case 48: {
              Kills = input.ReadUInt32();
              break;
            }
            case 56: {
              Headshots = input.ReadUInt32();
              break;
            }
            case 64: {
              Assists = input.ReadUInt32();
              break;
            }
            case 72: {
              Deaths = input.ReadUInt32();
              break;
            }
            case 80: {
              Mvps = input.ReadUInt32();
              break;
            }
            case 88: {
              Rounds3K = input.ReadUInt32();
              break;
            }
            case 96: {
              Rounds4K = input.ReadUInt32();
              break;
            }
            case 104: {
              Rounds5K = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate : pb::IMessage<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate>(() => new CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate other) : this() {
    _hasBits0 = other._hasBits0;
    caseid_ = other.caseid_;
    suspectid_ = other.suspectid_;
    fractionid_ = other.fractionid_;
    rptAimbot_ = other.rptAimbot_;
    rptWallhack_ = other.rptWallhack_;
    rptSpeedhack_ = other.rptSpeedhack_;
    rptTeamharm_ = other.rptTeamharm_;
    reason_ = other.reason_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate Clone() {
    return new CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate(this);
  }

  /// <summary>Field number for the "caseid" field.</summary>
  public const int CaseidFieldNumber = 1;
  private readonly static ulong CaseidDefaultValue = 0UL;

  private ulong caseid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Caseid {
    get { if ((_hasBits0 & 1) != 0) { return caseid_; } else { return CaseidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      caseid_ = value;
    }
  }
  /// <summary>Gets whether the "caseid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaseid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "caseid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaseid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "suspectid" field.</summary>
  public const int SuspectidFieldNumber = 3;
  private readonly static uint SuspectidDefaultValue = 0;

  private uint suspectid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Suspectid {
    get { if ((_hasBits0 & 2) != 0) { return suspectid_; } else { return SuspectidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      suspectid_ = value;
    }
  }
  /// <summary>Gets whether the "suspectid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSuspectid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "suspectid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSuspectid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "fractionid" field.</summary>
  public const int FractionidFieldNumber = 4;
  private readonly static uint FractionidDefaultValue = 0;

  private uint fractionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Fractionid {
    get { if ((_hasBits0 & 4) != 0) { return fractionid_; } else { return FractionidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      fractionid_ = value;
    }
  }
  /// <summary>Gets whether the "fractionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFractionid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "fractionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFractionid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "rpt_aimbot" field.</summary>
  public const int RptAimbotFieldNumber = 5;
  private readonly static uint RptAimbotDefaultValue = 0;

  private uint rptAimbot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptAimbot {
    get { if ((_hasBits0 & 8) != 0) { return rptAimbot_; } else { return RptAimbotDefaultValue; } }
    set {
      _hasBits0 |= 8;
      rptAimbot_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_aimbot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptAimbot {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "rpt_aimbot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptAimbot() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "rpt_wallhack" field.</summary>
  public const int RptWallhackFieldNumber = 6;
  private readonly static uint RptWallhackDefaultValue = 0;

  private uint rptWallhack_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptWallhack {
    get { if ((_hasBits0 & 16) != 0) { return rptWallhack_; } else { return RptWallhackDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rptWallhack_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_wallhack" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptWallhack {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rpt_wallhack" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptWallhack() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "rpt_speedhack" field.</summary>
  public const int RptSpeedhackFieldNumber = 7;
  private readonly static uint RptSpeedhackDefaultValue = 0;

  private uint rptSpeedhack_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptSpeedhack {
    get { if ((_hasBits0 & 32) != 0) { return rptSpeedhack_; } else { return RptSpeedhackDefaultValue; } }
    set {
      _hasBits0 |= 32;
      rptSpeedhack_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_speedhack" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptSpeedhack {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "rpt_speedhack" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptSpeedhack() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "rpt_teamharm" field.</summary>
  public const int RptTeamharmFieldNumber = 8;
  private readonly static uint RptTeamharmDefaultValue = 0;

  private uint rptTeamharm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RptTeamharm {
    get { if ((_hasBits0 & 64) != 0) { return rptTeamharm_; } else { return RptTeamharmDefaultValue; } }
    set {
      _hasBits0 |= 64;
      rptTeamharm_ = value;
    }
  }
  /// <summary>Gets whether the "rpt_teamharm" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRptTeamharm {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "rpt_teamharm" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRptTeamharm() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "reason" field.</summary>
  public const int ReasonFieldNumber = 9;
  private readonly static uint ReasonDefaultValue = 0;

  private uint reason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Reason {
    get { if ((_hasBits0 & 128) != 0) { return reason_; } else { return ReasonDefaultValue; } }
    set {
      _hasBits0 |= 128;
      reason_ = value;
    }
  }
  /// <summary>Gets whether the "reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReason {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReason() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Caseid != other.Caseid) return false;
    if (Suspectid != other.Suspectid) return false;
    if (Fractionid != other.Fractionid) return false;
    if (RptAimbot != other.RptAimbot) return false;
    if (RptWallhack != other.RptWallhack) return false;
    if (RptSpeedhack != other.RptSpeedhack) return false;
    if (RptTeamharm != other.RptTeamharm) return false;
    if (Reason != other.Reason) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCaseid) hash ^= Caseid.GetHashCode();
    if (HasSuspectid) hash ^= Suspectid.GetHashCode();
    if (HasFractionid) hash ^= Fractionid.GetHashCode();
    if (HasRptAimbot) hash ^= RptAimbot.GetHashCode();
    if (HasRptWallhack) hash ^= RptWallhack.GetHashCode();
    if (HasRptSpeedhack) hash ^= RptSpeedhack.GetHashCode();
    if (HasRptTeamharm) hash ^= RptTeamharm.GetHashCode();
    if (HasReason) hash ^= Reason.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCaseid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Caseid);
    }
    if (HasSuspectid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Suspectid);
    }
    if (HasFractionid) {
      output.WriteRawTag(32);
      output.WriteUInt32(Fractionid);
    }
    if (HasRptAimbot) {
      output.WriteRawTag(40);
      output.WriteUInt32(RptAimbot);
    }
    if (HasRptWallhack) {
      output.WriteRawTag(48);
      output.WriteUInt32(RptWallhack);
    }
    if (HasRptSpeedhack) {
      output.WriteRawTag(56);
      output.WriteUInt32(RptSpeedhack);
    }
    if (HasRptTeamharm) {
      output.WriteRawTag(64);
      output.WriteUInt32(RptTeamharm);
    }
    if (HasReason) {
      output.WriteRawTag(72);
      output.WriteUInt32(Reason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCaseid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Caseid);
    }
    if (HasSuspectid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Suspectid);
    }
    if (HasFractionid) {
      output.WriteRawTag(32);
      output.WriteUInt32(Fractionid);
    }
    if (HasRptAimbot) {
      output.WriteRawTag(40);
      output.WriteUInt32(RptAimbot);
    }
    if (HasRptWallhack) {
      output.WriteRawTag(48);
      output.WriteUInt32(RptWallhack);
    }
    if (HasRptSpeedhack) {
      output.WriteRawTag(56);
      output.WriteUInt32(RptSpeedhack);
    }
    if (HasRptTeamharm) {
      output.WriteRawTag(64);
      output.WriteUInt32(RptTeamharm);
    }
    if (HasReason) {
      output.WriteRawTag(72);
      output.WriteUInt32(Reason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCaseid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Caseid);
    }
    if (HasSuspectid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Suspectid);
    }
    if (HasFractionid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fractionid);
    }
    if (HasRptAimbot) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptAimbot);
    }
    if (HasRptWallhack) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptWallhack);
    }
    if (HasRptSpeedhack) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptSpeedhack);
    }
    if (HasRptTeamharm) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RptTeamharm);
    }
    if (HasReason) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reason);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate other) {
    if (other == null) {
      return;
    }
    if (other.HasCaseid) {
      Caseid = other.Caseid;
    }
    if (other.HasSuspectid) {
      Suspectid = other.Suspectid;
    }
    if (other.HasFractionid) {
      Fractionid = other.Fractionid;
    }
    if (other.HasRptAimbot) {
      RptAimbot = other.RptAimbot;
    }
    if (other.HasRptWallhack) {
      RptWallhack = other.RptWallhack;
    }
    if (other.HasRptSpeedhack) {
      RptSpeedhack = other.RptSpeedhack;
    }
    if (other.HasRptTeamharm) {
      RptTeamharm = other.RptTeamharm;
    }
    if (other.HasReason) {
      Reason = other.Reason;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Caseid = input.ReadUInt64();
          break;
        }
        case 24: {
          Suspectid = input.ReadUInt32();
          break;
        }
        case 32: {
          Fractionid = input.ReadUInt32();
          break;
        }
        case 40: {
          RptAimbot = input.ReadUInt32();
          break;
        }
        case 48: {
          RptWallhack = input.ReadUInt32();
          break;
        }
        case 56: {
          RptSpeedhack = input.ReadUInt32();
          break;
        }
        case 64: {
          RptTeamharm = input.ReadUInt32();
          break;
        }
        case 72: {
          Reason = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Caseid = input.ReadUInt64();
          break;
        }
        case 24: {
          Suspectid = input.ReadUInt32();
          break;
        }
        case 32: {
          Fractionid = input.ReadUInt32();
          break;
        }
        case 40: {
          RptAimbot = input.ReadUInt32();
          break;
        }
        case 48: {
          RptWallhack = input.ReadUInt32();
          break;
        }
        case 56: {
          RptSpeedhack = input.ReadUInt32();
          break;
        }
        case 64: {
          RptTeamharm = input.ReadUInt32();
          break;
        }
        case 72: {
          Reason = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment : pb::IMessage<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment>(() => new CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment other) : this() {
    _hasBits0 = other._hasBits0;
    caseid_ = other.caseid_;
    caseurl_ = other.caseurl_;
    verdict_ = other.verdict_;
    timestamp_ = other.timestamp_;
    throttleseconds_ = other.throttleseconds_;
    suspectid_ = other.suspectid_;
    fractionid_ = other.fractionid_;
    numrounds_ = other.numrounds_;
    fractionrounds_ = other.fractionrounds_;
    streakconvictions_ = other.streakconvictions_;
    reason_ = other.reason_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment Clone() {
    return new CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment(this);
  }

  /// <summary>Field number for the "caseid" field.</summary>
  public const int CaseidFieldNumber = 1;
  private readonly static ulong CaseidDefaultValue = 0UL;

  private ulong caseid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Caseid {
    get { if ((_hasBits0 & 1) != 0) { return caseid_; } else { return CaseidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      caseid_ = value;
    }
  }
  /// <summary>Gets whether the "caseid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaseid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "caseid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaseid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "caseurl" field.</summary>
  public const int CaseurlFieldNumber = 2;
  private readonly static string CaseurlDefaultValue = "";

  private string caseurl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Caseurl {
    get { return caseurl_ ?? CaseurlDefaultValue; }
    set {
      caseurl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "caseurl" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaseurl {
    get { return caseurl_ != null; }
  }
  /// <summary>Clears the value of the "caseurl" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaseurl() {
    caseurl_ = null;
  }

  /// <summary>Field number for the "verdict" field.</summary>
  public const int VerdictFieldNumber = 3;
  private readonly static uint VerdictDefaultValue = 0;

  private uint verdict_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Verdict {
    get { if ((_hasBits0 & 2) != 0) { return verdict_; } else { return VerdictDefaultValue; } }
    set {
      _hasBits0 |= 2;
      verdict_ = value;
    }
  }
  /// <summary>Gets whether the "verdict" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVerdict {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "verdict" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVerdict() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 4;
  private readonly static uint TimestampDefaultValue = 0;

  private uint timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Timestamp {
    get { if ((_hasBits0 & 4) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
    set {
      _hasBits0 |= 4;
      timestamp_ = value;
    }
  }
  /// <summary>Gets whether the "timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimestamp {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimestamp() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "throttleseconds" field.</summary>
  public const int ThrottlesecondsFieldNumber = 5;
  private readonly static uint ThrottlesecondsDefaultValue = 0;

  private uint throttleseconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Throttleseconds {
    get { if ((_hasBits0 & 8) != 0) { return throttleseconds_; } else { return ThrottlesecondsDefaultValue; } }
    set {
      _hasBits0 |= 8;
      throttleseconds_ = value;
    }
  }
  /// <summary>Gets whether the "throttleseconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasThrottleseconds {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "throttleseconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearThrottleseconds() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "suspectid" field.</summary>
  public const int SuspectidFieldNumber = 6;
  private readonly static uint SuspectidDefaultValue = 0;

  private uint suspectid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Suspectid {
    get { if ((_hasBits0 & 16) != 0) { return suspectid_; } else { return SuspectidDefaultValue; } }
    set {
      _hasBits0 |= 16;
      suspectid_ = value;
    }
  }
  /// <summary>Gets whether the "suspectid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSuspectid {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "suspectid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSuspectid() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "fractionid" field.</summary>
  public const int FractionidFieldNumber = 7;
  private readonly static uint FractionidDefaultValue = 0;

  private uint fractionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Fractionid {
    get { if ((_hasBits0 & 32) != 0) { return fractionid_; } else { return FractionidDefaultValue; } }
    set {
      _hasBits0 |= 32;
      fractionid_ = value;
    }
  }
  /// <summary>Gets whether the "fractionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFractionid {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "fractionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFractionid() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "numrounds" field.</summary>
  public const int NumroundsFieldNumber = 8;
  private readonly static uint NumroundsDefaultValue = 0;

  private uint numrounds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Numrounds {
    get { if ((_hasBits0 & 64) != 0) { return numrounds_; } else { return NumroundsDefaultValue; } }
    set {
      _hasBits0 |= 64;
      numrounds_ = value;
    }
  }
  /// <summary>Gets whether the "numrounds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumrounds {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "numrounds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumrounds() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "fractionrounds" field.</summary>
  public const int FractionroundsFieldNumber = 9;
  private readonly static uint FractionroundsDefaultValue = 0;

  private uint fractionrounds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Fractionrounds {
    get { if ((_hasBits0 & 128) != 0) { return fractionrounds_; } else { return FractionroundsDefaultValue; } }
    set {
      _hasBits0 |= 128;
      fractionrounds_ = value;
    }
  }
  /// <summary>Gets whether the "fractionrounds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFractionrounds {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "fractionrounds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFractionrounds() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "streakconvictions" field.</summary>
  public const int StreakconvictionsFieldNumber = 10;
  private readonly static int StreakconvictionsDefaultValue = 0;

  private int streakconvictions_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Streakconvictions {
    get { if ((_hasBits0 & 256) != 0) { return streakconvictions_; } else { return StreakconvictionsDefaultValue; } }
    set {
      _hasBits0 |= 256;
      streakconvictions_ = value;
    }
  }
  /// <summary>Gets whether the "streakconvictions" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStreakconvictions {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "streakconvictions" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStreakconvictions() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "reason" field.</summary>
  public const int ReasonFieldNumber = 11;
  private readonly static uint ReasonDefaultValue = 0;

  private uint reason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Reason {
    get { if ((_hasBits0 & 512) != 0) { return reason_; } else { return ReasonDefaultValue; } }
    set {
      _hasBits0 |= 512;
      reason_ = value;
    }
  }
  /// <summary>Gets whether the "reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReason {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReason() {
    _hasBits0 &= ~512;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Caseid != other.Caseid) return false;
    if (Caseurl != other.Caseurl) return false;
    if (Verdict != other.Verdict) return false;
    if (Timestamp != other.Timestamp) return false;
    if (Throttleseconds != other.Throttleseconds) return false;
    if (Suspectid != other.Suspectid) return false;
    if (Fractionid != other.Fractionid) return false;
    if (Numrounds != other.Numrounds) return false;
    if (Fractionrounds != other.Fractionrounds) return false;
    if (Streakconvictions != other.Streakconvictions) return false;
    if (Reason != other.Reason) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCaseid) hash ^= Caseid.GetHashCode();
    if (HasCaseurl) hash ^= Caseurl.GetHashCode();
    if (HasVerdict) hash ^= Verdict.GetHashCode();
    if (HasTimestamp) hash ^= Timestamp.GetHashCode();
    if (HasThrottleseconds) hash ^= Throttleseconds.GetHashCode();
    if (HasSuspectid) hash ^= Suspectid.GetHashCode();
    if (HasFractionid) hash ^= Fractionid.GetHashCode();
    if (HasNumrounds) hash ^= Numrounds.GetHashCode();
    if (HasFractionrounds) hash ^= Fractionrounds.GetHashCode();
    if (HasStreakconvictions) hash ^= Streakconvictions.GetHashCode();
    if (HasReason) hash ^= Reason.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCaseid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Caseid);
    }
    if (HasCaseurl) {
      output.WriteRawTag(18);
      output.WriteString(Caseurl);
    }
    if (HasVerdict) {
      output.WriteRawTag(24);
      output.WriteUInt32(Verdict);
    }
    if (HasTimestamp) {
      output.WriteRawTag(32);
      output.WriteUInt32(Timestamp);
    }
    if (HasThrottleseconds) {
      output.WriteRawTag(40);
      output.WriteUInt32(Throttleseconds);
    }
    if (HasSuspectid) {
      output.WriteRawTag(48);
      output.WriteUInt32(Suspectid);
    }
    if (HasFractionid) {
      output.WriteRawTag(56);
      output.WriteUInt32(Fractionid);
    }
    if (HasNumrounds) {
      output.WriteRawTag(64);
      output.WriteUInt32(Numrounds);
    }
    if (HasFractionrounds) {
      output.WriteRawTag(72);
      output.WriteUInt32(Fractionrounds);
    }
    if (HasStreakconvictions) {
      output.WriteRawTag(80);
      output.WriteInt32(Streakconvictions);
    }
    if (HasReason) {
      output.WriteRawTag(88);
      output.WriteUInt32(Reason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCaseid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Caseid);
    }
    if (HasCaseurl) {
      output.WriteRawTag(18);
      output.WriteString(Caseurl);
    }
    if (HasVerdict) {
      output.WriteRawTag(24);
      output.WriteUInt32(Verdict);
    }
    if (HasTimestamp) {
      output.WriteRawTag(32);
      output.WriteUInt32(Timestamp);
    }
    if (HasThrottleseconds) {
      output.WriteRawTag(40);
      output.WriteUInt32(Throttleseconds);
    }
    if (HasSuspectid) {
      output.WriteRawTag(48);
      output.WriteUInt32(Suspectid);
    }
    if (HasFractionid) {
      output.WriteRawTag(56);
      output.WriteUInt32(Fractionid);
    }
    if (HasNumrounds) {
      output.WriteRawTag(64);
      output.WriteUInt32(Numrounds);
    }
    if (HasFractionrounds) {
      output.WriteRawTag(72);
      output.WriteUInt32(Fractionrounds);
    }
    if (HasStreakconvictions) {
      output.WriteRawTag(80);
      output.WriteInt32(Streakconvictions);
    }
    if (HasReason) {
      output.WriteRawTag(88);
      output.WriteUInt32(Reason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCaseid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Caseid);
    }
    if (HasCaseurl) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Caseurl);
    }
    if (HasVerdict) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Verdict);
    }
    if (HasTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
    }
    if (HasThrottleseconds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Throttleseconds);
    }
    if (HasSuspectid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Suspectid);
    }
    if (HasFractionid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fractionid);
    }
    if (HasNumrounds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Numrounds);
    }
    if (HasFractionrounds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fractionrounds);
    }
    if (HasStreakconvictions) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Streakconvictions);
    }
    if (HasReason) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reason);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment other) {
    if (other == null) {
      return;
    }
    if (other.HasCaseid) {
      Caseid = other.Caseid;
    }
    if (other.HasCaseurl) {
      Caseurl = other.Caseurl;
    }
    if (other.HasVerdict) {
      Verdict = other.Verdict;
    }
    if (other.HasTimestamp) {
      Timestamp = other.Timestamp;
    }
    if (other.HasThrottleseconds) {
      Throttleseconds = other.Throttleseconds;
    }
    if (other.HasSuspectid) {
      Suspectid = other.Suspectid;
    }
    if (other.HasFractionid) {
      Fractionid = other.Fractionid;
    }
    if (other.HasNumrounds) {
      Numrounds = other.Numrounds;
    }
    if (other.HasFractionrounds) {
      Fractionrounds = other.Fractionrounds;
    }
    if (other.HasStreakconvictions) {
      Streakconvictions = other.Streakconvictions;
    }
    if (other.HasReason) {
      Reason = other.Reason;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Caseid = input.ReadUInt64();
          break;
        }
        case 18: {
          Caseurl = input.ReadString();
          break;
        }
        case 24: {
          Verdict = input.ReadUInt32();
          break;
        }
        case 32: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 40: {
          Throttleseconds = input.ReadUInt32();
          break;
        }
        case 48: {
          Suspectid = input.ReadUInt32();
          break;
        }
        case 56: {
          Fractionid = input.ReadUInt32();
          break;
        }
        case 64: {
          Numrounds = input.ReadUInt32();
          break;
        }
        case 72: {
          Fractionrounds = input.ReadUInt32();
          break;
        }
        case 80: {
          Streakconvictions = input.ReadInt32();
          break;
        }
        case 88: {
          Reason = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Caseid = input.ReadUInt64();
          break;
        }
        case 18: {
          Caseurl = input.ReadString();
          break;
        }
        case 24: {
          Verdict = input.ReadUInt32();
          break;
        }
        case 32: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 40: {
          Throttleseconds = input.ReadUInt32();
          break;
        }
        case 48: {
          Suspectid = input.ReadUInt32();
          break;
        }
        case 56: {
          Fractionid = input.ReadUInt32();
          break;
        }
        case 64: {
          Numrounds = input.ReadUInt32();
          break;
        }
        case 72: {
          Fractionrounds = input.ReadUInt32();
          break;
        }
        case 80: {
          Streakconvictions = input.ReadInt32();
          break;
        }
        case 88: {
          Reason = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus : pb::IMessage<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus>(() => new CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus other) : this() {
    _hasBits0 = other._hasBits0;
    caseid_ = other.caseid_;
    statusid_ = other.statusid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus Clone() {
    return new CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus(this);
  }

  /// <summary>Field number for the "caseid" field.</summary>
  public const int CaseidFieldNumber = 1;
  private readonly static ulong CaseidDefaultValue = 0UL;

  private ulong caseid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Caseid {
    get { if ((_hasBits0 & 1) != 0) { return caseid_; } else { return CaseidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      caseid_ = value;
    }
  }
  /// <summary>Gets whether the "caseid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaseid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "caseid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaseid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "statusid" field.</summary>
  public const int StatusidFieldNumber = 2;
  private readonly static uint StatusidDefaultValue = 0;

  private uint statusid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Statusid {
    get { if ((_hasBits0 & 2) != 0) { return statusid_; } else { return StatusidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      statusid_ = value;
    }
  }
  /// <summary>Gets whether the "statusid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStatusid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "statusid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStatusid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Caseid != other.Caseid) return false;
    if (Statusid != other.Statusid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCaseid) hash ^= Caseid.GetHashCode();
    if (HasStatusid) hash ^= Statusid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCaseid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Caseid);
    }
    if (HasStatusid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Statusid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCaseid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Caseid);
    }
    if (HasStatusid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Statusid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCaseid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Caseid);
    }
    if (HasStatusid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Statusid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus other) {
    if (other == null) {
      return;
    }
    if (other.HasCaseid) {
      Caseid = other.Caseid;
    }
    if (other.HasStatusid) {
      Statusid = other.Statusid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Caseid = input.ReadUInt64();
          break;
        }
        case 16: {
          Statusid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Caseid = input.ReadUInt64();
          break;
        }
        case 16: {
          Statusid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CClientHeaderOverwatchEvidence : pb::IMessage<CClientHeaderOverwatchEvidence>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CClientHeaderOverwatchEvidence> _parser = new pb::MessageParser<CClientHeaderOverwatchEvidence>(() => new CClientHeaderOverwatchEvidence());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CClientHeaderOverwatchEvidence> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[66]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClientHeaderOverwatchEvidence() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClientHeaderOverwatchEvidence(CClientHeaderOverwatchEvidence other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    caseid_ = other.caseid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClientHeaderOverwatchEvidence Clone() {
    return new CClientHeaderOverwatchEvidence(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "caseid" field.</summary>
  public const int CaseidFieldNumber = 2;
  private readonly static ulong CaseidDefaultValue = 0UL;

  private ulong caseid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Caseid {
    get { if ((_hasBits0 & 2) != 0) { return caseid_; } else { return CaseidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      caseid_ = value;
    }
  }
  /// <summary>Gets whether the "caseid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaseid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "caseid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaseid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CClientHeaderOverwatchEvidence);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CClientHeaderOverwatchEvidence other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    if (Caseid != other.Caseid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasCaseid) hash ^= Caseid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasCaseid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Caseid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasCaseid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Caseid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasCaseid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Caseid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CClientHeaderOverwatchEvidence other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasCaseid) {
      Caseid = other.Caseid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          Caseid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          Caseid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GC2ClientTextMsg : pb::IMessage<CMsgGCCStrike15_v2_GC2ClientTextMsg>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientTextMsg> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientTextMsg>(() => new CMsgGCCStrike15_v2_GC2ClientTextMsg());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientTextMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[67]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientTextMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientTextMsg(CMsgGCCStrike15_v2_GC2ClientTextMsg other) : this() {
    _hasBits0 = other._hasBits0;
    id_ = other.id_;
    type_ = other.type_;
    payload_ = other.payload_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientTextMsg Clone() {
    return new CMsgGCCStrike15_v2_GC2ClientTextMsg(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private readonly static uint IdDefaultValue = 0;

  private uint id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Id {
    get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      id_ = value;
    }
  }
  /// <summary>Gets whether the "id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private readonly static uint TypeDefaultValue = 0;

  private uint type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Type {
    get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "payload" field.</summary>
  public const int PayloadFieldNumber = 3;
  private readonly static pb::ByteString PayloadDefaultValue = pb::ByteString.Empty;

  private pb::ByteString payload_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Payload {
    get { return payload_ ?? PayloadDefaultValue; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "payload" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPayload {
    get { return payload_ != null; }
  }
  /// <summary>Clears the value of the "payload" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPayload() {
    payload_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GC2ClientTextMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GC2ClientTextMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Type != other.Type) return false;
    if (Payload != other.Payload) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasId) hash ^= Id.GetHashCode();
    if (HasType) hash ^= Type.GetHashCode();
    if (HasPayload) hash ^= Payload.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    if (HasType) {
      output.WriteRawTag(16);
      output.WriteUInt32(Type);
    }
    if (HasPayload) {
      output.WriteRawTag(26);
      output.WriteBytes(Payload);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    if (HasType) {
      output.WriteRawTag(16);
      output.WriteUInt32(Type);
    }
    if (HasPayload) {
      output.WriteRawTag(26);
      output.WriteBytes(Payload);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
    }
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
    }
    if (HasPayload) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GC2ClientTextMsg other) {
    if (other == null) {
      return;
    }
    if (other.HasId) {
      Id = other.Id;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasPayload) {
      Payload = other.Payload;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 16: {
          Type = input.ReadUInt32();
          break;
        }
        case 26: {
          Payload = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 16: {
          Type = input.ReadUInt32();
          break;
        }
        case 26: {
          Payload = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Client2GCTextMsg : pb::IMessage<CMsgGCCStrike15_v2_Client2GCTextMsg>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Client2GCTextMsg> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Client2GCTextMsg>(() => new CMsgGCCStrike15_v2_Client2GCTextMsg());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Client2GCTextMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[68]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCTextMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCTextMsg(CMsgGCCStrike15_v2_Client2GCTextMsg other) : this() {
    _hasBits0 = other._hasBits0;
    id_ = other.id_;
    args_ = other.args_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCTextMsg Clone() {
    return new CMsgGCCStrike15_v2_Client2GCTextMsg(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private readonly static uint IdDefaultValue = 0;

  private uint id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Id {
    get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      id_ = value;
    }
  }
  /// <summary>Gets whether the "id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "args" field.</summary>
  public const int ArgsFieldNumber = 2;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_args_codec
      = pb::FieldCodec.ForBytes(18);
  private readonly pbc::RepeatedField<pb::ByteString> args_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<pb::ByteString> Args {
    get { return args_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Client2GCTextMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Client2GCTextMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if(!args_.Equals(other.args_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasId) hash ^= Id.GetHashCode();
    hash ^= args_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    args_.WriteTo(output, _repeated_args_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    args_.WriteTo(ref output, _repeated_args_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
    }
    size += args_.CalculateSize(_repeated_args_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Client2GCTextMsg other) {
    if (other == null) {
      return;
    }
    if (other.HasId) {
      Id = other.Id;
    }
    args_.Add(other.args_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 18: {
          args_.AddEntriesFrom(input, _repeated_args_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 18: {
          args_.AddEntriesFrom(ref input, _repeated_args_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchEndRunRewardDrops : pb::IMessage<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchEndRunRewardDrops> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchEndRunRewardDrops>(() => new CMsgGCCStrike15_v2_MatchEndRunRewardDrops());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchEndRunRewardDrops> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[69]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchEndRunRewardDrops() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchEndRunRewardDrops(CMsgGCCStrike15_v2_MatchEndRunRewardDrops other) : this() {
    serverinfo_ = other.serverinfo_ != null ? other.serverinfo_.Clone() : null;
    matchEndQuestData_ = other.matchEndQuestData_ != null ? other.matchEndQuestData_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchEndRunRewardDrops Clone() {
    return new CMsgGCCStrike15_v2_MatchEndRunRewardDrops(this);
  }

  /// <summary>Field number for the "serverinfo" field.</summary>
  public const int ServerinfoFieldNumber = 3;
  private global::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse serverinfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse Serverinfo {
    get { return serverinfo_; }
    set {
      serverinfo_ = value;
    }
  }

  /// <summary>Field number for the "match_end_quest_data" field.</summary>
  public const int MatchEndQuestDataFieldNumber = 4;
  private global::CMsgGC_ServerQuestUpdateData matchEndQuestData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGC_ServerQuestUpdateData MatchEndQuestData {
    get { return matchEndQuestData_; }
    set {
      matchEndQuestData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchEndRunRewardDrops);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchEndRunRewardDrops other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Serverinfo, other.Serverinfo)) return false;
    if (!object.Equals(MatchEndQuestData, other.MatchEndQuestData)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (serverinfo_ != null) hash ^= Serverinfo.GetHashCode();
    if (matchEndQuestData_ != null) hash ^= MatchEndQuestData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (serverinfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Serverinfo);
    }
    if (matchEndQuestData_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MatchEndQuestData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (serverinfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Serverinfo);
    }
    if (matchEndQuestData_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MatchEndQuestData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (serverinfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Serverinfo);
    }
    if (matchEndQuestData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchEndQuestData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchEndRunRewardDrops other) {
    if (other == null) {
      return;
    }
    if (other.serverinfo_ != null) {
      if (serverinfo_ == null) {
        Serverinfo = new global::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse();
      }
      Serverinfo.MergeFrom(other.Serverinfo);
    }
    if (other.matchEndQuestData_ != null) {
      if (matchEndQuestData_ == null) {
        MatchEndQuestData = new global::CMsgGC_ServerQuestUpdateData();
      }
      MatchEndQuestData.MergeFrom(other.MatchEndQuestData);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 26: {
          if (serverinfo_ == null) {
            Serverinfo = new global::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse();
          }
          input.ReadMessage(Serverinfo);
          break;
        }
        case 34: {
          if (matchEndQuestData_ == null) {
            MatchEndQuestData = new global::CMsgGC_ServerQuestUpdateData();
          }
          input.ReadMessage(MatchEndQuestData);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 26: {
          if (serverinfo_ == null) {
            Serverinfo = new global::CMsgGCCStrike15_v2_MatchmakingServerReservationResponse();
          }
          input.ReadMessage(Serverinfo);
          break;
        }
        case 34: {
          if (matchEndQuestData_ == null) {
            MatchEndQuestData = new global::CMsgGC_ServerQuestUpdateData();
          }
          input.ReadMessage(MatchEndQuestData);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CEconItemPreviewDataBlock : pb::IMessage<CEconItemPreviewDataBlock>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CEconItemPreviewDataBlock> _parser = new pb::MessageParser<CEconItemPreviewDataBlock>(() => new CEconItemPreviewDataBlock());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CEconItemPreviewDataBlock> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[70]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CEconItemPreviewDataBlock() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CEconItemPreviewDataBlock(CEconItemPreviewDataBlock other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    itemid_ = other.itemid_;
    defindex_ = other.defindex_;
    paintindex_ = other.paintindex_;
    rarity_ = other.rarity_;
    quality_ = other.quality_;
    paintwear_ = other.paintwear_;
    paintseed_ = other.paintseed_;
    killeaterscoretype_ = other.killeaterscoretype_;
    killeatervalue_ = other.killeatervalue_;
    customname_ = other.customname_;
    stickers_ = other.stickers_.Clone();
    inventory_ = other.inventory_;
    origin_ = other.origin_;
    questid_ = other.questid_;
    dropreason_ = other.dropreason_;
    musicindex_ = other.musicindex_;
    entindex_ = other.entindex_;
    petindex_ = other.petindex_;
    keychains_ = other.keychains_.Clone();
    style_ = other.style_;
    variations_ = other.variations_.Clone();
    upgradeLevel_ = other.upgradeLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CEconItemPreviewDataBlock Clone() {
    return new CEconItemPreviewDataBlock(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "itemid" field.</summary>
  public const int ItemidFieldNumber = 2;
  private readonly static ulong ItemidDefaultValue = 0UL;

  private ulong itemid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Itemid {
    get { if ((_hasBits0 & 2) != 0) { return itemid_; } else { return ItemidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      itemid_ = value;
    }
  }
  /// <summary>Gets whether the "itemid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasItemid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "itemid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearItemid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "defindex" field.</summary>
  public const int DefindexFieldNumber = 3;
  private readonly static uint DefindexDefaultValue = 0;

  private uint defindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Defindex {
    get { if ((_hasBits0 & 4) != 0) { return defindex_; } else { return DefindexDefaultValue; } }
    set {
      _hasBits0 |= 4;
      defindex_ = value;
    }
  }
  /// <summary>Gets whether the "defindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDefindex {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "defindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDefindex() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "paintindex" field.</summary>
  public const int PaintindexFieldNumber = 4;
  private readonly static uint PaintindexDefaultValue = 0;

  private uint paintindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Paintindex {
    get { if ((_hasBits0 & 8) != 0) { return paintindex_; } else { return PaintindexDefaultValue; } }
    set {
      _hasBits0 |= 8;
      paintindex_ = value;
    }
  }
  /// <summary>Gets whether the "paintindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPaintindex {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "paintindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPaintindex() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "rarity" field.</summary>
  public const int RarityFieldNumber = 5;
  private readonly static uint RarityDefaultValue = 0;

  private uint rarity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rarity {
    get { if ((_hasBits0 & 16) != 0) { return rarity_; } else { return RarityDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rarity_ = value;
    }
  }
  /// <summary>Gets whether the "rarity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRarity {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rarity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRarity() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "quality" field.</summary>
  public const int QualityFieldNumber = 6;
  private readonly static uint QualityDefaultValue = 0;

  private uint quality_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Quality {
    get { if ((_hasBits0 & 32) != 0) { return quality_; } else { return QualityDefaultValue; } }
    set {
      _hasBits0 |= 32;
      quality_ = value;
    }
  }
  /// <summary>Gets whether the "quality" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQuality {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "quality" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQuality() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "paintwear" field.</summary>
  public const int PaintwearFieldNumber = 7;
  private readonly static uint PaintwearDefaultValue = 0;

  private uint paintwear_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Paintwear {
    get { if ((_hasBits0 & 64) != 0) { return paintwear_; } else { return PaintwearDefaultValue; } }
    set {
      _hasBits0 |= 64;
      paintwear_ = value;
    }
  }
  /// <summary>Gets whether the "paintwear" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPaintwear {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "paintwear" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPaintwear() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "paintseed" field.</summary>
  public const int PaintseedFieldNumber = 8;
  private readonly static uint PaintseedDefaultValue = 0;

  private uint paintseed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Paintseed {
    get { if ((_hasBits0 & 128) != 0) { return paintseed_; } else { return PaintseedDefaultValue; } }
    set {
      _hasBits0 |= 128;
      paintseed_ = value;
    }
  }
  /// <summary>Gets whether the "paintseed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPaintseed {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "paintseed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPaintseed() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "killeaterscoretype" field.</summary>
  public const int KilleaterscoretypeFieldNumber = 9;
  private readonly static uint KilleaterscoretypeDefaultValue = 0;

  private uint killeaterscoretype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Killeaterscoretype {
    get { if ((_hasBits0 & 256) != 0) { return killeaterscoretype_; } else { return KilleaterscoretypeDefaultValue; } }
    set {
      _hasBits0 |= 256;
      killeaterscoretype_ = value;
    }
  }
  /// <summary>Gets whether the "killeaterscoretype" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKilleaterscoretype {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "killeaterscoretype" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKilleaterscoretype() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "killeatervalue" field.</summary>
  public const int KilleatervalueFieldNumber = 10;
  private readonly static uint KilleatervalueDefaultValue = 0;

  private uint killeatervalue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Killeatervalue {
    get { if ((_hasBits0 & 512) != 0) { return killeatervalue_; } else { return KilleatervalueDefaultValue; } }
    set {
      _hasBits0 |= 512;
      killeatervalue_ = value;
    }
  }
  /// <summary>Gets whether the "killeatervalue" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKilleatervalue {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "killeatervalue" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKilleatervalue() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "customname" field.</summary>
  public const int CustomnameFieldNumber = 11;
  private readonly static string CustomnameDefaultValue = "";

  private string customname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Customname {
    get { return customname_ ?? CustomnameDefaultValue; }
    set {
      customname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "customname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCustomname {
    get { return customname_ != null; }
  }
  /// <summary>Clears the value of the "customname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCustomname() {
    customname_ = null;
  }

  /// <summary>Field number for the "stickers" field.</summary>
  public const int StickersFieldNumber = 12;
  private static readonly pb::FieldCodec<global::CEconItemPreviewDataBlock.Types.Sticker> _repeated_stickers_codec
      = pb::FieldCodec.ForMessage(98, global::CEconItemPreviewDataBlock.Types.Sticker.Parser);
  private readonly pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker> stickers_ = new pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker> Stickers {
    get { return stickers_; }
  }

  /// <summary>Field number for the "inventory" field.</summary>
  public const int InventoryFieldNumber = 13;
  private readonly static uint InventoryDefaultValue = 0;

  private uint inventory_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Inventory {
    get { if ((_hasBits0 & 1024) != 0) { return inventory_; } else { return InventoryDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      inventory_ = value;
    }
  }
  /// <summary>Gets whether the "inventory" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInventory {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "inventory" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInventory() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 14;
  private readonly static uint OriginDefaultValue = 0;

  private uint origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Origin {
    get { if ((_hasBits0 & 2048) != 0) { return origin_; } else { return OriginDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      origin_ = value;
    }
  }
  /// <summary>Gets whether the "origin" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOrigin {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "origin" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOrigin() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "questid" field.</summary>
  public const int QuestidFieldNumber = 15;
  private readonly static uint QuestidDefaultValue = 0;

  private uint questid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Questid {
    get { if ((_hasBits0 & 4096) != 0) { return questid_; } else { return QuestidDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      questid_ = value;
    }
  }
  /// <summary>Gets whether the "questid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQuestid {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "questid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQuestid() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "dropreason" field.</summary>
  public const int DropreasonFieldNumber = 16;
  private readonly static uint DropreasonDefaultValue = 0;

  private uint dropreason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Dropreason {
    get { if ((_hasBits0 & 8192) != 0) { return dropreason_; } else { return DropreasonDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      dropreason_ = value;
    }
  }
  /// <summary>Gets whether the "dropreason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDropreason {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "dropreason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDropreason() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "musicindex" field.</summary>
  public const int MusicindexFieldNumber = 17;
  private readonly static uint MusicindexDefaultValue = 0;

  private uint musicindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Musicindex {
    get { if ((_hasBits0 & 16384) != 0) { return musicindex_; } else { return MusicindexDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      musicindex_ = value;
    }
  }
  /// <summary>Gets whether the "musicindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMusicindex {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "musicindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMusicindex() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "entindex" field.</summary>
  public const int EntindexFieldNumber = 18;
  private readonly static int EntindexDefaultValue = 0;

  private int entindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Entindex {
    get { if ((_hasBits0 & 32768) != 0) { return entindex_; } else { return EntindexDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      entindex_ = value;
    }
  }
  /// <summary>Gets whether the "entindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntindex {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "entindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntindex() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "petindex" field.</summary>
  public const int PetindexFieldNumber = 19;
  private readonly static uint PetindexDefaultValue = 0;

  private uint petindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Petindex {
    get { if ((_hasBits0 & 65536) != 0) { return petindex_; } else { return PetindexDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      petindex_ = value;
    }
  }
  /// <summary>Gets whether the "petindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPetindex {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "petindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPetindex() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "keychains" field.</summary>
  public const int KeychainsFieldNumber = 20;
  private static readonly pb::FieldCodec<global::CEconItemPreviewDataBlock.Types.Sticker> _repeated_keychains_codec
      = pb::FieldCodec.ForMessage(162, global::CEconItemPreviewDataBlock.Types.Sticker.Parser);
  private readonly pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker> keychains_ = new pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker> Keychains {
    get { return keychains_; }
  }

  /// <summary>Field number for the "style" field.</summary>
  public const int StyleFieldNumber = 21;
  private readonly static uint StyleDefaultValue = 0;

  private uint style_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Style {
    get { if ((_hasBits0 & 131072) != 0) { return style_; } else { return StyleDefaultValue; } }
    set {
      _hasBits0 |= 131072;
      style_ = value;
    }
  }
  /// <summary>Gets whether the "style" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStyle {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "style" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStyle() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "variations" field.</summary>
  public const int VariationsFieldNumber = 22;
  private static readonly pb::FieldCodec<global::CEconItemPreviewDataBlock.Types.Sticker> _repeated_variations_codec
      = pb::FieldCodec.ForMessage(178, global::CEconItemPreviewDataBlock.Types.Sticker.Parser);
  private readonly pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker> variations_ = new pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CEconItemPreviewDataBlock.Types.Sticker> Variations {
    get { return variations_; }
  }

  /// <summary>Field number for the "upgrade_level" field.</summary>
  public const int UpgradeLevelFieldNumber = 23;
  private readonly static uint UpgradeLevelDefaultValue = 0;

  private uint upgradeLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UpgradeLevel {
    get { if ((_hasBits0 & 262144) != 0) { return upgradeLevel_; } else { return UpgradeLevelDefaultValue; } }
    set {
      _hasBits0 |= 262144;
      upgradeLevel_ = value;
    }
  }
  /// <summary>Gets whether the "upgrade_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUpgradeLevel {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "upgrade_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUpgradeLevel() {
    _hasBits0 &= ~262144;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CEconItemPreviewDataBlock);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CEconItemPreviewDataBlock other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    if (Itemid != other.Itemid) return false;
    if (Defindex != other.Defindex) return false;
    if (Paintindex != other.Paintindex) return false;
    if (Rarity != other.Rarity) return false;
    if (Quality != other.Quality) return false;
    if (Paintwear != other.Paintwear) return false;
    if (Paintseed != other.Paintseed) return false;
    if (Killeaterscoretype != other.Killeaterscoretype) return false;
    if (Killeatervalue != other.Killeatervalue) return false;
    if (Customname != other.Customname) return false;
    if(!stickers_.Equals(other.stickers_)) return false;
    if (Inventory != other.Inventory) return false;
    if (Origin != other.Origin) return false;
    if (Questid != other.Questid) return false;
    if (Dropreason != other.Dropreason) return false;
    if (Musicindex != other.Musicindex) return false;
    if (Entindex != other.Entindex) return false;
    if (Petindex != other.Petindex) return false;
    if(!keychains_.Equals(other.keychains_)) return false;
    if (Style != other.Style) return false;
    if(!variations_.Equals(other.variations_)) return false;
    if (UpgradeLevel != other.UpgradeLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasItemid) hash ^= Itemid.GetHashCode();
    if (HasDefindex) hash ^= Defindex.GetHashCode();
    if (HasPaintindex) hash ^= Paintindex.GetHashCode();
    if (HasRarity) hash ^= Rarity.GetHashCode();
    if (HasQuality) hash ^= Quality.GetHashCode();
    if (HasPaintwear) hash ^= Paintwear.GetHashCode();
    if (HasPaintseed) hash ^= Paintseed.GetHashCode();
    if (HasKilleaterscoretype) hash ^= Killeaterscoretype.GetHashCode();
    if (HasKilleatervalue) hash ^= Killeatervalue.GetHashCode();
    if (HasCustomname) hash ^= Customname.GetHashCode();
    hash ^= stickers_.GetHashCode();
    if (HasInventory) hash ^= Inventory.GetHashCode();
    if (HasOrigin) hash ^= Origin.GetHashCode();
    if (HasQuestid) hash ^= Questid.GetHashCode();
    if (HasDropreason) hash ^= Dropreason.GetHashCode();
    if (HasMusicindex) hash ^= Musicindex.GetHashCode();
    if (HasEntindex) hash ^= Entindex.GetHashCode();
    if (HasPetindex) hash ^= Petindex.GetHashCode();
    hash ^= keychains_.GetHashCode();
    if (HasStyle) hash ^= Style.GetHashCode();
    hash ^= variations_.GetHashCode();
    if (HasUpgradeLevel) hash ^= UpgradeLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasItemid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Itemid);
    }
    if (HasDefindex) {
      output.WriteRawTag(24);
      output.WriteUInt32(Defindex);
    }
    if (HasPaintindex) {
      output.WriteRawTag(32);
      output.WriteUInt32(Paintindex);
    }
    if (HasRarity) {
      output.WriteRawTag(40);
      output.WriteUInt32(Rarity);
    }
    if (HasQuality) {
      output.WriteRawTag(48);
      output.WriteUInt32(Quality);
    }
    if (HasPaintwear) {
      output.WriteRawTag(56);
      output.WriteUInt32(Paintwear);
    }
    if (HasPaintseed) {
      output.WriteRawTag(64);
      output.WriteUInt32(Paintseed);
    }
    if (HasKilleaterscoretype) {
      output.WriteRawTag(72);
      output.WriteUInt32(Killeaterscoretype);
    }
    if (HasKilleatervalue) {
      output.WriteRawTag(80);
      output.WriteUInt32(Killeatervalue);
    }
    if (HasCustomname) {
      output.WriteRawTag(90);
      output.WriteString(Customname);
    }
    stickers_.WriteTo(output, _repeated_stickers_codec);
    if (HasInventory) {
      output.WriteRawTag(104);
      output.WriteUInt32(Inventory);
    }
    if (HasOrigin) {
      output.WriteRawTag(112);
      output.WriteUInt32(Origin);
    }
    if (HasQuestid) {
      output.WriteRawTag(120);
      output.WriteUInt32(Questid);
    }
    if (HasDropreason) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Dropreason);
    }
    if (HasMusicindex) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(Musicindex);
    }
    if (HasEntindex) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(Entindex);
    }
    if (HasPetindex) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(Petindex);
    }
    keychains_.WriteTo(output, _repeated_keychains_codec);
    if (HasStyle) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(Style);
    }
    variations_.WriteTo(output, _repeated_variations_codec);
    if (HasUpgradeLevel) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(UpgradeLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasItemid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Itemid);
    }
    if (HasDefindex) {
      output.WriteRawTag(24);
      output.WriteUInt32(Defindex);
    }
    if (HasPaintindex) {
      output.WriteRawTag(32);
      output.WriteUInt32(Paintindex);
    }
    if (HasRarity) {
      output.WriteRawTag(40);
      output.WriteUInt32(Rarity);
    }
    if (HasQuality) {
      output.WriteRawTag(48);
      output.WriteUInt32(Quality);
    }
    if (HasPaintwear) {
      output.WriteRawTag(56);
      output.WriteUInt32(Paintwear);
    }
    if (HasPaintseed) {
      output.WriteRawTag(64);
      output.WriteUInt32(Paintseed);
    }
    if (HasKilleaterscoretype) {
      output.WriteRawTag(72);
      output.WriteUInt32(Killeaterscoretype);
    }
    if (HasKilleatervalue) {
      output.WriteRawTag(80);
      output.WriteUInt32(Killeatervalue);
    }
    if (HasCustomname) {
      output.WriteRawTag(90);
      output.WriteString(Customname);
    }
    stickers_.WriteTo(ref output, _repeated_stickers_codec);
    if (HasInventory) {
      output.WriteRawTag(104);
      output.WriteUInt32(Inventory);
    }
    if (HasOrigin) {
      output.WriteRawTag(112);
      output.WriteUInt32(Origin);
    }
    if (HasQuestid) {
      output.WriteRawTag(120);
      output.WriteUInt32(Questid);
    }
    if (HasDropreason) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Dropreason);
    }
    if (HasMusicindex) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(Musicindex);
    }
    if (HasEntindex) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(Entindex);
    }
    if (HasPetindex) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(Petindex);
    }
    keychains_.WriteTo(ref output, _repeated_keychains_codec);
    if (HasStyle) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(Style);
    }
    variations_.WriteTo(ref output, _repeated_variations_codec);
    if (HasUpgradeLevel) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(UpgradeLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasItemid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Itemid);
    }
    if (HasDefindex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Defindex);
    }
    if (HasPaintindex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Paintindex);
    }
    if (HasRarity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rarity);
    }
    if (HasQuality) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quality);
    }
    if (HasPaintwear) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Paintwear);
    }
    if (HasPaintseed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Paintseed);
    }
    if (HasKilleaterscoretype) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Killeaterscoretype);
    }
    if (HasKilleatervalue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Killeatervalue);
    }
    if (HasCustomname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Customname);
    }
    size += stickers_.CalculateSize(_repeated_stickers_codec);
    if (HasInventory) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Inventory);
    }
    if (HasOrigin) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Origin);
    }
    if (HasQuestid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Questid);
    }
    if (HasDropreason) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Dropreason);
    }
    if (HasMusicindex) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Musicindex);
    }
    if (HasEntindex) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Entindex);
    }
    if (HasPetindex) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Petindex);
    }
    size += keychains_.CalculateSize(_repeated_keychains_codec);
    if (HasStyle) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Style);
    }
    size += variations_.CalculateSize(_repeated_variations_codec);
    if (HasUpgradeLevel) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UpgradeLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CEconItemPreviewDataBlock other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasItemid) {
      Itemid = other.Itemid;
    }
    if (other.HasDefindex) {
      Defindex = other.Defindex;
    }
    if (other.HasPaintindex) {
      Paintindex = other.Paintindex;
    }
    if (other.HasRarity) {
      Rarity = other.Rarity;
    }
    if (other.HasQuality) {
      Quality = other.Quality;
    }
    if (other.HasPaintwear) {
      Paintwear = other.Paintwear;
    }
    if (other.HasPaintseed) {
      Paintseed = other.Paintseed;
    }
    if (other.HasKilleaterscoretype) {
      Killeaterscoretype = other.Killeaterscoretype;
    }
    if (other.HasKilleatervalue) {
      Killeatervalue = other.Killeatervalue;
    }
    if (other.HasCustomname) {
      Customname = other.Customname;
    }
    stickers_.Add(other.stickers_);
    if (other.HasInventory) {
      Inventory = other.Inventory;
    }
    if (other.HasOrigin) {
      Origin = other.Origin;
    }
    if (other.HasQuestid) {
      Questid = other.Questid;
    }
    if (other.HasDropreason) {
      Dropreason = other.Dropreason;
    }
    if (other.HasMusicindex) {
      Musicindex = other.Musicindex;
    }
    if (other.HasEntindex) {
      Entindex = other.Entindex;
    }
    if (other.HasPetindex) {
      Petindex = other.Petindex;
    }
    keychains_.Add(other.keychains_);
    if (other.HasStyle) {
      Style = other.Style;
    }
    variations_.Add(other.variations_);
    if (other.HasUpgradeLevel) {
      UpgradeLevel = other.UpgradeLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          Itemid = input.ReadUInt64();
          break;
        }
        case 24: {
          Defindex = input.ReadUInt32();
          break;
        }
        case 32: {
          Paintindex = input.ReadUInt32();
          break;
        }
        case 40: {
          Rarity = input.ReadUInt32();
          break;
        }
        case 48: {
          Quality = input.ReadUInt32();
          break;
        }
        case 56: {
          Paintwear = input.ReadUInt32();
          break;
        }
        case 64: {
          Paintseed = input.ReadUInt32();
          break;
        }
        case 72: {
          Killeaterscoretype = input.ReadUInt32();
          break;
        }
        case 80: {
          Killeatervalue = input.ReadUInt32();
          break;
        }
        case 90: {
          Customname = input.ReadString();
          break;
        }
        case 98: {
          stickers_.AddEntriesFrom(input, _repeated_stickers_codec);
          break;
        }
        case 104: {
          Inventory = input.ReadUInt32();
          break;
        }
        case 112: {
          Origin = input.ReadUInt32();
          break;
        }
        case 120: {
          Questid = input.ReadUInt32();
          break;
        }
        case 128: {
          Dropreason = input.ReadUInt32();
          break;
        }
        case 136: {
          Musicindex = input.ReadUInt32();
          break;
        }
        case 144: {
          Entindex = input.ReadInt32();
          break;
        }
        case 152: {
          Petindex = input.ReadUInt32();
          break;
        }
        case 162: {
          keychains_.AddEntriesFrom(input, _repeated_keychains_codec);
          break;
        }
        case 168: {
          Style = input.ReadUInt32();
          break;
        }
        case 178: {
          variations_.AddEntriesFrom(input, _repeated_variations_codec);
          break;
        }
        case 184: {
          UpgradeLevel = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          Itemid = input.ReadUInt64();
          break;
        }
        case 24: {
          Defindex = input.ReadUInt32();
          break;
        }
        case 32: {
          Paintindex = input.ReadUInt32();
          break;
        }
        case 40: {
          Rarity = input.ReadUInt32();
          break;
        }
        case 48: {
          Quality = input.ReadUInt32();
          break;
        }
        case 56: {
          Paintwear = input.ReadUInt32();
          break;
        }
        case 64: {
          Paintseed = input.ReadUInt32();
          break;
        }
        case 72: {
          Killeaterscoretype = input.ReadUInt32();
          break;
        }
        case 80: {
          Killeatervalue = input.ReadUInt32();
          break;
        }
        case 90: {
          Customname = input.ReadString();
          break;
        }
        case 98: {
          stickers_.AddEntriesFrom(ref input, _repeated_stickers_codec);
          break;
        }
        case 104: {
          Inventory = input.ReadUInt32();
          break;
        }
        case 112: {
          Origin = input.ReadUInt32();
          break;
        }
        case 120: {
          Questid = input.ReadUInt32();
          break;
        }
        case 128: {
          Dropreason = input.ReadUInt32();
          break;
        }
        case 136: {
          Musicindex = input.ReadUInt32();
          break;
        }
        case 144: {
          Entindex = input.ReadInt32();
          break;
        }
        case 152: {
          Petindex = input.ReadUInt32();
          break;
        }
        case 162: {
          keychains_.AddEntriesFrom(ref input, _repeated_keychains_codec);
          break;
        }
        case 168: {
          Style = input.ReadUInt32();
          break;
        }
        case 178: {
          variations_.AddEntriesFrom(ref input, _repeated_variations_codec);
          break;
        }
        case 184: {
          UpgradeLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CEconItemPreviewDataBlock message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Sticker : pb::IMessage<Sticker>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Sticker> _parser = new pb::MessageParser<Sticker>(() => new Sticker());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Sticker> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CEconItemPreviewDataBlock.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Sticker() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Sticker(Sticker other) : this() {
        _hasBits0 = other._hasBits0;
        slot_ = other.slot_;
        stickerId_ = other.stickerId_;
        wear_ = other.wear_;
        scale_ = other.scale_;
        rotation_ = other.rotation_;
        tintId_ = other.tintId_;
        offsetX_ = other.offsetX_;
        offsetY_ = other.offsetY_;
        offsetZ_ = other.offsetZ_;
        pattern_ = other.pattern_;
        highlightReel_ = other.highlightReel_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Sticker Clone() {
        return new Sticker(this);
      }

      /// <summary>Field number for the "slot" field.</summary>
      public const int SlotFieldNumber = 1;
      private readonly static uint SlotDefaultValue = 0;

      private uint slot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Slot {
        get { if ((_hasBits0 & 1) != 0) { return slot_; } else { return SlotDefaultValue; } }
        set {
          _hasBits0 |= 1;
          slot_ = value;
        }
      }
      /// <summary>Gets whether the "slot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSlot {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "slot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSlot() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "sticker_id" field.</summary>
      public const int StickerIdFieldNumber = 2;
      private readonly static uint StickerIdDefaultValue = 0;

      private uint stickerId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint StickerId {
        get { if ((_hasBits0 & 2) != 0) { return stickerId_; } else { return StickerIdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          stickerId_ = value;
        }
      }
      /// <summary>Gets whether the "sticker_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasStickerId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "sticker_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearStickerId() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "wear" field.</summary>
      public const int WearFieldNumber = 3;
      private readonly static float WearDefaultValue = 0F;

      private float wear_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Wear {
        get { if ((_hasBits0 & 4) != 0) { return wear_; } else { return WearDefaultValue; } }
        set {
          _hasBits0 |= 4;
          wear_ = value;
        }
      }
      /// <summary>Gets whether the "wear" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasWear {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "wear" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearWear() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "scale" field.</summary>
      public const int ScaleFieldNumber = 4;
      private readonly static float ScaleDefaultValue = 0F;

      private float scale_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Scale {
        get { if ((_hasBits0 & 8) != 0) { return scale_; } else { return ScaleDefaultValue; } }
        set {
          _hasBits0 |= 8;
          scale_ = value;
        }
      }
      /// <summary>Gets whether the "scale" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasScale {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "scale" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearScale() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "rotation" field.</summary>
      public const int RotationFieldNumber = 5;
      private readonly static float RotationDefaultValue = 0F;

      private float rotation_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Rotation {
        get { if ((_hasBits0 & 16) != 0) { return rotation_; } else { return RotationDefaultValue; } }
        set {
          _hasBits0 |= 16;
          rotation_ = value;
        }
      }
      /// <summary>Gets whether the "rotation" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRotation {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "rotation" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRotation() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "tint_id" field.</summary>
      public const int TintIdFieldNumber = 6;
      private readonly static uint TintIdDefaultValue = 0;

      private uint tintId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TintId {
        get { if ((_hasBits0 & 32) != 0) { return tintId_; } else { return TintIdDefaultValue; } }
        set {
          _hasBits0 |= 32;
          tintId_ = value;
        }
      }
      /// <summary>Gets whether the "tint_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTintId {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "tint_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTintId() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "offset_x" field.</summary>
      public const int OffsetXFieldNumber = 7;
      private readonly static float OffsetXDefaultValue = 0F;

      private float offsetX_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float OffsetX {
        get { if ((_hasBits0 & 64) != 0) { return offsetX_; } else { return OffsetXDefaultValue; } }
        set {
          _hasBits0 |= 64;
          offsetX_ = value;
        }
      }
      /// <summary>Gets whether the "offset_x" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOffsetX {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "offset_x" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOffsetX() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "offset_y" field.</summary>
      public const int OffsetYFieldNumber = 8;
      private readonly static float OffsetYDefaultValue = 0F;

      private float offsetY_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float OffsetY {
        get { if ((_hasBits0 & 128) != 0) { return offsetY_; } else { return OffsetYDefaultValue; } }
        set {
          _hasBits0 |= 128;
          offsetY_ = value;
        }
      }
      /// <summary>Gets whether the "offset_y" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOffsetY {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "offset_y" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOffsetY() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "offset_z" field.</summary>
      public const int OffsetZFieldNumber = 9;
      private readonly static float OffsetZDefaultValue = 0F;

      private float offsetZ_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float OffsetZ {
        get { if ((_hasBits0 & 256) != 0) { return offsetZ_; } else { return OffsetZDefaultValue; } }
        set {
          _hasBits0 |= 256;
          offsetZ_ = value;
        }
      }
      /// <summary>Gets whether the "offset_z" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOffsetZ {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "offset_z" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOffsetZ() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "pattern" field.</summary>
      public const int PatternFieldNumber = 10;
      private readonly static uint PatternDefaultValue = 0;

      private uint pattern_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Pattern {
        get { if ((_hasBits0 & 512) != 0) { return pattern_; } else { return PatternDefaultValue; } }
        set {
          _hasBits0 |= 512;
          pattern_ = value;
        }
      }
      /// <summary>Gets whether the "pattern" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPattern {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "pattern" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPattern() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "highlight_reel" field.</summary>
      public const int HighlightReelFieldNumber = 11;
      private readonly static uint HighlightReelDefaultValue = 0;

      private uint highlightReel_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint HighlightReel {
        get { if ((_hasBits0 & 1024) != 0) { return highlightReel_; } else { return HighlightReelDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          highlightReel_ = value;
        }
      }
      /// <summary>Gets whether the "highlight_reel" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHighlightReel {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "highlight_reel" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHighlightReel() {
        _hasBits0 &= ~1024;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Sticker);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Sticker other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Slot != other.Slot) return false;
        if (StickerId != other.StickerId) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Wear, other.Wear)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
        if (TintId != other.TintId) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OffsetX, other.OffsetX)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OffsetY, other.OffsetY)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OffsetZ, other.OffsetZ)) return false;
        if (Pattern != other.Pattern) return false;
        if (HighlightReel != other.HighlightReel) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSlot) hash ^= Slot.GetHashCode();
        if (HasStickerId) hash ^= StickerId.GetHashCode();
        if (HasWear) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Wear);
        if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
        if (HasRotation) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
        if (HasTintId) hash ^= TintId.GetHashCode();
        if (HasOffsetX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OffsetX);
        if (HasOffsetY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OffsetY);
        if (HasOffsetZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OffsetZ);
        if (HasPattern) hash ^= Pattern.GetHashCode();
        if (HasHighlightReel) hash ^= HighlightReel.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSlot) {
          output.WriteRawTag(8);
          output.WriteUInt32(Slot);
        }
        if (HasStickerId) {
          output.WriteRawTag(16);
          output.WriteUInt32(StickerId);
        }
        if (HasWear) {
          output.WriteRawTag(29);
          output.WriteFloat(Wear);
        }
        if (HasScale) {
          output.WriteRawTag(37);
          output.WriteFloat(Scale);
        }
        if (HasRotation) {
          output.WriteRawTag(45);
          output.WriteFloat(Rotation);
        }
        if (HasTintId) {
          output.WriteRawTag(48);
          output.WriteUInt32(TintId);
        }
        if (HasOffsetX) {
          output.WriteRawTag(61);
          output.WriteFloat(OffsetX);
        }
        if (HasOffsetY) {
          output.WriteRawTag(69);
          output.WriteFloat(OffsetY);
        }
        if (HasOffsetZ) {
          output.WriteRawTag(77);
          output.WriteFloat(OffsetZ);
        }
        if (HasPattern) {
          output.WriteRawTag(80);
          output.WriteUInt32(Pattern);
        }
        if (HasHighlightReel) {
          output.WriteRawTag(88);
          output.WriteUInt32(HighlightReel);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSlot) {
          output.WriteRawTag(8);
          output.WriteUInt32(Slot);
        }
        if (HasStickerId) {
          output.WriteRawTag(16);
          output.WriteUInt32(StickerId);
        }
        if (HasWear) {
          output.WriteRawTag(29);
          output.WriteFloat(Wear);
        }
        if (HasScale) {
          output.WriteRawTag(37);
          output.WriteFloat(Scale);
        }
        if (HasRotation) {
          output.WriteRawTag(45);
          output.WriteFloat(Rotation);
        }
        if (HasTintId) {
          output.WriteRawTag(48);
          output.WriteUInt32(TintId);
        }
        if (HasOffsetX) {
          output.WriteRawTag(61);
          output.WriteFloat(OffsetX);
        }
        if (HasOffsetY) {
          output.WriteRawTag(69);
          output.WriteFloat(OffsetY);
        }
        if (HasOffsetZ) {
          output.WriteRawTag(77);
          output.WriteFloat(OffsetZ);
        }
        if (HasPattern) {
          output.WriteRawTag(80);
          output.WriteUInt32(Pattern);
        }
        if (HasHighlightReel) {
          output.WriteRawTag(88);
          output.WriteUInt32(HighlightReel);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSlot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Slot);
        }
        if (HasStickerId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StickerId);
        }
        if (HasWear) {
          size += 1 + 4;
        }
        if (HasScale) {
          size += 1 + 4;
        }
        if (HasRotation) {
          size += 1 + 4;
        }
        if (HasTintId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TintId);
        }
        if (HasOffsetX) {
          size += 1 + 4;
        }
        if (HasOffsetY) {
          size += 1 + 4;
        }
        if (HasOffsetZ) {
          size += 1 + 4;
        }
        if (HasPattern) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pattern);
        }
        if (HasHighlightReel) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HighlightReel);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Sticker other) {
        if (other == null) {
          return;
        }
        if (other.HasSlot) {
          Slot = other.Slot;
        }
        if (other.HasStickerId) {
          StickerId = other.StickerId;
        }
        if (other.HasWear) {
          Wear = other.Wear;
        }
        if (other.HasScale) {
          Scale = other.Scale;
        }
        if (other.HasRotation) {
          Rotation = other.Rotation;
        }
        if (other.HasTintId) {
          TintId = other.TintId;
        }
        if (other.HasOffsetX) {
          OffsetX = other.OffsetX;
        }
        if (other.HasOffsetY) {
          OffsetY = other.OffsetY;
        }
        if (other.HasOffsetZ) {
          OffsetZ = other.OffsetZ;
        }
        if (other.HasPattern) {
          Pattern = other.Pattern;
        }
        if (other.HasHighlightReel) {
          HighlightReel = other.HighlightReel;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Slot = input.ReadUInt32();
              break;
            }
            case 16: {
              StickerId = input.ReadUInt32();
              break;
            }
            case 29: {
              Wear = input.ReadFloat();
              break;
            }
            case 37: {
              Scale = input.ReadFloat();
              break;
            }
            case 45: {
              Rotation = input.ReadFloat();
              break;
            }
            case 48: {
              TintId = input.ReadUInt32();
              break;
            }
            case 61: {
              OffsetX = input.ReadFloat();
              break;
            }
            case 69: {
              OffsetY = input.ReadFloat();
              break;
            }
            case 77: {
              OffsetZ = input.ReadFloat();
              break;
            }
            case 80: {
              Pattern = input.ReadUInt32();
              break;
            }
            case 88: {
              HighlightReel = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Slot = input.ReadUInt32();
              break;
            }
            case 16: {
              StickerId = input.ReadUInt32();
              break;
            }
            case 29: {
              Wear = input.ReadFloat();
              break;
            }
            case 37: {
              Scale = input.ReadFloat();
              break;
            }
            case 45: {
              Rotation = input.ReadFloat();
              break;
            }
            case 48: {
              TintId = input.ReadUInt32();
              break;
            }
            case 61: {
              OffsetX = input.ReadFloat();
              break;
            }
            case 69: {
              OffsetY = input.ReadFloat();
              break;
            }
            case 77: {
              OffsetZ = input.ReadFloat();
              break;
            }
            case 80: {
              Pattern = input.ReadUInt32();
              break;
            }
            case 88: {
              HighlightReel = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_MatchEndRewardDropsNotification : pb::IMessage<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification>(() => new CMsgGCCStrike15_v2_MatchEndRewardDropsNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[71]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchEndRewardDropsNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchEndRewardDropsNotification(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification other) : this() {
    iteminfo_ = other.iteminfo_ != null ? other.iteminfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchEndRewardDropsNotification Clone() {
    return new CMsgGCCStrike15_v2_MatchEndRewardDropsNotification(this);
  }

  /// <summary>Field number for the "iteminfo" field.</summary>
  public const int IteminfoFieldNumber = 6;
  private global::CEconItemPreviewDataBlock iteminfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CEconItemPreviewDataBlock Iteminfo {
    get { return iteminfo_; }
    set {
      iteminfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchEndRewardDropsNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Iteminfo, other.Iteminfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (iteminfo_ != null) hash ^= Iteminfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (iteminfo_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Iteminfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (iteminfo_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Iteminfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (iteminfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Iteminfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchEndRewardDropsNotification other) {
    if (other == null) {
      return;
    }
    if (other.iteminfo_ != null) {
      if (iteminfo_ == null) {
        Iteminfo = new global::CEconItemPreviewDataBlock();
      }
      Iteminfo.MergeFrom(other.Iteminfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 50: {
          if (iteminfo_ == null) {
            Iteminfo = new global::CEconItemPreviewDataBlock();
          }
          input.ReadMessage(Iteminfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 50: {
          if (iteminfo_ == null) {
            Iteminfo = new global::CEconItemPreviewDataBlock();
          }
          input.ReadMessage(Iteminfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgItemAcknowledged : pb::IMessage<CMsgItemAcknowledged>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgItemAcknowledged> _parser = new pb::MessageParser<CMsgItemAcknowledged>(() => new CMsgItemAcknowledged());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgItemAcknowledged> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[72]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgItemAcknowledged() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgItemAcknowledged(CMsgItemAcknowledged other) : this() {
    iteminfo_ = other.iteminfo_ != null ? other.iteminfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgItemAcknowledged Clone() {
    return new CMsgItemAcknowledged(this);
  }

  /// <summary>Field number for the "iteminfo" field.</summary>
  public const int IteminfoFieldNumber = 1;
  private global::CEconItemPreviewDataBlock iteminfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CEconItemPreviewDataBlock Iteminfo {
    get { return iteminfo_; }
    set {
      iteminfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgItemAcknowledged);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgItemAcknowledged other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Iteminfo, other.Iteminfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (iteminfo_ != null) hash ^= Iteminfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (iteminfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Iteminfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (iteminfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Iteminfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (iteminfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Iteminfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgItemAcknowledged other) {
    if (other == null) {
      return;
    }
    if (other.iteminfo_ != null) {
      if (iteminfo_ == null) {
        Iteminfo = new global::CEconItemPreviewDataBlock();
      }
      Iteminfo.MergeFrom(other.Iteminfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (iteminfo_ == null) {
            Iteminfo = new global::CEconItemPreviewDataBlock();
          }
          input.ReadMessage(Iteminfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (iteminfo_ == null) {
            Iteminfo = new global::CEconItemPreviewDataBlock();
          }
          input.ReadMessage(Iteminfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest : pb::IMessage<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest>(() => new CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[73]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest other) : this() {
    _hasBits0 = other._hasBits0;
    paramS_ = other.paramS_;
    paramA_ = other.paramA_;
    paramD_ = other.paramD_;
    paramM_ = other.paramM_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest Clone() {
    return new CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest(this);
  }

  /// <summary>Field number for the "param_s" field.</summary>
  public const int ParamSFieldNumber = 1;
  private readonly static ulong ParamSDefaultValue = 0UL;

  private ulong paramS_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ParamS {
    get { if ((_hasBits0 & 1) != 0) { return paramS_; } else { return ParamSDefaultValue; } }
    set {
      _hasBits0 |= 1;
      paramS_ = value;
    }
  }
  /// <summary>Gets whether the "param_s" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParamS {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "param_s" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParamS() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "param_a" field.</summary>
  public const int ParamAFieldNumber = 2;
  private readonly static ulong ParamADefaultValue = 0UL;

  private ulong paramA_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ParamA {
    get { if ((_hasBits0 & 2) != 0) { return paramA_; } else { return ParamADefaultValue; } }
    set {
      _hasBits0 |= 2;
      paramA_ = value;
    }
  }
  /// <summary>Gets whether the "param_a" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParamA {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "param_a" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParamA() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "param_d" field.</summary>
  public const int ParamDFieldNumber = 3;
  private readonly static ulong ParamDDefaultValue = 0UL;

  private ulong paramD_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ParamD {
    get { if ((_hasBits0 & 4) != 0) { return paramD_; } else { return ParamDDefaultValue; } }
    set {
      _hasBits0 |= 4;
      paramD_ = value;
    }
  }
  /// <summary>Gets whether the "param_d" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParamD {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "param_d" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParamD() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "param_m" field.</summary>
  public const int ParamMFieldNumber = 4;
  private readonly static ulong ParamMDefaultValue = 0UL;

  private ulong paramM_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ParamM {
    get { if ((_hasBits0 & 8) != 0) { return paramM_; } else { return ParamMDefaultValue; } }
    set {
      _hasBits0 |= 8;
      paramM_ = value;
    }
  }
  /// <summary>Gets whether the "param_m" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParamM {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "param_m" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParamM() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ParamS != other.ParamS) return false;
    if (ParamA != other.ParamA) return false;
    if (ParamD != other.ParamD) return false;
    if (ParamM != other.ParamM) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasParamS) hash ^= ParamS.GetHashCode();
    if (HasParamA) hash ^= ParamA.GetHashCode();
    if (HasParamD) hash ^= ParamD.GetHashCode();
    if (HasParamM) hash ^= ParamM.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasParamS) {
      output.WriteRawTag(8);
      output.WriteUInt64(ParamS);
    }
    if (HasParamA) {
      output.WriteRawTag(16);
      output.WriteUInt64(ParamA);
    }
    if (HasParamD) {
      output.WriteRawTag(24);
      output.WriteUInt64(ParamD);
    }
    if (HasParamM) {
      output.WriteRawTag(32);
      output.WriteUInt64(ParamM);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasParamS) {
      output.WriteRawTag(8);
      output.WriteUInt64(ParamS);
    }
    if (HasParamA) {
      output.WriteRawTag(16);
      output.WriteUInt64(ParamA);
    }
    if (HasParamD) {
      output.WriteRawTag(24);
      output.WriteUInt64(ParamD);
    }
    if (HasParamM) {
      output.WriteRawTag(32);
      output.WriteUInt64(ParamM);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasParamS) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ParamS);
    }
    if (HasParamA) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ParamA);
    }
    if (HasParamD) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ParamD);
    }
    if (HasParamM) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ParamM);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasParamS) {
      ParamS = other.ParamS;
    }
    if (other.HasParamA) {
      ParamA = other.ParamA;
    }
    if (other.HasParamD) {
      ParamD = other.ParamD;
    }
    if (other.HasParamM) {
      ParamM = other.ParamM;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ParamS = input.ReadUInt64();
          break;
        }
        case 16: {
          ParamA = input.ReadUInt64();
          break;
        }
        case 24: {
          ParamD = input.ReadUInt64();
          break;
        }
        case 32: {
          ParamM = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ParamS = input.ReadUInt64();
          break;
        }
        case 16: {
          ParamA = input.ReadUInt64();
          break;
        }
        case 24: {
          ParamD = input.ReadUInt64();
          break;
        }
        case 32: {
          ParamM = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse : pb::IMessage<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse>(() => new CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[74]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse other) : this() {
    iteminfo_ = other.iteminfo_ != null ? other.iteminfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse Clone() {
    return new CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse(this);
  }

  /// <summary>Field number for the "iteminfo" field.</summary>
  public const int IteminfoFieldNumber = 1;
  private global::CEconItemPreviewDataBlock iteminfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CEconItemPreviewDataBlock Iteminfo {
    get { return iteminfo_; }
    set {
      iteminfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Iteminfo, other.Iteminfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (iteminfo_ != null) hash ^= Iteminfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (iteminfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Iteminfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (iteminfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Iteminfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (iteminfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Iteminfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse other) {
    if (other == null) {
      return;
    }
    if (other.iteminfo_ != null) {
      if (iteminfo_ == null) {
        Iteminfo = new global::CEconItemPreviewDataBlock();
      }
      Iteminfo.MergeFrom(other.Iteminfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (iteminfo_ == null) {
            Iteminfo = new global::CEconItemPreviewDataBlock();
          }
          input.ReadMessage(Iteminfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (iteminfo_ == null) {
            Iteminfo = new global::CEconItemPreviewDataBlock();
          }
          input.ReadMessage(Iteminfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames : pb::IMessage<CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames>(() => new CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[75]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames Clone() {
    return new CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser : pb::IMessage<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser>(() => new CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[76]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser Clone() {
    return new CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchListRequestRecentUserGames : pb::IMessage<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames>(() => new CMsgGCCStrike15_v2_MatchListRequestRecentUserGames());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[77]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestRecentUserGames() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestRecentUserGames(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestRecentUserGames Clone() {
    return new CMsgGCCStrike15_v2_MatchListRequestRecentUserGames(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchListRequestRecentUserGames);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchListRequestRecentUserGames other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchListRequestTournamentGames : pb::IMessage<CMsgGCCStrike15_v2_MatchListRequestTournamentGames>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestTournamentGames> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestTournamentGames>(() => new CMsgGCCStrike15_v2_MatchListRequestTournamentGames());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestTournamentGames> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[78]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestTournamentGames() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestTournamentGames(CMsgGCCStrike15_v2_MatchListRequestTournamentGames other) : this() {
    _hasBits0 = other._hasBits0;
    eventid_ = other.eventid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestTournamentGames Clone() {
    return new CMsgGCCStrike15_v2_MatchListRequestTournamentGames(this);
  }

  /// <summary>Field number for the "eventid" field.</summary>
  public const int EventidFieldNumber = 1;
  private readonly static int EventidDefaultValue = 0;

  private int eventid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eventid {
    get { if ((_hasBits0 & 1) != 0) { return eventid_; } else { return EventidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventid_ = value;
    }
  }
  /// <summary>Gets whether the "eventid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eventid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchListRequestTournamentGames);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchListRequestTournamentGames other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eventid != other.Eventid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventid) hash ^= Eventid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteInt32(Eventid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteInt32(Eventid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventid) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eventid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchListRequestTournamentGames other) {
    if (other == null) {
      return;
    }
    if (other.HasEventid) {
      Eventid = other.Eventid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eventid = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eventid = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchListRequestFullGameInfo : pb::IMessage<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo>(() => new CMsgGCCStrike15_v2_MatchListRequestFullGameInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[79]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestFullGameInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestFullGameInfo(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo other) : this() {
    _hasBits0 = other._hasBits0;
    matchid_ = other.matchid_;
    outcomeid_ = other.outcomeid_;
    token_ = other.token_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListRequestFullGameInfo Clone() {
    return new CMsgGCCStrike15_v2_MatchListRequestFullGameInfo(this);
  }

  /// <summary>Field number for the "matchid" field.</summary>
  public const int MatchidFieldNumber = 1;
  private readonly static ulong MatchidDefaultValue = 0UL;

  private ulong matchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Matchid {
    get { if ((_hasBits0 & 1) != 0) { return matchid_; } else { return MatchidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      matchid_ = value;
    }
  }
  /// <summary>Gets whether the "matchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "matchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "outcomeid" field.</summary>
  public const int OutcomeidFieldNumber = 2;
  private readonly static ulong OutcomeidDefaultValue = 0UL;

  private ulong outcomeid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Outcomeid {
    get { if ((_hasBits0 & 2) != 0) { return outcomeid_; } else { return OutcomeidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      outcomeid_ = value;
    }
  }
  /// <summary>Gets whether the "outcomeid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOutcomeid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "outcomeid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOutcomeid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 3;
  private readonly static uint TokenDefaultValue = 0;

  private uint token_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Token {
    get { if ((_hasBits0 & 4) != 0) { return token_; } else { return TokenDefaultValue; } }
    set {
      _hasBits0 |= 4;
      token_ = value;
    }
  }
  /// <summary>Gets whether the "token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToken {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToken() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchListRequestFullGameInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Matchid != other.Matchid) return false;
    if (Outcomeid != other.Outcomeid) return false;
    if (Token != other.Token) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMatchid) hash ^= Matchid.GetHashCode();
    if (HasOutcomeid) hash ^= Outcomeid.GetHashCode();
    if (HasToken) hash ^= Token.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMatchid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Matchid);
    }
    if (HasOutcomeid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Outcomeid);
    }
    if (HasToken) {
      output.WriteRawTag(24);
      output.WriteUInt32(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMatchid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Matchid);
    }
    if (HasOutcomeid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Outcomeid);
    }
    if (HasToken) {
      output.WriteRawTag(24);
      output.WriteUInt32(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMatchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Matchid);
    }
    if (HasOutcomeid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Outcomeid);
    }
    if (HasToken) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Token);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchListRequestFullGameInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasMatchid) {
      Matchid = other.Matchid;
    }
    if (other.HasOutcomeid) {
      Outcomeid = other.Outcomeid;
    }
    if (other.HasToken) {
      Token = other.Token;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 16: {
          Outcomeid = input.ReadUInt64();
          break;
        }
        case 24: {
          Token = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 16: {
          Outcomeid = input.ReadUInt64();
          break;
        }
        case 24: {
          Token = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDataGCCStrike15_v2_MatchInfo : pb::IMessage<CDataGCCStrike15_v2_MatchInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDataGCCStrike15_v2_MatchInfo> _parser = new pb::MessageParser<CDataGCCStrike15_v2_MatchInfo>(() => new CDataGCCStrike15_v2_MatchInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDataGCCStrike15_v2_MatchInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[80]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_MatchInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_MatchInfo(CDataGCCStrike15_v2_MatchInfo other) : this() {
    _hasBits0 = other._hasBits0;
    matchid_ = other.matchid_;
    matchtime_ = other.matchtime_;
    watchablematchinfo_ = other.watchablematchinfo_ != null ? other.watchablematchinfo_.Clone() : null;
    roundstatsLegacy_ = other.roundstatsLegacy_ != null ? other.roundstatsLegacy_.Clone() : null;
    roundstatsall_ = other.roundstatsall_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_MatchInfo Clone() {
    return new CDataGCCStrike15_v2_MatchInfo(this);
  }

  /// <summary>Field number for the "matchid" field.</summary>
  public const int MatchidFieldNumber = 1;
  private readonly static ulong MatchidDefaultValue = 0UL;

  private ulong matchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Matchid {
    get { if ((_hasBits0 & 1) != 0) { return matchid_; } else { return MatchidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      matchid_ = value;
    }
  }
  /// <summary>Gets whether the "matchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "matchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "matchtime" field.</summary>
  public const int MatchtimeFieldNumber = 2;
  private readonly static uint MatchtimeDefaultValue = 0;

  private uint matchtime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Matchtime {
    get { if ((_hasBits0 & 2) != 0) { return matchtime_; } else { return MatchtimeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchtime_ = value;
    }
  }
  /// <summary>Gets whether the "matchtime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchtime {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "matchtime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchtime() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "watchablematchinfo" field.</summary>
  public const int WatchablematchinfoFieldNumber = 3;
  private global::WatchableMatchInfo watchablematchinfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::WatchableMatchInfo Watchablematchinfo {
    get { return watchablematchinfo_; }
    set {
      watchablematchinfo_ = value;
    }
  }

  /// <summary>Field number for the "roundstats_legacy" field.</summary>
  public const int RoundstatsLegacyFieldNumber = 4;
  private global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstatsLegacy_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats RoundstatsLegacy {
    get { return roundstatsLegacy_; }
    set {
      roundstatsLegacy_ = value;
    }
  }

  /// <summary>Field number for the "roundstatsall" field.</summary>
  public const int RoundstatsallFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats> _repeated_roundstatsall_codec
      = pb::FieldCodec.ForMessage(42, global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats> roundstatsall_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats> Roundstatsall {
    get { return roundstatsall_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDataGCCStrike15_v2_MatchInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDataGCCStrike15_v2_MatchInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Matchid != other.Matchid) return false;
    if (Matchtime != other.Matchtime) return false;
    if (!object.Equals(Watchablematchinfo, other.Watchablematchinfo)) return false;
    if (!object.Equals(RoundstatsLegacy, other.RoundstatsLegacy)) return false;
    if(!roundstatsall_.Equals(other.roundstatsall_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMatchid) hash ^= Matchid.GetHashCode();
    if (HasMatchtime) hash ^= Matchtime.GetHashCode();
    if (watchablematchinfo_ != null) hash ^= Watchablematchinfo.GetHashCode();
    if (roundstatsLegacy_ != null) hash ^= RoundstatsLegacy.GetHashCode();
    hash ^= roundstatsall_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMatchid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Matchid);
    }
    if (HasMatchtime) {
      output.WriteRawTag(16);
      output.WriteUInt32(Matchtime);
    }
    if (watchablematchinfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Watchablematchinfo);
    }
    if (roundstatsLegacy_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(RoundstatsLegacy);
    }
    roundstatsall_.WriteTo(output, _repeated_roundstatsall_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMatchid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Matchid);
    }
    if (HasMatchtime) {
      output.WriteRawTag(16);
      output.WriteUInt32(Matchtime);
    }
    if (watchablematchinfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Watchablematchinfo);
    }
    if (roundstatsLegacy_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(RoundstatsLegacy);
    }
    roundstatsall_.WriteTo(ref output, _repeated_roundstatsall_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMatchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Matchid);
    }
    if (HasMatchtime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Matchtime);
    }
    if (watchablematchinfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Watchablematchinfo);
    }
    if (roundstatsLegacy_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoundstatsLegacy);
    }
    size += roundstatsall_.CalculateSize(_repeated_roundstatsall_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDataGCCStrike15_v2_MatchInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasMatchid) {
      Matchid = other.Matchid;
    }
    if (other.HasMatchtime) {
      Matchtime = other.Matchtime;
    }
    if (other.watchablematchinfo_ != null) {
      if (watchablematchinfo_ == null) {
        Watchablematchinfo = new global::WatchableMatchInfo();
      }
      Watchablematchinfo.MergeFrom(other.Watchablematchinfo);
    }
    if (other.roundstatsLegacy_ != null) {
      if (roundstatsLegacy_ == null) {
        RoundstatsLegacy = new global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats();
      }
      RoundstatsLegacy.MergeFrom(other.RoundstatsLegacy);
    }
    roundstatsall_.Add(other.roundstatsall_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 16: {
          Matchtime = input.ReadUInt32();
          break;
        }
        case 26: {
          if (watchablematchinfo_ == null) {
            Watchablematchinfo = new global::WatchableMatchInfo();
          }
          input.ReadMessage(Watchablematchinfo);
          break;
        }
        case 34: {
          if (roundstatsLegacy_ == null) {
            RoundstatsLegacy = new global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats();
          }
          input.ReadMessage(RoundstatsLegacy);
          break;
        }
        case 42: {
          roundstatsall_.AddEntriesFrom(input, _repeated_roundstatsall_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 16: {
          Matchtime = input.ReadUInt32();
          break;
        }
        case 26: {
          if (watchablematchinfo_ == null) {
            Watchablematchinfo = new global::WatchableMatchInfo();
          }
          input.ReadMessage(Watchablematchinfo);
          break;
        }
        case 34: {
          if (roundstatsLegacy_ == null) {
            RoundstatsLegacy = new global::CMsgGCCStrike15_v2_MatchmakingServerRoundStats();
          }
          input.ReadMessage(RoundstatsLegacy);
          break;
        }
        case 42: {
          roundstatsall_.AddEntriesFrom(ref input, _repeated_roundstatsall_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDataGCCStrike15_v2_TournamentGroupTeam : pb::IMessage<CDataGCCStrike15_v2_TournamentGroupTeam>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDataGCCStrike15_v2_TournamentGroupTeam> _parser = new pb::MessageParser<CDataGCCStrike15_v2_TournamentGroupTeam>(() => new CDataGCCStrike15_v2_TournamentGroupTeam());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDataGCCStrike15_v2_TournamentGroupTeam> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[81]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentGroupTeam() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentGroupTeam(CDataGCCStrike15_v2_TournamentGroupTeam other) : this() {
    _hasBits0 = other._hasBits0;
    teamId_ = other.teamId_;
    score_ = other.score_;
    correctpick_ = other.correctpick_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentGroupTeam Clone() {
    return new CDataGCCStrike15_v2_TournamentGroupTeam(this);
  }

  /// <summary>Field number for the "team_id" field.</summary>
  public const int TeamIdFieldNumber = 1;
  private readonly static int TeamIdDefaultValue = 0;

  private int teamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TeamId {
    get { if ((_hasBits0 & 1) != 0) { return teamId_; } else { return TeamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      teamId_ = value;
    }
  }
  /// <summary>Gets whether the "team_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "team_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 2;
  private readonly static int ScoreDefaultValue = 0;

  private int score_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Score {
    get { if ((_hasBits0 & 2) != 0) { return score_; } else { return ScoreDefaultValue; } }
    set {
      _hasBits0 |= 2;
      score_ = value;
    }
  }
  /// <summary>Gets whether the "score" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScore {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "score" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScore() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "correctpick" field.</summary>
  public const int CorrectpickFieldNumber = 3;
  private readonly static bool CorrectpickDefaultValue = false;

  private bool correctpick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Correctpick {
    get { if ((_hasBits0 & 4) != 0) { return correctpick_; } else { return CorrectpickDefaultValue; } }
    set {
      _hasBits0 |= 4;
      correctpick_ = value;
    }
  }
  /// <summary>Gets whether the "correctpick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCorrectpick {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "correctpick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCorrectpick() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDataGCCStrike15_v2_TournamentGroupTeam);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDataGCCStrike15_v2_TournamentGroupTeam other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TeamId != other.TeamId) return false;
    if (Score != other.Score) return false;
    if (Correctpick != other.Correctpick) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTeamId) hash ^= TeamId.GetHashCode();
    if (HasScore) hash ^= Score.GetHashCode();
    if (HasCorrectpick) hash ^= Correctpick.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTeamId) {
      output.WriteRawTag(8);
      output.WriteInt32(TeamId);
    }
    if (HasScore) {
      output.WriteRawTag(16);
      output.WriteInt32(Score);
    }
    if (HasCorrectpick) {
      output.WriteRawTag(24);
      output.WriteBool(Correctpick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTeamId) {
      output.WriteRawTag(8);
      output.WriteInt32(TeamId);
    }
    if (HasScore) {
      output.WriteRawTag(16);
      output.WriteInt32(Score);
    }
    if (HasCorrectpick) {
      output.WriteRawTag(24);
      output.WriteBool(Correctpick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTeamId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamId);
    }
    if (HasScore) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
    }
    if (HasCorrectpick) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDataGCCStrike15_v2_TournamentGroupTeam other) {
    if (other == null) {
      return;
    }
    if (other.HasTeamId) {
      TeamId = other.TeamId;
    }
    if (other.HasScore) {
      Score = other.Score;
    }
    if (other.HasCorrectpick) {
      Correctpick = other.Correctpick;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TeamId = input.ReadInt32();
          break;
        }
        case 16: {
          Score = input.ReadInt32();
          break;
        }
        case 24: {
          Correctpick = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TeamId = input.ReadInt32();
          break;
        }
        case 16: {
          Score = input.ReadInt32();
          break;
        }
        case 24: {
          Correctpick = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDataGCCStrike15_v2_TournamentGroup : pb::IMessage<CDataGCCStrike15_v2_TournamentGroup>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDataGCCStrike15_v2_TournamentGroup> _parser = new pb::MessageParser<CDataGCCStrike15_v2_TournamentGroup>(() => new CDataGCCStrike15_v2_TournamentGroup());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDataGCCStrike15_v2_TournamentGroup> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[82]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentGroup() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentGroup(CDataGCCStrike15_v2_TournamentGroup other) : this() {
    _hasBits0 = other._hasBits0;
    groupid_ = other.groupid_;
    name_ = other.name_;
    desc_ = other.desc_;
    picksDeprecated_ = other.picksDeprecated_;
    teams_ = other.teams_.Clone();
    stageIds_ = other.stageIds_.Clone();
    picklockuntiltime_ = other.picklockuntiltime_;
    pickableteams_ = other.pickableteams_;
    pointsPerPick_ = other.pointsPerPick_;
    picks_ = other.picks_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentGroup Clone() {
    return new CDataGCCStrike15_v2_TournamentGroup(this);
  }

  /// <summary>Field number for the "groupid" field.</summary>
  public const int GroupidFieldNumber = 1;
  private readonly static uint GroupidDefaultValue = 0;

  private uint groupid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Groupid {
    get { if ((_hasBits0 & 1) != 0) { return groupid_; } else { return GroupidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      groupid_ = value;
    }
  }
  /// <summary>Gets whether the "groupid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGroupid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "groupid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGroupid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "desc" field.</summary>
  public const int DescFieldNumber = 3;
  private readonly static string DescDefaultValue = "";

  private string desc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Desc {
    get { return desc_ ?? DescDefaultValue; }
    set {
      desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "desc" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDesc {
    get { return desc_ != null; }
  }
  /// <summary>Clears the value of the "desc" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDesc() {
    desc_ = null;
  }

  /// <summary>Field number for the "picks__deprecated" field.</summary>
  public const int PicksDeprecatedFieldNumber = 4;
  private readonly static uint PicksDeprecatedDefaultValue = 0;

  private uint picksDeprecated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PicksDeprecated {
    get { if ((_hasBits0 & 2) != 0) { return picksDeprecated_; } else { return PicksDeprecatedDefaultValue; } }
    set {
      _hasBits0 |= 2;
      picksDeprecated_ = value;
    }
  }
  /// <summary>Gets whether the "picks__deprecated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPicksDeprecated {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "picks__deprecated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPicksDeprecated() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "teams" field.</summary>
  public const int TeamsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CDataGCCStrike15_v2_TournamentGroupTeam> _repeated_teams_codec
      = pb::FieldCodec.ForMessage(42, global::CDataGCCStrike15_v2_TournamentGroupTeam.Parser);
  private readonly pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroupTeam> teams_ = new pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroupTeam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroupTeam> Teams {
    get { return teams_; }
  }

  /// <summary>Field number for the "stage_ids" field.</summary>
  public const int StageIdsFieldNumber = 6;
  private static readonly pb::FieldCodec<int> _repeated_stageIds_codec
      = pb::FieldCodec.ForInt32(48);
  private readonly pbc::RepeatedField<int> stageIds_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> StageIds {
    get { return stageIds_; }
  }

  /// <summary>Field number for the "picklockuntiltime" field.</summary>
  public const int PicklockuntiltimeFieldNumber = 7;
  private readonly static uint PicklockuntiltimeDefaultValue = 0;

  private uint picklockuntiltime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Picklockuntiltime {
    get { if ((_hasBits0 & 4) != 0) { return picklockuntiltime_; } else { return PicklockuntiltimeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      picklockuntiltime_ = value;
    }
  }
  /// <summary>Gets whether the "picklockuntiltime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPicklockuntiltime {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "picklockuntiltime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPicklockuntiltime() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "pickableteams" field.</summary>
  public const int PickableteamsFieldNumber = 8;
  private readonly static uint PickableteamsDefaultValue = 0;

  private uint pickableteams_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Pickableteams {
    get { if ((_hasBits0 & 8) != 0) { return pickableteams_; } else { return PickableteamsDefaultValue; } }
    set {
      _hasBits0 |= 8;
      pickableteams_ = value;
    }
  }
  /// <summary>Gets whether the "pickableteams" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPickableteams {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "pickableteams" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPickableteams() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "points_per_pick" field.</summary>
  public const int PointsPerPickFieldNumber = 9;
  private readonly static uint PointsPerPickDefaultValue = 0;

  private uint pointsPerPick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PointsPerPick {
    get { if ((_hasBits0 & 16) != 0) { return pointsPerPick_; } else { return PointsPerPickDefaultValue; } }
    set {
      _hasBits0 |= 16;
      pointsPerPick_ = value;
    }
  }
  /// <summary>Gets whether the "points_per_pick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPointsPerPick {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "points_per_pick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPointsPerPick() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "picks" field.</summary>
  public const int PicksFieldNumber = 10;
  private static readonly pb::FieldCodec<global::CDataGCCStrike15_v2_TournamentGroup.Types.Picks> _repeated_picks_codec
      = pb::FieldCodec.ForMessage(82, global::CDataGCCStrike15_v2_TournamentGroup.Types.Picks.Parser);
  private readonly pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroup.Types.Picks> picks_ = new pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroup.Types.Picks>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroup.Types.Picks> Picks {
    get { return picks_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDataGCCStrike15_v2_TournamentGroup);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDataGCCStrike15_v2_TournamentGroup other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Groupid != other.Groupid) return false;
    if (Name != other.Name) return false;
    if (Desc != other.Desc) return false;
    if (PicksDeprecated != other.PicksDeprecated) return false;
    if(!teams_.Equals(other.teams_)) return false;
    if(!stageIds_.Equals(other.stageIds_)) return false;
    if (Picklockuntiltime != other.Picklockuntiltime) return false;
    if (Pickableteams != other.Pickableteams) return false;
    if (PointsPerPick != other.PointsPerPick) return false;
    if(!picks_.Equals(other.picks_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGroupid) hash ^= Groupid.GetHashCode();
    if (HasName) hash ^= Name.GetHashCode();
    if (HasDesc) hash ^= Desc.GetHashCode();
    if (HasPicksDeprecated) hash ^= PicksDeprecated.GetHashCode();
    hash ^= teams_.GetHashCode();
    hash ^= stageIds_.GetHashCode();
    if (HasPicklockuntiltime) hash ^= Picklockuntiltime.GetHashCode();
    if (HasPickableteams) hash ^= Pickableteams.GetHashCode();
    if (HasPointsPerPick) hash ^= PointsPerPick.GetHashCode();
    hash ^= picks_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGroupid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Groupid);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasDesc) {
      output.WriteRawTag(26);
      output.WriteString(Desc);
    }
    if (HasPicksDeprecated) {
      output.WriteRawTag(32);
      output.WriteUInt32(PicksDeprecated);
    }
    teams_.WriteTo(output, _repeated_teams_codec);
    stageIds_.WriteTo(output, _repeated_stageIds_codec);
    if (HasPicklockuntiltime) {
      output.WriteRawTag(56);
      output.WriteUInt32(Picklockuntiltime);
    }
    if (HasPickableteams) {
      output.WriteRawTag(64);
      output.WriteUInt32(Pickableteams);
    }
    if (HasPointsPerPick) {
      output.WriteRawTag(72);
      output.WriteUInt32(PointsPerPick);
    }
    picks_.WriteTo(output, _repeated_picks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGroupid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Groupid);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasDesc) {
      output.WriteRawTag(26);
      output.WriteString(Desc);
    }
    if (HasPicksDeprecated) {
      output.WriteRawTag(32);
      output.WriteUInt32(PicksDeprecated);
    }
    teams_.WriteTo(ref output, _repeated_teams_codec);
    stageIds_.WriteTo(ref output, _repeated_stageIds_codec);
    if (HasPicklockuntiltime) {
      output.WriteRawTag(56);
      output.WriteUInt32(Picklockuntiltime);
    }
    if (HasPickableteams) {
      output.WriteRawTag(64);
      output.WriteUInt32(Pickableteams);
    }
    if (HasPointsPerPick) {
      output.WriteRawTag(72);
      output.WriteUInt32(PointsPerPick);
    }
    picks_.WriteTo(ref output, _repeated_picks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGroupid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Groupid);
    }
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasDesc) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
    }
    if (HasPicksDeprecated) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PicksDeprecated);
    }
    size += teams_.CalculateSize(_repeated_teams_codec);
    size += stageIds_.CalculateSize(_repeated_stageIds_codec);
    if (HasPicklockuntiltime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Picklockuntiltime);
    }
    if (HasPickableteams) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pickableteams);
    }
    if (HasPointsPerPick) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PointsPerPick);
    }
    size += picks_.CalculateSize(_repeated_picks_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDataGCCStrike15_v2_TournamentGroup other) {
    if (other == null) {
      return;
    }
    if (other.HasGroupid) {
      Groupid = other.Groupid;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasDesc) {
      Desc = other.Desc;
    }
    if (other.HasPicksDeprecated) {
      PicksDeprecated = other.PicksDeprecated;
    }
    teams_.Add(other.teams_);
    stageIds_.Add(other.stageIds_);
    if (other.HasPicklockuntiltime) {
      Picklockuntiltime = other.Picklockuntiltime;
    }
    if (other.HasPickableteams) {
      Pickableteams = other.Pickableteams;
    }
    if (other.HasPointsPerPick) {
      PointsPerPick = other.PointsPerPick;
    }
    picks_.Add(other.picks_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Groupid = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Desc = input.ReadString();
          break;
        }
        case 32: {
          PicksDeprecated = input.ReadUInt32();
          break;
        }
        case 42: {
          teams_.AddEntriesFrom(input, _repeated_teams_codec);
          break;
        }
        case 50:
        case 48: {
          stageIds_.AddEntriesFrom(input, _repeated_stageIds_codec);
          break;
        }
        case 56: {
          Picklockuntiltime = input.ReadUInt32();
          break;
        }
        case 64: {
          Pickableteams = input.ReadUInt32();
          break;
        }
        case 72: {
          PointsPerPick = input.ReadUInt32();
          break;
        }
        case 82: {
          picks_.AddEntriesFrom(input, _repeated_picks_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Groupid = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Desc = input.ReadString();
          break;
        }
        case 32: {
          PicksDeprecated = input.ReadUInt32();
          break;
        }
        case 42: {
          teams_.AddEntriesFrom(ref input, _repeated_teams_codec);
          break;
        }
        case 50:
        case 48: {
          stageIds_.AddEntriesFrom(ref input, _repeated_stageIds_codec);
          break;
        }
        case 56: {
          Picklockuntiltime = input.ReadUInt32();
          break;
        }
        case 64: {
          Pickableteams = input.ReadUInt32();
          break;
        }
        case 72: {
          PointsPerPick = input.ReadUInt32();
          break;
        }
        case 82: {
          picks_.AddEntriesFrom(ref input, _repeated_picks_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CDataGCCStrike15_v2_TournamentGroup message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Picks : pb::IMessage<Picks>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Picks> _parser = new pb::MessageParser<Picks>(() => new Picks());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Picks> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDataGCCStrike15_v2_TournamentGroup.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Picks() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Picks(Picks other) : this() {
        pickids_ = other.pickids_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Picks Clone() {
        return new Picks(this);
      }

      /// <summary>Field number for the "pickids" field.</summary>
      public const int PickidsFieldNumber = 1;
      private static readonly pb::FieldCodec<int> _repeated_pickids_codec
          = pb::FieldCodec.ForInt32(8);
      private readonly pbc::RepeatedField<int> pickids_ = new pbc::RepeatedField<int>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<int> Pickids {
        get { return pickids_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Picks);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Picks other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if(!pickids_.Equals(other.pickids_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        hash ^= pickids_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        pickids_.WriteTo(output, _repeated_pickids_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        pickids_.WriteTo(ref output, _repeated_pickids_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        size += pickids_.CalculateSize(_repeated_pickids_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Picks other) {
        if (other == null) {
          return;
        }
        pickids_.Add(other.pickids_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10:
            case 8: {
              pickids_.AddEntriesFrom(input, _repeated_pickids_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10:
            case 8: {
              pickids_.AddEntriesFrom(ref input, _repeated_pickids_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CDataGCCStrike15_v2_TournamentSection : pb::IMessage<CDataGCCStrike15_v2_TournamentSection>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDataGCCStrike15_v2_TournamentSection> _parser = new pb::MessageParser<CDataGCCStrike15_v2_TournamentSection>(() => new CDataGCCStrike15_v2_TournamentSection());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDataGCCStrike15_v2_TournamentSection> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[83]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentSection() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentSection(CDataGCCStrike15_v2_TournamentSection other) : this() {
    _hasBits0 = other._hasBits0;
    sectionid_ = other.sectionid_;
    name_ = other.name_;
    desc_ = other.desc_;
    groups_ = other.groups_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentSection Clone() {
    return new CDataGCCStrike15_v2_TournamentSection(this);
  }

  /// <summary>Field number for the "sectionid" field.</summary>
  public const int SectionidFieldNumber = 1;
  private readonly static uint SectionidDefaultValue = 0;

  private uint sectionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Sectionid {
    get { if ((_hasBits0 & 1) != 0) { return sectionid_; } else { return SectionidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sectionid_ = value;
    }
  }
  /// <summary>Gets whether the "sectionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSectionid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "sectionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSectionid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "desc" field.</summary>
  public const int DescFieldNumber = 3;
  private readonly static string DescDefaultValue = "";

  private string desc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Desc {
    get { return desc_ ?? DescDefaultValue; }
    set {
      desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "desc" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDesc {
    get { return desc_ != null; }
  }
  /// <summary>Clears the value of the "desc" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDesc() {
    desc_ = null;
  }

  /// <summary>Field number for the "groups" field.</summary>
  public const int GroupsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CDataGCCStrike15_v2_TournamentGroup> _repeated_groups_codec
      = pb::FieldCodec.ForMessage(34, global::CDataGCCStrike15_v2_TournamentGroup.Parser);
  private readonly pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroup> groups_ = new pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroup>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentGroup> Groups {
    get { return groups_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDataGCCStrike15_v2_TournamentSection);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDataGCCStrike15_v2_TournamentSection other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sectionid != other.Sectionid) return false;
    if (Name != other.Name) return false;
    if (Desc != other.Desc) return false;
    if(!groups_.Equals(other.groups_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSectionid) hash ^= Sectionid.GetHashCode();
    if (HasName) hash ^= Name.GetHashCode();
    if (HasDesc) hash ^= Desc.GetHashCode();
    hash ^= groups_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSectionid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Sectionid);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasDesc) {
      output.WriteRawTag(26);
      output.WriteString(Desc);
    }
    groups_.WriteTo(output, _repeated_groups_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSectionid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Sectionid);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasDesc) {
      output.WriteRawTag(26);
      output.WriteString(Desc);
    }
    groups_.WriteTo(ref output, _repeated_groups_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSectionid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sectionid);
    }
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasDesc) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
    }
    size += groups_.CalculateSize(_repeated_groups_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDataGCCStrike15_v2_TournamentSection other) {
    if (other == null) {
      return;
    }
    if (other.HasSectionid) {
      Sectionid = other.Sectionid;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasDesc) {
      Desc = other.Desc;
    }
    groups_.Add(other.groups_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Sectionid = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Desc = input.ReadString();
          break;
        }
        case 34: {
          groups_.AddEntriesFrom(input, _repeated_groups_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Sectionid = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Desc = input.ReadString();
          break;
        }
        case 34: {
          groups_.AddEntriesFrom(ref input, _repeated_groups_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDataGCCStrike15_v2_TournamentInfo : pb::IMessage<CDataGCCStrike15_v2_TournamentInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDataGCCStrike15_v2_TournamentInfo> _parser = new pb::MessageParser<CDataGCCStrike15_v2_TournamentInfo>(() => new CDataGCCStrike15_v2_TournamentInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDataGCCStrike15_v2_TournamentInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[84]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentInfo(CDataGCCStrike15_v2_TournamentInfo other) : this() {
    sections_ = other.sections_.Clone();
    tournamentEvent_ = other.tournamentEvent_ != null ? other.tournamentEvent_.Clone() : null;
    tournamentTeams_ = other.tournamentTeams_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDataGCCStrike15_v2_TournamentInfo Clone() {
    return new CDataGCCStrike15_v2_TournamentInfo(this);
  }

  /// <summary>Field number for the "sections" field.</summary>
  public const int SectionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CDataGCCStrike15_v2_TournamentSection> _repeated_sections_codec
      = pb::FieldCodec.ForMessage(10, global::CDataGCCStrike15_v2_TournamentSection.Parser);
  private readonly pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentSection> sections_ = new pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentSection>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDataGCCStrike15_v2_TournamentSection> Sections {
    get { return sections_; }
  }

  /// <summary>Field number for the "tournament_event" field.</summary>
  public const int TournamentEventFieldNumber = 2;
  private global::TournamentEvent tournamentEvent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::TournamentEvent TournamentEvent {
    get { return tournamentEvent_; }
    set {
      tournamentEvent_ = value;
    }
  }

  /// <summary>Field number for the "tournament_teams" field.</summary>
  public const int TournamentTeamsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::TournamentTeam> _repeated_tournamentTeams_codec
      = pb::FieldCodec.ForMessage(26, global::TournamentTeam.Parser);
  private readonly pbc::RepeatedField<global::TournamentTeam> tournamentTeams_ = new pbc::RepeatedField<global::TournamentTeam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::TournamentTeam> TournamentTeams {
    get { return tournamentTeams_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDataGCCStrike15_v2_TournamentInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDataGCCStrike15_v2_TournamentInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!sections_.Equals(other.sections_)) return false;
    if (!object.Equals(TournamentEvent, other.TournamentEvent)) return false;
    if(!tournamentTeams_.Equals(other.tournamentTeams_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= sections_.GetHashCode();
    if (tournamentEvent_ != null) hash ^= TournamentEvent.GetHashCode();
    hash ^= tournamentTeams_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    sections_.WriteTo(output, _repeated_sections_codec);
    if (tournamentEvent_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(TournamentEvent);
    }
    tournamentTeams_.WriteTo(output, _repeated_tournamentTeams_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    sections_.WriteTo(ref output, _repeated_sections_codec);
    if (tournamentEvent_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(TournamentEvent);
    }
    tournamentTeams_.WriteTo(ref output, _repeated_tournamentTeams_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += sections_.CalculateSize(_repeated_sections_codec);
    if (tournamentEvent_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TournamentEvent);
    }
    size += tournamentTeams_.CalculateSize(_repeated_tournamentTeams_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDataGCCStrike15_v2_TournamentInfo other) {
    if (other == null) {
      return;
    }
    sections_.Add(other.sections_);
    if (other.tournamentEvent_ != null) {
      if (tournamentEvent_ == null) {
        TournamentEvent = new global::TournamentEvent();
      }
      TournamentEvent.MergeFrom(other.TournamentEvent);
    }
    tournamentTeams_.Add(other.tournamentTeams_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          sections_.AddEntriesFrom(input, _repeated_sections_codec);
          break;
        }
        case 18: {
          if (tournamentEvent_ == null) {
            TournamentEvent = new global::TournamentEvent();
          }
          input.ReadMessage(TournamentEvent);
          break;
        }
        case 26: {
          tournamentTeams_.AddEntriesFrom(input, _repeated_tournamentTeams_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          sections_.AddEntriesFrom(ref input, _repeated_sections_codec);
          break;
        }
        case 18: {
          if (tournamentEvent_ == null) {
            TournamentEvent = new global::TournamentEvent();
          }
          input.ReadMessage(TournamentEvent);
          break;
        }
        case 26: {
          tournamentTeams_.AddEntriesFrom(ref input, _repeated_tournamentTeams_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchList : pb::IMessage<CMsgGCCStrike15_v2_MatchList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchList> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchList>(() => new CMsgGCCStrike15_v2_MatchList());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[85]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchList(CMsgGCCStrike15_v2_MatchList other) : this() {
    _hasBits0 = other._hasBits0;
    msgrequestid_ = other.msgrequestid_;
    accountid_ = other.accountid_;
    servertime_ = other.servertime_;
    matches_ = other.matches_.Clone();
    streams_ = other.streams_.Clone();
    tournamentinfo_ = other.tournamentinfo_ != null ? other.tournamentinfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchList Clone() {
    return new CMsgGCCStrike15_v2_MatchList(this);
  }

  /// <summary>Field number for the "msgrequestid" field.</summary>
  public const int MsgrequestidFieldNumber = 1;
  private readonly static uint MsgrequestidDefaultValue = 0;

  private uint msgrequestid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Msgrequestid {
    get { if ((_hasBits0 & 1) != 0) { return msgrequestid_; } else { return MsgrequestidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      msgrequestid_ = value;
    }
  }
  /// <summary>Gets whether the "msgrequestid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMsgrequestid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "msgrequestid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMsgrequestid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 2;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 2) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "servertime" field.</summary>
  public const int ServertimeFieldNumber = 3;
  private readonly static uint ServertimeDefaultValue = 0;

  private uint servertime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Servertime {
    get { if ((_hasBits0 & 4) != 0) { return servertime_; } else { return ServertimeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      servertime_ = value;
    }
  }
  /// <summary>Gets whether the "servertime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServertime {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "servertime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServertime() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "matches" field.</summary>
  public const int MatchesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CDataGCCStrike15_v2_MatchInfo> _repeated_matches_codec
      = pb::FieldCodec.ForMessage(34, global::CDataGCCStrike15_v2_MatchInfo.Parser);
  private readonly pbc::RepeatedField<global::CDataGCCStrike15_v2_MatchInfo> matches_ = new pbc::RepeatedField<global::CDataGCCStrike15_v2_MatchInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDataGCCStrike15_v2_MatchInfo> Matches {
    get { return matches_; }
  }

  /// <summary>Field number for the "streams" field.</summary>
  public const int StreamsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::TournamentTeam> _repeated_streams_codec
      = pb::FieldCodec.ForMessage(42, global::TournamentTeam.Parser);
  private readonly pbc::RepeatedField<global::TournamentTeam> streams_ = new pbc::RepeatedField<global::TournamentTeam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::TournamentTeam> Streams {
    get { return streams_; }
  }

  /// <summary>Field number for the "tournamentinfo" field.</summary>
  public const int TournamentinfoFieldNumber = 6;
  private global::CDataGCCStrike15_v2_TournamentInfo tournamentinfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CDataGCCStrike15_v2_TournamentInfo Tournamentinfo {
    get { return tournamentinfo_; }
    set {
      tournamentinfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Msgrequestid != other.Msgrequestid) return false;
    if (Accountid != other.Accountid) return false;
    if (Servertime != other.Servertime) return false;
    if(!matches_.Equals(other.matches_)) return false;
    if(!streams_.Equals(other.streams_)) return false;
    if (!object.Equals(Tournamentinfo, other.Tournamentinfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMsgrequestid) hash ^= Msgrequestid.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasServertime) hash ^= Servertime.GetHashCode();
    hash ^= matches_.GetHashCode();
    hash ^= streams_.GetHashCode();
    if (tournamentinfo_ != null) hash ^= Tournamentinfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMsgrequestid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Msgrequestid);
    }
    if (HasAccountid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Accountid);
    }
    if (HasServertime) {
      output.WriteRawTag(24);
      output.WriteUInt32(Servertime);
    }
    matches_.WriteTo(output, _repeated_matches_codec);
    streams_.WriteTo(output, _repeated_streams_codec);
    if (tournamentinfo_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Tournamentinfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMsgrequestid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Msgrequestid);
    }
    if (HasAccountid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Accountid);
    }
    if (HasServertime) {
      output.WriteRawTag(24);
      output.WriteUInt32(Servertime);
    }
    matches_.WriteTo(ref output, _repeated_matches_codec);
    streams_.WriteTo(ref output, _repeated_streams_codec);
    if (tournamentinfo_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Tournamentinfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMsgrequestid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Msgrequestid);
    }
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasServertime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Servertime);
    }
    size += matches_.CalculateSize(_repeated_matches_codec);
    size += streams_.CalculateSize(_repeated_streams_codec);
    if (tournamentinfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tournamentinfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchList other) {
    if (other == null) {
      return;
    }
    if (other.HasMsgrequestid) {
      Msgrequestid = other.Msgrequestid;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasServertime) {
      Servertime = other.Servertime;
    }
    matches_.Add(other.matches_);
    streams_.Add(other.streams_);
    if (other.tournamentinfo_ != null) {
      if (tournamentinfo_ == null) {
        Tournamentinfo = new global::CDataGCCStrike15_v2_TournamentInfo();
      }
      Tournamentinfo.MergeFrom(other.Tournamentinfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Msgrequestid = input.ReadUInt32();
          break;
        }
        case 16: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 24: {
          Servertime = input.ReadUInt32();
          break;
        }
        case 34: {
          matches_.AddEntriesFrom(input, _repeated_matches_codec);
          break;
        }
        case 42: {
          streams_.AddEntriesFrom(input, _repeated_streams_codec);
          break;
        }
        case 50: {
          if (tournamentinfo_ == null) {
            Tournamentinfo = new global::CDataGCCStrike15_v2_TournamentInfo();
          }
          input.ReadMessage(Tournamentinfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Msgrequestid = input.ReadUInt32();
          break;
        }
        case 16: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 24: {
          Servertime = input.ReadUInt32();
          break;
        }
        case 34: {
          matches_.AddEntriesFrom(ref input, _repeated_matches_codec);
          break;
        }
        case 42: {
          streams_.AddEntriesFrom(ref input, _repeated_streams_codec);
          break;
        }
        case 50: {
          if (tournamentinfo_ == null) {
            Tournamentinfo = new global::CDataGCCStrike15_v2_TournamentInfo();
          }
          input.ReadMessage(Tournamentinfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt : pb::IMessage<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt>(() => new CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[86]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt other) : this() {
    _hasBits0 = other._hasBits0;
    eventid_ = other.eventid_;
    matches_ = other.matches_.Clone();
    accountid_ = other.accountid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt Clone() {
    return new CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt(this);
  }

  /// <summary>Field number for the "eventid" field.</summary>
  public const int EventidFieldNumber = 1;
  private readonly static int EventidDefaultValue = 0;

  private int eventid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eventid {
    get { if ((_hasBits0 & 1) != 0) { return eventid_; } else { return EventidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventid_ = value;
    }
  }
  /// <summary>Gets whether the "eventid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eventid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "matches" field.</summary>
  public const int MatchesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CDataGCCStrike15_v2_MatchInfo> _repeated_matches_codec
      = pb::FieldCodec.ForMessage(18, global::CDataGCCStrike15_v2_MatchInfo.Parser);
  private readonly pbc::RepeatedField<global::CDataGCCStrike15_v2_MatchInfo> matches_ = new pbc::RepeatedField<global::CDataGCCStrike15_v2_MatchInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDataGCCStrike15_v2_MatchInfo> Matches {
    get { return matches_; }
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 3;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 2) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eventid != other.Eventid) return false;
    if(!matches_.Equals(other.matches_)) return false;
    if (Accountid != other.Accountid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventid) hash ^= Eventid.GetHashCode();
    hash ^= matches_.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteInt32(Eventid);
    }
    matches_.WriteTo(output, _repeated_matches_codec);
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteInt32(Eventid);
    }
    matches_.WriteTo(ref output, _repeated_matches_codec);
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventid) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eventid);
    }
    size += matches_.CalculateSize(_repeated_matches_codec);
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt other) {
    if (other == null) {
      return;
    }
    if (other.HasEventid) {
      Eventid = other.Eventid;
    }
    matches_.Add(other.matches_);
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eventid = input.ReadInt32();
          break;
        }
        case 18: {
          matches_.AddEntriesFrom(input, _repeated_matches_codec);
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eventid = input.ReadInt32();
          break;
        }
        case 18: {
          matches_.AddEntriesFrom(ref input, _repeated_matches_codec);
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Predictions : pb::IMessage<CMsgGCCStrike15_v2_Predictions>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Predictions> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Predictions>(() => new CMsgGCCStrike15_v2_Predictions());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Predictions> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[87]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Predictions() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Predictions(CMsgGCCStrike15_v2_Predictions other) : this() {
    _hasBits0 = other._hasBits0;
    eventId_ = other.eventId_;
    groupMatchTeamPicks_ = other.groupMatchTeamPicks_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Predictions Clone() {
    return new CMsgGCCStrike15_v2_Predictions(this);
  }

  /// <summary>Field number for the "event_id" field.</summary>
  public const int EventIdFieldNumber = 1;
  private readonly static uint EventIdDefaultValue = 0;

  private uint eventId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EventId {
    get { if ((_hasBits0 & 1) != 0) { return eventId_; } else { return EventIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventId_ = value;
    }
  }
  /// <summary>Gets whether the "event_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "event_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "group_match_team_picks" field.</summary>
  public const int GroupMatchTeamPicksFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_Predictions.Types.GroupMatchTeamPick> _repeated_groupMatchTeamPicks_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgGCCStrike15_v2_Predictions.Types.GroupMatchTeamPick.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_Predictions.Types.GroupMatchTeamPick> groupMatchTeamPicks_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_Predictions.Types.GroupMatchTeamPick>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_Predictions.Types.GroupMatchTeamPick> GroupMatchTeamPicks {
    get { return groupMatchTeamPicks_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Predictions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Predictions other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EventId != other.EventId) return false;
    if(!groupMatchTeamPicks_.Equals(other.groupMatchTeamPicks_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventId) hash ^= EventId.GetHashCode();
    hash ^= groupMatchTeamPicks_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteUInt32(EventId);
    }
    groupMatchTeamPicks_.WriteTo(output, _repeated_groupMatchTeamPicks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteUInt32(EventId);
    }
    groupMatchTeamPicks_.WriteTo(ref output, _repeated_groupMatchTeamPicks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventId);
    }
    size += groupMatchTeamPicks_.CalculateSize(_repeated_groupMatchTeamPicks_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Predictions other) {
    if (other == null) {
      return;
    }
    if (other.HasEventId) {
      EventId = other.EventId;
    }
    groupMatchTeamPicks_.Add(other.groupMatchTeamPicks_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EventId = input.ReadUInt32();
          break;
        }
        case 18: {
          groupMatchTeamPicks_.AddEntriesFrom(input, _repeated_groupMatchTeamPicks_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EventId = input.ReadUInt32();
          break;
        }
        case 18: {
          groupMatchTeamPicks_.AddEntriesFrom(ref input, _repeated_groupMatchTeamPicks_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_Predictions message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class GroupMatchTeamPick : pb::IMessage<GroupMatchTeamPick>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<GroupMatchTeamPick> _parser = new pb::MessageParser<GroupMatchTeamPick>(() => new GroupMatchTeamPick());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<GroupMatchTeamPick> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_Predictions.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GroupMatchTeamPick() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GroupMatchTeamPick(GroupMatchTeamPick other) : this() {
        _hasBits0 = other._hasBits0;
        sectionid_ = other.sectionid_;
        groupid_ = other.groupid_;
        index_ = other.index_;
        teamid_ = other.teamid_;
        itemid_ = other.itemid_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GroupMatchTeamPick Clone() {
        return new GroupMatchTeamPick(this);
      }

      /// <summary>Field number for the "sectionid" field.</summary>
      public const int SectionidFieldNumber = 1;
      private readonly static int SectionidDefaultValue = 0;

      private int sectionid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Sectionid {
        get { if ((_hasBits0 & 1) != 0) { return sectionid_; } else { return SectionidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          sectionid_ = value;
        }
      }
      /// <summary>Gets whether the "sectionid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSectionid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "sectionid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSectionid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "groupid" field.</summary>
      public const int GroupidFieldNumber = 2;
      private readonly static int GroupidDefaultValue = 0;

      private int groupid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Groupid {
        get { if ((_hasBits0 & 2) != 0) { return groupid_; } else { return GroupidDefaultValue; } }
        set {
          _hasBits0 |= 2;
          groupid_ = value;
        }
      }
      /// <summary>Gets whether the "groupid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGroupid {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "groupid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGroupid() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "index" field.</summary>
      public const int IndexFieldNumber = 3;
      private readonly static int IndexDefaultValue = 0;

      private int index_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Index {
        get { if ((_hasBits0 & 4) != 0) { return index_; } else { return IndexDefaultValue; } }
        set {
          _hasBits0 |= 4;
          index_ = value;
        }
      }
      /// <summary>Gets whether the "index" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIndex {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "index" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIndex() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "teamid" field.</summary>
      public const int TeamidFieldNumber = 4;
      private readonly static int TeamidDefaultValue = 0;

      private int teamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Teamid {
        get { if ((_hasBits0 & 8) != 0) { return teamid_; } else { return TeamidDefaultValue; } }
        set {
          _hasBits0 |= 8;
          teamid_ = value;
        }
      }
      /// <summary>Gets whether the "teamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeamid {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "teamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeamid() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "itemid" field.</summary>
      public const int ItemidFieldNumber = 5;
      private readonly static ulong ItemidDefaultValue = 0UL;

      private ulong itemid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Itemid {
        get { if ((_hasBits0 & 16) != 0) { return itemid_; } else { return ItemidDefaultValue; } }
        set {
          _hasBits0 |= 16;
          itemid_ = value;
        }
      }
      /// <summary>Gets whether the "itemid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasItemid {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "itemid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearItemid() {
        _hasBits0 &= ~16;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as GroupMatchTeamPick);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(GroupMatchTeamPick other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Sectionid != other.Sectionid) return false;
        if (Groupid != other.Groupid) return false;
        if (Index != other.Index) return false;
        if (Teamid != other.Teamid) return false;
        if (Itemid != other.Itemid) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSectionid) hash ^= Sectionid.GetHashCode();
        if (HasGroupid) hash ^= Groupid.GetHashCode();
        if (HasIndex) hash ^= Index.GetHashCode();
        if (HasTeamid) hash ^= Teamid.GetHashCode();
        if (HasItemid) hash ^= Itemid.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSectionid) {
          output.WriteRawTag(8);
          output.WriteInt32(Sectionid);
        }
        if (HasGroupid) {
          output.WriteRawTag(16);
          output.WriteInt32(Groupid);
        }
        if (HasIndex) {
          output.WriteRawTag(24);
          output.WriteInt32(Index);
        }
        if (HasTeamid) {
          output.WriteRawTag(32);
          output.WriteInt32(Teamid);
        }
        if (HasItemid) {
          output.WriteRawTag(40);
          output.WriteUInt64(Itemid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSectionid) {
          output.WriteRawTag(8);
          output.WriteInt32(Sectionid);
        }
        if (HasGroupid) {
          output.WriteRawTag(16);
          output.WriteInt32(Groupid);
        }
        if (HasIndex) {
          output.WriteRawTag(24);
          output.WriteInt32(Index);
        }
        if (HasTeamid) {
          output.WriteRawTag(32);
          output.WriteInt32(Teamid);
        }
        if (HasItemid) {
          output.WriteRawTag(40);
          output.WriteUInt64(Itemid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSectionid) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sectionid);
        }
        if (HasGroupid) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Groupid);
        }
        if (HasIndex) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
        }
        if (HasTeamid) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Teamid);
        }
        if (HasItemid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Itemid);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(GroupMatchTeamPick other) {
        if (other == null) {
          return;
        }
        if (other.HasSectionid) {
          Sectionid = other.Sectionid;
        }
        if (other.HasGroupid) {
          Groupid = other.Groupid;
        }
        if (other.HasIndex) {
          Index = other.Index;
        }
        if (other.HasTeamid) {
          Teamid = other.Teamid;
        }
        if (other.HasItemid) {
          Itemid = other.Itemid;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Sectionid = input.ReadInt32();
              break;
            }
            case 16: {
              Groupid = input.ReadInt32();
              break;
            }
            case 24: {
              Index = input.ReadInt32();
              break;
            }
            case 32: {
              Teamid = input.ReadInt32();
              break;
            }
            case 40: {
              Itemid = input.ReadUInt64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Sectionid = input.ReadInt32();
              break;
            }
            case 16: {
              Groupid = input.ReadInt32();
              break;
            }
            case 24: {
              Index = input.ReadInt32();
              break;
            }
            case 32: {
              Teamid = input.ReadInt32();
              break;
            }
            case 40: {
              Itemid = input.ReadUInt64();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_Fantasy : pb::IMessage<CMsgGCCStrike15_v2_Fantasy>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Fantasy> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Fantasy>(() => new CMsgGCCStrike15_v2_Fantasy());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Fantasy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[88]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Fantasy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Fantasy(CMsgGCCStrike15_v2_Fantasy other) : this() {
    _hasBits0 = other._hasBits0;
    eventId_ = other.eventId_;
    teams_ = other.teams_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Fantasy Clone() {
    return new CMsgGCCStrike15_v2_Fantasy(this);
  }

  /// <summary>Field number for the "event_id" field.</summary>
  public const int EventIdFieldNumber = 1;
  private readonly static uint EventIdDefaultValue = 0;

  private uint eventId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EventId {
    get { if ((_hasBits0 & 1) != 0) { return eventId_; } else { return EventIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventId_ = value;
    }
  }
  /// <summary>Gets whether the "event_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "event_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "teams" field.</summary>
  public const int TeamsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_Fantasy.Types.FantasyTeam> _repeated_teams_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgGCCStrike15_v2_Fantasy.Types.FantasyTeam.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_Fantasy.Types.FantasyTeam> teams_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_Fantasy.Types.FantasyTeam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_Fantasy.Types.FantasyTeam> Teams {
    get { return teams_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Fantasy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Fantasy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EventId != other.EventId) return false;
    if(!teams_.Equals(other.teams_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventId) hash ^= EventId.GetHashCode();
    hash ^= teams_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteUInt32(EventId);
    }
    teams_.WriteTo(output, _repeated_teams_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventId) {
      output.WriteRawTag(8);
      output.WriteUInt32(EventId);
    }
    teams_.WriteTo(ref output, _repeated_teams_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventId);
    }
    size += teams_.CalculateSize(_repeated_teams_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Fantasy other) {
    if (other == null) {
      return;
    }
    if (other.HasEventId) {
      EventId = other.EventId;
    }
    teams_.Add(other.teams_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EventId = input.ReadUInt32();
          break;
        }
        case 18: {
          teams_.AddEntriesFrom(input, _repeated_teams_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EventId = input.ReadUInt32();
          break;
        }
        case 18: {
          teams_.AddEntriesFrom(ref input, _repeated_teams_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_Fantasy message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class FantasySlot : pb::IMessage<FantasySlot>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<FantasySlot> _parser = new pb::MessageParser<FantasySlot>(() => new FantasySlot());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<FantasySlot> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_Fantasy.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FantasySlot() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FantasySlot(FantasySlot other) : this() {
        _hasBits0 = other._hasBits0;
        type_ = other.type_;
        pick_ = other.pick_;
        itemid_ = other.itemid_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FantasySlot Clone() {
        return new FantasySlot(this);
      }

      /// <summary>Field number for the "type" field.</summary>
      public const int TypeFieldNumber = 1;
      private readonly static int TypeDefaultValue = 0;

      private int type_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Type {
        get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          type_ = value;
        }
      }
      /// <summary>Gets whether the "type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasType {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearType() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "pick" field.</summary>
      public const int PickFieldNumber = 2;
      private readonly static int PickDefaultValue = 0;

      private int pick_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Pick {
        get { if ((_hasBits0 & 2) != 0) { return pick_; } else { return PickDefaultValue; } }
        set {
          _hasBits0 |= 2;
          pick_ = value;
        }
      }
      /// <summary>Gets whether the "pick" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPick {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "pick" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPick() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "itemid" field.</summary>
      public const int ItemidFieldNumber = 3;
      private readonly static ulong ItemidDefaultValue = 0UL;

      private ulong itemid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Itemid {
        get { if ((_hasBits0 & 4) != 0) { return itemid_; } else { return ItemidDefaultValue; } }
        set {
          _hasBits0 |= 4;
          itemid_ = value;
        }
      }
      /// <summary>Gets whether the "itemid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasItemid {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "itemid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearItemid() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as FantasySlot);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(FantasySlot other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (Pick != other.Pick) return false;
        if (Itemid != other.Itemid) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasType) hash ^= Type.GetHashCode();
        if (HasPick) hash ^= Pick.GetHashCode();
        if (HasItemid) hash ^= Itemid.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasType) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (HasPick) {
          output.WriteRawTag(16);
          output.WriteInt32(Pick);
        }
        if (HasItemid) {
          output.WriteRawTag(24);
          output.WriteUInt64(Itemid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasType) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (HasPick) {
          output.WriteRawTag(16);
          output.WriteInt32(Pick);
        }
        if (HasItemid) {
          output.WriteRawTag(24);
          output.WriteUInt64(Itemid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasType) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
        }
        if (HasPick) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pick);
        }
        if (HasItemid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Itemid);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(FantasySlot other) {
        if (other == null) {
          return;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasPick) {
          Pick = other.Pick;
        }
        if (other.HasItemid) {
          Itemid = other.Itemid;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 16: {
              Pick = input.ReadInt32();
              break;
            }
            case 24: {
              Itemid = input.ReadUInt64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 16: {
              Pick = input.ReadInt32();
              break;
            }
            case 24: {
              Itemid = input.ReadUInt64();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class FantasyTeam : pb::IMessage<FantasyTeam>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<FantasyTeam> _parser = new pb::MessageParser<FantasyTeam>(() => new FantasyTeam());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<FantasyTeam> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_Fantasy.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FantasyTeam() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FantasyTeam(FantasyTeam other) : this() {
        _hasBits0 = other._hasBits0;
        sectionid_ = other.sectionid_;
        slots_ = other.slots_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FantasyTeam Clone() {
        return new FantasyTeam(this);
      }

      /// <summary>Field number for the "sectionid" field.</summary>
      public const int SectionidFieldNumber = 1;
      private readonly static int SectionidDefaultValue = 0;

      private int sectionid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Sectionid {
        get { if ((_hasBits0 & 1) != 0) { return sectionid_; } else { return SectionidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          sectionid_ = value;
        }
      }
      /// <summary>Gets whether the "sectionid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSectionid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "sectionid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSectionid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "slots" field.</summary>
      public const int SlotsFieldNumber = 2;
      private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_Fantasy.Types.FantasySlot> _repeated_slots_codec
          = pb::FieldCodec.ForMessage(18, global::CMsgGCCStrike15_v2_Fantasy.Types.FantasySlot.Parser);
      private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_Fantasy.Types.FantasySlot> slots_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_Fantasy.Types.FantasySlot>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgGCCStrike15_v2_Fantasy.Types.FantasySlot> Slots {
        get { return slots_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as FantasyTeam);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(FantasyTeam other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Sectionid != other.Sectionid) return false;
        if(!slots_.Equals(other.slots_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSectionid) hash ^= Sectionid.GetHashCode();
        hash ^= slots_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSectionid) {
          output.WriteRawTag(8);
          output.WriteInt32(Sectionid);
        }
        slots_.WriteTo(output, _repeated_slots_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSectionid) {
          output.WriteRawTag(8);
          output.WriteInt32(Sectionid);
        }
        slots_.WriteTo(ref output, _repeated_slots_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSectionid) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sectionid);
        }
        size += slots_.CalculateSize(_repeated_slots_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(FantasyTeam other) {
        if (other == null) {
          return;
        }
        if (other.HasSectionid) {
          Sectionid = other.Sectionid;
        }
        slots_.Add(other.slots_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Sectionid = input.ReadInt32();
              break;
            }
            case 18: {
              slots_.AddEntriesFrom(input, _repeated_slots_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Sectionid = input.ReadInt32();
              break;
            }
            case 18: {
              slots_.AddEntriesFrom(ref input, _repeated_slots_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CAttribute_String : pb::IMessage<CAttribute_String>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAttribute_String> _parser = new pb::MessageParser<CAttribute_String>(() => new CAttribute_String());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAttribute_String> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[89]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAttribute_String() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAttribute_String(CAttribute_String other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAttribute_String Clone() {
    return new CAttribute_String(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private readonly static string ValueDefaultValue = "";

  private string value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Value {
    get { return value_ ?? ValueDefaultValue; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValue {
    get { return value_ != null; }
  }
  /// <summary>Clears the value of the "value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValue() {
    value_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAttribute_String);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAttribute_String other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasValue) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasValue) {
      output.WriteRawTag(10);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasValue) {
      output.WriteRawTag(10);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasValue) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAttribute_String other) {
    if (other == null) {
      return;
    }
    if (other.HasValue) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Value = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Value = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgLegacySource1ClientWelcome : pb::IMessage<CMsgLegacySource1ClientWelcome>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgLegacySource1ClientWelcome> _parser = new pb::MessageParser<CMsgLegacySource1ClientWelcome>(() => new CMsgLegacySource1ClientWelcome());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgLegacySource1ClientWelcome> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[90]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgLegacySource1ClientWelcome() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgLegacySource1ClientWelcome(CMsgLegacySource1ClientWelcome other) : this() {
    _hasBits0 = other._hasBits0;
    version_ = other.version_;
    gameData_ = other.gameData_;
    outofdateSubscribedCaches_ = other.outofdateSubscribedCaches_.Clone();
    uptodateSubscribedCaches_ = other.uptodateSubscribedCaches_.Clone();
    location_ = other.location_ != null ? other.location_.Clone() : null;
    gameData2_ = other.gameData2_;
    rtime32GcWelcomeTimestamp_ = other.rtime32GcWelcomeTimestamp_;
    currency_ = other.currency_;
    balance_ = other.balance_;
    balanceUrl_ = other.balanceUrl_;
    txnCountryCode_ = other.txnCountryCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgLegacySource1ClientWelcome Clone() {
    return new CMsgLegacySource1ClientWelcome(this);
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 1;
  private readonly static uint VersionDefaultValue = 0;

  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Version {
    get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      version_ = value;
    }
  }
  /// <summary>Gets whether the "version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "game_data" field.</summary>
  public const int GameDataFieldNumber = 2;
  private readonly static pb::ByteString GameDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString gameData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString GameData {
    get { return gameData_ ?? GameDataDefaultValue; }
    set {
      gameData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameData {
    get { return gameData_ != null; }
  }
  /// <summary>Clears the value of the "game_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameData() {
    gameData_ = null;
  }

  /// <summary>Field number for the "outofdate_subscribed_caches" field.</summary>
  public const int OutofdateSubscribedCachesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::CMsgSOCacheSubscribed> _repeated_outofdateSubscribedCaches_codec
      = pb::FieldCodec.ForMessage(26, global::CMsgSOCacheSubscribed.Parser);
  private readonly pbc::RepeatedField<global::CMsgSOCacheSubscribed> outofdateSubscribedCaches_ = new pbc::RepeatedField<global::CMsgSOCacheSubscribed>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgSOCacheSubscribed> OutofdateSubscribedCaches {
    get { return outofdateSubscribedCaches_; }
  }

  /// <summary>Field number for the "uptodate_subscribed_caches" field.</summary>
  public const int UptodateSubscribedCachesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CMsgSOCacheSubscriptionCheck> _repeated_uptodateSubscribedCaches_codec
      = pb::FieldCodec.ForMessage(34, global::CMsgSOCacheSubscriptionCheck.Parser);
  private readonly pbc::RepeatedField<global::CMsgSOCacheSubscriptionCheck> uptodateSubscribedCaches_ = new pbc::RepeatedField<global::CMsgSOCacheSubscriptionCheck>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgSOCacheSubscriptionCheck> UptodateSubscribedCaches {
    get { return uptodateSubscribedCaches_; }
  }

  /// <summary>Field number for the "location" field.</summary>
  public const int LocationFieldNumber = 5;
  private global::CMsgLegacySource1ClientWelcome.Types.Location location_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgLegacySource1ClientWelcome.Types.Location Location {
    get { return location_; }
    set {
      location_ = value;
    }
  }

  /// <summary>Field number for the "game_data2" field.</summary>
  public const int GameData2FieldNumber = 6;
  private readonly static pb::ByteString GameData2DefaultValue = pb::ByteString.Empty;

  private pb::ByteString gameData2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString GameData2 {
    get { return gameData2_ ?? GameData2DefaultValue; }
    set {
      gameData2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_data2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameData2 {
    get { return gameData2_ != null; }
  }
  /// <summary>Clears the value of the "game_data2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameData2() {
    gameData2_ = null;
  }

  /// <summary>Field number for the "rtime32_gc_welcome_timestamp" field.</summary>
  public const int Rtime32GcWelcomeTimestampFieldNumber = 7;
  private readonly static uint Rtime32GcWelcomeTimestampDefaultValue = 0;

  private uint rtime32GcWelcomeTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32GcWelcomeTimestamp {
    get { if ((_hasBits0 & 2) != 0) { return rtime32GcWelcomeTimestamp_; } else { return Rtime32GcWelcomeTimestampDefaultValue; } }
    set {
      _hasBits0 |= 2;
      rtime32GcWelcomeTimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_gc_welcome_timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32GcWelcomeTimestamp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_gc_welcome_timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32GcWelcomeTimestamp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "currency" field.</summary>
  public const int CurrencyFieldNumber = 8;
  private readonly static uint CurrencyDefaultValue = 0;

  private uint currency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Currency {
    get { if ((_hasBits0 & 4) != 0) { return currency_; } else { return CurrencyDefaultValue; } }
    set {
      _hasBits0 |= 4;
      currency_ = value;
    }
  }
  /// <summary>Gets whether the "currency" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrency {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "currency" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrency() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "balance" field.</summary>
  public const int BalanceFieldNumber = 9;
  private readonly static uint BalanceDefaultValue = 0;

  private uint balance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Balance {
    get { if ((_hasBits0 & 8) != 0) { return balance_; } else { return BalanceDefaultValue; } }
    set {
      _hasBits0 |= 8;
      balance_ = value;
    }
  }
  /// <summary>Gets whether the "balance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBalance {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "balance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBalance() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "balance_url" field.</summary>
  public const int BalanceUrlFieldNumber = 10;
  private readonly static string BalanceUrlDefaultValue = "";

  private string balanceUrl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string BalanceUrl {
    get { return balanceUrl_ ?? BalanceUrlDefaultValue; }
    set {
      balanceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "balance_url" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBalanceUrl {
    get { return balanceUrl_ != null; }
  }
  /// <summary>Clears the value of the "balance_url" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBalanceUrl() {
    balanceUrl_ = null;
  }

  /// <summary>Field number for the "txn_country_code" field.</summary>
  public const int TxnCountryCodeFieldNumber = 11;
  private readonly static string TxnCountryCodeDefaultValue = "";

  private string txnCountryCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TxnCountryCode {
    get { return txnCountryCode_ ?? TxnCountryCodeDefaultValue; }
    set {
      txnCountryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "txn_country_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxnCountryCode {
    get { return txnCountryCode_ != null; }
  }
  /// <summary>Clears the value of the "txn_country_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxnCountryCode() {
    txnCountryCode_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgLegacySource1ClientWelcome);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgLegacySource1ClientWelcome other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Version != other.Version) return false;
    if (GameData != other.GameData) return false;
    if(!outofdateSubscribedCaches_.Equals(other.outofdateSubscribedCaches_)) return false;
    if(!uptodateSubscribedCaches_.Equals(other.uptodateSubscribedCaches_)) return false;
    if (!object.Equals(Location, other.Location)) return false;
    if (GameData2 != other.GameData2) return false;
    if (Rtime32GcWelcomeTimestamp != other.Rtime32GcWelcomeTimestamp) return false;
    if (Currency != other.Currency) return false;
    if (Balance != other.Balance) return false;
    if (BalanceUrl != other.BalanceUrl) return false;
    if (TxnCountryCode != other.TxnCountryCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVersion) hash ^= Version.GetHashCode();
    if (HasGameData) hash ^= GameData.GetHashCode();
    hash ^= outofdateSubscribedCaches_.GetHashCode();
    hash ^= uptodateSubscribedCaches_.GetHashCode();
    if (location_ != null) hash ^= Location.GetHashCode();
    if (HasGameData2) hash ^= GameData2.GetHashCode();
    if (HasRtime32GcWelcomeTimestamp) hash ^= Rtime32GcWelcomeTimestamp.GetHashCode();
    if (HasCurrency) hash ^= Currency.GetHashCode();
    if (HasBalance) hash ^= Balance.GetHashCode();
    if (HasBalanceUrl) hash ^= BalanceUrl.GetHashCode();
    if (HasTxnCountryCode) hash ^= TxnCountryCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasGameData) {
      output.WriteRawTag(18);
      output.WriteBytes(GameData);
    }
    outofdateSubscribedCaches_.WriteTo(output, _repeated_outofdateSubscribedCaches_codec);
    uptodateSubscribedCaches_.WriteTo(output, _repeated_uptodateSubscribedCaches_codec);
    if (location_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Location);
    }
    if (HasGameData2) {
      output.WriteRawTag(50);
      output.WriteBytes(GameData2);
    }
    if (HasRtime32GcWelcomeTimestamp) {
      output.WriteRawTag(56);
      output.WriteUInt32(Rtime32GcWelcomeTimestamp);
    }
    if (HasCurrency) {
      output.WriteRawTag(64);
      output.WriteUInt32(Currency);
    }
    if (HasBalance) {
      output.WriteRawTag(72);
      output.WriteUInt32(Balance);
    }
    if (HasBalanceUrl) {
      output.WriteRawTag(82);
      output.WriteString(BalanceUrl);
    }
    if (HasTxnCountryCode) {
      output.WriteRawTag(90);
      output.WriteString(TxnCountryCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasGameData) {
      output.WriteRawTag(18);
      output.WriteBytes(GameData);
    }
    outofdateSubscribedCaches_.WriteTo(ref output, _repeated_outofdateSubscribedCaches_codec);
    uptodateSubscribedCaches_.WriteTo(ref output, _repeated_uptodateSubscribedCaches_codec);
    if (location_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Location);
    }
    if (HasGameData2) {
      output.WriteRawTag(50);
      output.WriteBytes(GameData2);
    }
    if (HasRtime32GcWelcomeTimestamp) {
      output.WriteRawTag(56);
      output.WriteUInt32(Rtime32GcWelcomeTimestamp);
    }
    if (HasCurrency) {
      output.WriteRawTag(64);
      output.WriteUInt32(Currency);
    }
    if (HasBalance) {
      output.WriteRawTag(72);
      output.WriteUInt32(Balance);
    }
    if (HasBalanceUrl) {
      output.WriteRawTag(82);
      output.WriteString(BalanceUrl);
    }
    if (HasTxnCountryCode) {
      output.WriteRawTag(90);
      output.WriteString(TxnCountryCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    if (HasGameData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(GameData);
    }
    size += outofdateSubscribedCaches_.CalculateSize(_repeated_outofdateSubscribedCaches_codec);
    size += uptodateSubscribedCaches_.CalculateSize(_repeated_uptodateSubscribedCaches_codec);
    if (location_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
    }
    if (HasGameData2) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(GameData2);
    }
    if (HasRtime32GcWelcomeTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32GcWelcomeTimestamp);
    }
    if (HasCurrency) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Currency);
    }
    if (HasBalance) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Balance);
    }
    if (HasBalanceUrl) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BalanceUrl);
    }
    if (HasTxnCountryCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TxnCountryCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgLegacySource1ClientWelcome other) {
    if (other == null) {
      return;
    }
    if (other.HasVersion) {
      Version = other.Version;
    }
    if (other.HasGameData) {
      GameData = other.GameData;
    }
    outofdateSubscribedCaches_.Add(other.outofdateSubscribedCaches_);
    uptodateSubscribedCaches_.Add(other.uptodateSubscribedCaches_);
    if (other.location_ != null) {
      if (location_ == null) {
        Location = new global::CMsgLegacySource1ClientWelcome.Types.Location();
      }
      Location.MergeFrom(other.Location);
    }
    if (other.HasGameData2) {
      GameData2 = other.GameData2;
    }
    if (other.HasRtime32GcWelcomeTimestamp) {
      Rtime32GcWelcomeTimestamp = other.Rtime32GcWelcomeTimestamp;
    }
    if (other.HasCurrency) {
      Currency = other.Currency;
    }
    if (other.HasBalance) {
      Balance = other.Balance;
    }
    if (other.HasBalanceUrl) {
      BalanceUrl = other.BalanceUrl;
    }
    if (other.HasTxnCountryCode) {
      TxnCountryCode = other.TxnCountryCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 18: {
          GameData = input.ReadBytes();
          break;
        }
        case 26: {
          outofdateSubscribedCaches_.AddEntriesFrom(input, _repeated_outofdateSubscribedCaches_codec);
          break;
        }
        case 34: {
          uptodateSubscribedCaches_.AddEntriesFrom(input, _repeated_uptodateSubscribedCaches_codec);
          break;
        }
        case 42: {
          if (location_ == null) {
            Location = new global::CMsgLegacySource1ClientWelcome.Types.Location();
          }
          input.ReadMessage(Location);
          break;
        }
        case 50: {
          GameData2 = input.ReadBytes();
          break;
        }
        case 56: {
          Rtime32GcWelcomeTimestamp = input.ReadUInt32();
          break;
        }
        case 64: {
          Currency = input.ReadUInt32();
          break;
        }
        case 72: {
          Balance = input.ReadUInt32();
          break;
        }
        case 82: {
          BalanceUrl = input.ReadString();
          break;
        }
        case 90: {
          TxnCountryCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 18: {
          GameData = input.ReadBytes();
          break;
        }
        case 26: {
          outofdateSubscribedCaches_.AddEntriesFrom(ref input, _repeated_outofdateSubscribedCaches_codec);
          break;
        }
        case 34: {
          uptodateSubscribedCaches_.AddEntriesFrom(ref input, _repeated_uptodateSubscribedCaches_codec);
          break;
        }
        case 42: {
          if (location_ == null) {
            Location = new global::CMsgLegacySource1ClientWelcome.Types.Location();
          }
          input.ReadMessage(Location);
          break;
        }
        case 50: {
          GameData2 = input.ReadBytes();
          break;
        }
        case 56: {
          Rtime32GcWelcomeTimestamp = input.ReadUInt32();
          break;
        }
        case 64: {
          Currency = input.ReadUInt32();
          break;
        }
        case 72: {
          Balance = input.ReadUInt32();
          break;
        }
        case 82: {
          BalanceUrl = input.ReadString();
          break;
        }
        case 90: {
          TxnCountryCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgLegacySource1ClientWelcome message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Location : pb::IMessage<Location>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Location> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgLegacySource1ClientWelcome.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Location() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Location(Location other) : this() {
        _hasBits0 = other._hasBits0;
        latitude_ = other.latitude_;
        longitude_ = other.longitude_;
        country_ = other.country_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Location Clone() {
        return new Location(this);
      }

      /// <summary>Field number for the "latitude" field.</summary>
      public const int LatitudeFieldNumber = 1;
      private readonly static float LatitudeDefaultValue = 0F;

      private float latitude_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Latitude {
        get { if ((_hasBits0 & 1) != 0) { return latitude_; } else { return LatitudeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          latitude_ = value;
        }
      }
      /// <summary>Gets whether the "latitude" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLatitude {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "latitude" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLatitude() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "longitude" field.</summary>
      public const int LongitudeFieldNumber = 2;
      private readonly static float LongitudeDefaultValue = 0F;

      private float longitude_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Longitude {
        get { if ((_hasBits0 & 2) != 0) { return longitude_; } else { return LongitudeDefaultValue; } }
        set {
          _hasBits0 |= 2;
          longitude_ = value;
        }
      }
      /// <summary>Gets whether the "longitude" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLongitude {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "longitude" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLongitude() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "country" field.</summary>
      public const int CountryFieldNumber = 3;
      private readonly static string CountryDefaultValue = "";

      private string country_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Country {
        get { return country_ ?? CountryDefaultValue; }
        set {
          country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "country" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCountry {
        get { return country_ != null; }
      }
      /// <summary>Clears the value of the "country" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCountry() {
        country_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Location);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Location other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
        if (Country != other.Country) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasLatitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
        if (HasLongitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
        if (HasCountry) hash ^= Country.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasLatitude) {
          output.WriteRawTag(13);
          output.WriteFloat(Latitude);
        }
        if (HasLongitude) {
          output.WriteRawTag(21);
          output.WriteFloat(Longitude);
        }
        if (HasCountry) {
          output.WriteRawTag(26);
          output.WriteString(Country);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasLatitude) {
          output.WriteRawTag(13);
          output.WriteFloat(Latitude);
        }
        if (HasLongitude) {
          output.WriteRawTag(21);
          output.WriteFloat(Longitude);
        }
        if (HasCountry) {
          output.WriteRawTag(26);
          output.WriteString(Country);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasLatitude) {
          size += 1 + 4;
        }
        if (HasLongitude) {
          size += 1 + 4;
        }
        if (HasCountry) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Location other) {
        if (other == null) {
          return;
        }
        if (other.HasLatitude) {
          Latitude = other.Latitude;
        }
        if (other.HasLongitude) {
          Longitude = other.Longitude;
        }
        if (other.HasCountry) {
          Country = other.Country;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 13: {
              Latitude = input.ReadFloat();
              break;
            }
            case 21: {
              Longitude = input.ReadFloat();
              break;
            }
            case 26: {
              Country = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 13: {
              Latitude = input.ReadFloat();
              break;
            }
            case 21: {
              Longitude = input.ReadFloat();
              break;
            }
            case 26: {
              Country = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgCStrike15Welcome : pb::IMessage<CMsgCStrike15Welcome>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgCStrike15Welcome> _parser = new pb::MessageParser<CMsgCStrike15Welcome>(() => new CMsgCStrike15Welcome());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgCStrike15Welcome> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[91]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgCStrike15Welcome() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgCStrike15Welcome(CMsgCStrike15Welcome other) : this() {
    _hasBits0 = other._hasBits0;
    storeItemHash_ = other.storeItemHash_;
    timeplayedconsecutively_ = other.timeplayedconsecutively_;
    timeFirstPlayed_ = other.timeFirstPlayed_;
    lastTimePlayed_ = other.lastTimePlayed_;
    lastIpAddress_ = other.lastIpAddress_;
    gscookieid_ = other.gscookieid_;
    uniqueid_ = other.uniqueid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgCStrike15Welcome Clone() {
    return new CMsgCStrike15Welcome(this);
  }

  /// <summary>Field number for the "store_item_hash" field.</summary>
  public const int StoreItemHashFieldNumber = 5;
  private readonly static uint StoreItemHashDefaultValue = 0;

  private uint storeItemHash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StoreItemHash {
    get { if ((_hasBits0 & 1) != 0) { return storeItemHash_; } else { return StoreItemHashDefaultValue; } }
    set {
      _hasBits0 |= 1;
      storeItemHash_ = value;
    }
  }
  /// <summary>Gets whether the "store_item_hash" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStoreItemHash {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "store_item_hash" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStoreItemHash() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "timeplayedconsecutively" field.</summary>
  public const int TimeplayedconsecutivelyFieldNumber = 6;
  private readonly static uint TimeplayedconsecutivelyDefaultValue = 0;

  private uint timeplayedconsecutively_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Timeplayedconsecutively {
    get { if ((_hasBits0 & 2) != 0) { return timeplayedconsecutively_; } else { return TimeplayedconsecutivelyDefaultValue; } }
    set {
      _hasBits0 |= 2;
      timeplayedconsecutively_ = value;
    }
  }
  /// <summary>Gets whether the "timeplayedconsecutively" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeplayedconsecutively {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "timeplayedconsecutively" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeplayedconsecutively() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "time_first_played" field.</summary>
  public const int TimeFirstPlayedFieldNumber = 10;
  private readonly static uint TimeFirstPlayedDefaultValue = 0;

  private uint timeFirstPlayed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeFirstPlayed {
    get { if ((_hasBits0 & 4) != 0) { return timeFirstPlayed_; } else { return TimeFirstPlayedDefaultValue; } }
    set {
      _hasBits0 |= 4;
      timeFirstPlayed_ = value;
    }
  }
  /// <summary>Gets whether the "time_first_played" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeFirstPlayed {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "time_first_played" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeFirstPlayed() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "last_time_played" field.</summary>
  public const int LastTimePlayedFieldNumber = 12;
  private readonly static uint LastTimePlayedDefaultValue = 0;

  private uint lastTimePlayed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LastTimePlayed {
    get { if ((_hasBits0 & 8) != 0) { return lastTimePlayed_; } else { return LastTimePlayedDefaultValue; } }
    set {
      _hasBits0 |= 8;
      lastTimePlayed_ = value;
    }
  }
  /// <summary>Gets whether the "last_time_played" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastTimePlayed {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "last_time_played" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastTimePlayed() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "last_ip_address" field.</summary>
  public const int LastIpAddressFieldNumber = 13;
  private readonly static uint LastIpAddressDefaultValue = 0;

  private uint lastIpAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LastIpAddress {
    get { if ((_hasBits0 & 16) != 0) { return lastIpAddress_; } else { return LastIpAddressDefaultValue; } }
    set {
      _hasBits0 |= 16;
      lastIpAddress_ = value;
    }
  }
  /// <summary>Gets whether the "last_ip_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastIpAddress {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "last_ip_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastIpAddress() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "gscookieid" field.</summary>
  public const int GscookieidFieldNumber = 18;
  private readonly static ulong GscookieidDefaultValue = 0UL;

  private ulong gscookieid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Gscookieid {
    get { if ((_hasBits0 & 32) != 0) { return gscookieid_; } else { return GscookieidDefaultValue; } }
    set {
      _hasBits0 |= 32;
      gscookieid_ = value;
    }
  }
  /// <summary>Gets whether the "gscookieid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGscookieid {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "gscookieid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGscookieid() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "uniqueid" field.</summary>
  public const int UniqueidFieldNumber = 19;
  private readonly static ulong UniqueidDefaultValue = 0UL;

  private ulong uniqueid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Uniqueid {
    get { if ((_hasBits0 & 64) != 0) { return uniqueid_; } else { return UniqueidDefaultValue; } }
    set {
      _hasBits0 |= 64;
      uniqueid_ = value;
    }
  }
  /// <summary>Gets whether the "uniqueid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUniqueid {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "uniqueid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUniqueid() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgCStrike15Welcome);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgCStrike15Welcome other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StoreItemHash != other.StoreItemHash) return false;
    if (Timeplayedconsecutively != other.Timeplayedconsecutively) return false;
    if (TimeFirstPlayed != other.TimeFirstPlayed) return false;
    if (LastTimePlayed != other.LastTimePlayed) return false;
    if (LastIpAddress != other.LastIpAddress) return false;
    if (Gscookieid != other.Gscookieid) return false;
    if (Uniqueid != other.Uniqueid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasStoreItemHash) hash ^= StoreItemHash.GetHashCode();
    if (HasTimeplayedconsecutively) hash ^= Timeplayedconsecutively.GetHashCode();
    if (HasTimeFirstPlayed) hash ^= TimeFirstPlayed.GetHashCode();
    if (HasLastTimePlayed) hash ^= LastTimePlayed.GetHashCode();
    if (HasLastIpAddress) hash ^= LastIpAddress.GetHashCode();
    if (HasGscookieid) hash ^= Gscookieid.GetHashCode();
    if (HasUniqueid) hash ^= Uniqueid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasStoreItemHash) {
      output.WriteRawTag(40);
      output.WriteUInt32(StoreItemHash);
    }
    if (HasTimeplayedconsecutively) {
      output.WriteRawTag(48);
      output.WriteUInt32(Timeplayedconsecutively);
    }
    if (HasTimeFirstPlayed) {
      output.WriteRawTag(80);
      output.WriteUInt32(TimeFirstPlayed);
    }
    if (HasLastTimePlayed) {
      output.WriteRawTag(96);
      output.WriteUInt32(LastTimePlayed);
    }
    if (HasLastIpAddress) {
      output.WriteRawTag(104);
      output.WriteUInt32(LastIpAddress);
    }
    if (HasGscookieid) {
      output.WriteRawTag(144, 1);
      output.WriteUInt64(Gscookieid);
    }
    if (HasUniqueid) {
      output.WriteRawTag(152, 1);
      output.WriteUInt64(Uniqueid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasStoreItemHash) {
      output.WriteRawTag(40);
      output.WriteUInt32(StoreItemHash);
    }
    if (HasTimeplayedconsecutively) {
      output.WriteRawTag(48);
      output.WriteUInt32(Timeplayedconsecutively);
    }
    if (HasTimeFirstPlayed) {
      output.WriteRawTag(80);
      output.WriteUInt32(TimeFirstPlayed);
    }
    if (HasLastTimePlayed) {
      output.WriteRawTag(96);
      output.WriteUInt32(LastTimePlayed);
    }
    if (HasLastIpAddress) {
      output.WriteRawTag(104);
      output.WriteUInt32(LastIpAddress);
    }
    if (HasGscookieid) {
      output.WriteRawTag(144, 1);
      output.WriteUInt64(Gscookieid);
    }
    if (HasUniqueid) {
      output.WriteRawTag(152, 1);
      output.WriteUInt64(Uniqueid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasStoreItemHash) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StoreItemHash);
    }
    if (HasTimeplayedconsecutively) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timeplayedconsecutively);
    }
    if (HasTimeFirstPlayed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeFirstPlayed);
    }
    if (HasLastTimePlayed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastTimePlayed);
    }
    if (HasLastIpAddress) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastIpAddress);
    }
    if (HasGscookieid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Gscookieid);
    }
    if (HasUniqueid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Uniqueid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgCStrike15Welcome other) {
    if (other == null) {
      return;
    }
    if (other.HasStoreItemHash) {
      StoreItemHash = other.StoreItemHash;
    }
    if (other.HasTimeplayedconsecutively) {
      Timeplayedconsecutively = other.Timeplayedconsecutively;
    }
    if (other.HasTimeFirstPlayed) {
      TimeFirstPlayed = other.TimeFirstPlayed;
    }
    if (other.HasLastTimePlayed) {
      LastTimePlayed = other.LastTimePlayed;
    }
    if (other.HasLastIpAddress) {
      LastIpAddress = other.LastIpAddress;
    }
    if (other.HasGscookieid) {
      Gscookieid = other.Gscookieid;
    }
    if (other.HasUniqueid) {
      Uniqueid = other.Uniqueid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 40: {
          StoreItemHash = input.ReadUInt32();
          break;
        }
        case 48: {
          Timeplayedconsecutively = input.ReadUInt32();
          break;
        }
        case 80: {
          TimeFirstPlayed = input.ReadUInt32();
          break;
        }
        case 96: {
          LastTimePlayed = input.ReadUInt32();
          break;
        }
        case 104: {
          LastIpAddress = input.ReadUInt32();
          break;
        }
        case 144: {
          Gscookieid = input.ReadUInt64();
          break;
        }
        case 152: {
          Uniqueid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 40: {
          StoreItemHash = input.ReadUInt32();
          break;
        }
        case 48: {
          Timeplayedconsecutively = input.ReadUInt32();
          break;
        }
        case 80: {
          TimeFirstPlayed = input.ReadUInt32();
          break;
        }
        case 96: {
          LastTimePlayed = input.ReadUInt32();
          break;
        }
        case 104: {
          LastIpAddress = input.ReadUInt32();
          break;
        }
        case 144: {
          Gscookieid = input.ReadUInt64();
          break;
        }
        case 152: {
          Uniqueid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientVarValueNotificationInfo : pb::IMessage<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo>(() => new CMsgGCCStrike15_v2_ClientVarValueNotificationInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[92]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientVarValueNotificationInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientVarValueNotificationInfo(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo other) : this() {
    _hasBits0 = other._hasBits0;
    valueName_ = other.valueName_;
    valueInt_ = other.valueInt_;
    serverAddr_ = other.serverAddr_;
    serverPort_ = other.serverPort_;
    chokedBlocks_ = other.chokedBlocks_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientVarValueNotificationInfo Clone() {
    return new CMsgGCCStrike15_v2_ClientVarValueNotificationInfo(this);
  }

  /// <summary>Field number for the "value_name" field.</summary>
  public const int ValueNameFieldNumber = 1;
  private readonly static string ValueNameDefaultValue = "";

  private string valueName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ValueName {
    get { return valueName_ ?? ValueNameDefaultValue; }
    set {
      valueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "value_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValueName {
    get { return valueName_ != null; }
  }
  /// <summary>Clears the value of the "value_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValueName() {
    valueName_ = null;
  }

  /// <summary>Field number for the "value_int" field.</summary>
  public const int ValueIntFieldNumber = 2;
  private readonly static int ValueIntDefaultValue = 0;

  private int valueInt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ValueInt {
    get { if ((_hasBits0 & 1) != 0) { return valueInt_; } else { return ValueIntDefaultValue; } }
    set {
      _hasBits0 |= 1;
      valueInt_ = value;
    }
  }
  /// <summary>Gets whether the "value_int" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValueInt {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "value_int" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValueInt() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "server_addr" field.</summary>
  public const int ServerAddrFieldNumber = 3;
  private readonly static uint ServerAddrDefaultValue = 0;

  private uint serverAddr_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerAddr {
    get { if ((_hasBits0 & 2) != 0) { return serverAddr_; } else { return ServerAddrDefaultValue; } }
    set {
      _hasBits0 |= 2;
      serverAddr_ = value;
    }
  }
  /// <summary>Gets whether the "server_addr" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerAddr {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "server_addr" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerAddr() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "server_port" field.</summary>
  public const int ServerPortFieldNumber = 4;
  private readonly static uint ServerPortDefaultValue = 0;

  private uint serverPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerPort {
    get { if ((_hasBits0 & 4) != 0) { return serverPort_; } else { return ServerPortDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serverPort_ = value;
    }
  }
  /// <summary>Gets whether the "server_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerPort {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "server_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerPort() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "choked_blocks" field.</summary>
  public const int ChokedBlocksFieldNumber = 5;
  private static readonly pb::FieldCodec<string> _repeated_chokedBlocks_codec
      = pb::FieldCodec.ForString(42);
  private readonly pbc::RepeatedField<string> chokedBlocks_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> ChokedBlocks {
    get { return chokedBlocks_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientVarValueNotificationInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ValueName != other.ValueName) return false;
    if (ValueInt != other.ValueInt) return false;
    if (ServerAddr != other.ServerAddr) return false;
    if (ServerPort != other.ServerPort) return false;
    if(!chokedBlocks_.Equals(other.chokedBlocks_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasValueName) hash ^= ValueName.GetHashCode();
    if (HasValueInt) hash ^= ValueInt.GetHashCode();
    if (HasServerAddr) hash ^= ServerAddr.GetHashCode();
    if (HasServerPort) hash ^= ServerPort.GetHashCode();
    hash ^= chokedBlocks_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasValueName) {
      output.WriteRawTag(10);
      output.WriteString(ValueName);
    }
    if (HasValueInt) {
      output.WriteRawTag(16);
      output.WriteInt32(ValueInt);
    }
    if (HasServerAddr) {
      output.WriteRawTag(24);
      output.WriteUInt32(ServerAddr);
    }
    if (HasServerPort) {
      output.WriteRawTag(32);
      output.WriteUInt32(ServerPort);
    }
    chokedBlocks_.WriteTo(output, _repeated_chokedBlocks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasValueName) {
      output.WriteRawTag(10);
      output.WriteString(ValueName);
    }
    if (HasValueInt) {
      output.WriteRawTag(16);
      output.WriteInt32(ValueInt);
    }
    if (HasServerAddr) {
      output.WriteRawTag(24);
      output.WriteUInt32(ServerAddr);
    }
    if (HasServerPort) {
      output.WriteRawTag(32);
      output.WriteUInt32(ServerPort);
    }
    chokedBlocks_.WriteTo(ref output, _repeated_chokedBlocks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasValueName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueName);
    }
    if (HasValueInt) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueInt);
    }
    if (HasServerAddr) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerAddr);
    }
    if (HasServerPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerPort);
    }
    size += chokedBlocks_.CalculateSize(_repeated_chokedBlocks_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientVarValueNotificationInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasValueName) {
      ValueName = other.ValueName;
    }
    if (other.HasValueInt) {
      ValueInt = other.ValueInt;
    }
    if (other.HasServerAddr) {
      ServerAddr = other.ServerAddr;
    }
    if (other.HasServerPort) {
      ServerPort = other.ServerPort;
    }
    chokedBlocks_.Add(other.chokedBlocks_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ValueName = input.ReadString();
          break;
        }
        case 16: {
          ValueInt = input.ReadInt32();
          break;
        }
        case 24: {
          ServerAddr = input.ReadUInt32();
          break;
        }
        case 32: {
          ServerPort = input.ReadUInt32();
          break;
        }
        case 42: {
          chokedBlocks_.AddEntriesFrom(input, _repeated_chokedBlocks_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ValueName = input.ReadString();
          break;
        }
        case 16: {
          ValueInt = input.ReadInt32();
          break;
        }
        case 24: {
          ServerAddr = input.ReadUInt32();
          break;
        }
        case 32: {
          ServerPort = input.ReadUInt32();
          break;
        }
        case 42: {
          chokedBlocks_.AddEntriesFrom(ref input, _repeated_chokedBlocks_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ServerVarValueNotificationInfo : pb::IMessage<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo>(() => new CMsgGCCStrike15_v2_ServerVarValueNotificationInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[93]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ServerVarValueNotificationInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ServerVarValueNotificationInfo(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    viewangles_ = other.viewangles_.Clone();
    type_ = other.type_;
    userdata_ = other.userdata_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ServerVarValueNotificationInfo Clone() {
    return new CMsgGCCStrike15_v2_ServerVarValueNotificationInfo(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "viewangles" field.</summary>
  public const int ViewanglesFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_viewangles_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> viewangles_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> Viewangles {
    get { return viewangles_; }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private readonly static uint TypeDefaultValue = 0;

  private uint type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Type {
    get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "userdata" field.</summary>
  public const int UserdataFieldNumber = 4;
  private static readonly pb::FieldCodec<uint> _repeated_userdata_codec
      = pb::FieldCodec.ForUInt32(32);
  private readonly pbc::RepeatedField<uint> userdata_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> Userdata {
    get { return userdata_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ServerVarValueNotificationInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    if(!viewangles_.Equals(other.viewangles_)) return false;
    if (Type != other.Type) return false;
    if(!userdata_.Equals(other.userdata_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    hash ^= viewangles_.GetHashCode();
    if (HasType) hash ^= Type.GetHashCode();
    hash ^= userdata_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    viewangles_.WriteTo(output, _repeated_viewangles_codec);
    if (HasType) {
      output.WriteRawTag(24);
      output.WriteUInt32(Type);
    }
    userdata_.WriteTo(output, _repeated_userdata_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    viewangles_.WriteTo(ref output, _repeated_viewangles_codec);
    if (HasType) {
      output.WriteRawTag(24);
      output.WriteUInt32(Type);
    }
    userdata_.WriteTo(ref output, _repeated_userdata_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    size += viewangles_.CalculateSize(_repeated_viewangles_codec);
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
    }
    size += userdata_.CalculateSize(_repeated_userdata_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ServerVarValueNotificationInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    viewangles_.Add(other.viewangles_);
    if (other.HasType) {
      Type = other.Type;
    }
    userdata_.Add(other.userdata_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          viewangles_.AddEntriesFrom(input, _repeated_viewangles_codec);
          break;
        }
        case 24: {
          Type = input.ReadUInt32();
          break;
        }
        case 34:
        case 32: {
          userdata_.AddEntriesFrom(input, _repeated_userdata_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          viewangles_.AddEntriesFrom(ref input, _repeated_viewangles_codec);
          break;
        }
        case 24: {
          Type = input.ReadUInt32();
          break;
        }
        case 34:
        case 32: {
          userdata_.AddEntriesFrom(ref input, _repeated_userdata_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GiftsLeaderboardRequest : pb::IMessage<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GiftsLeaderboardRequest> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GiftsLeaderboardRequest>(() => new CMsgGCCStrike15_v2_GiftsLeaderboardRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GiftsLeaderboardRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[94]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GiftsLeaderboardRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GiftsLeaderboardRequest(CMsgGCCStrike15_v2_GiftsLeaderboardRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GiftsLeaderboardRequest Clone() {
    return new CMsgGCCStrike15_v2_GiftsLeaderboardRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GiftsLeaderboardRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GiftsLeaderboardRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GiftsLeaderboardRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GiftsLeaderboardResponse : pb::IMessage<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GiftsLeaderboardResponse> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GiftsLeaderboardResponse>(() => new CMsgGCCStrike15_v2_GiftsLeaderboardResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GiftsLeaderboardResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[95]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GiftsLeaderboardResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GiftsLeaderboardResponse(CMsgGCCStrike15_v2_GiftsLeaderboardResponse other) : this() {
    _hasBits0 = other._hasBits0;
    servertime_ = other.servertime_;
    timePeriodSeconds_ = other.timePeriodSeconds_;
    totalGiftsGiven_ = other.totalGiftsGiven_;
    totalGivers_ = other.totalGivers_;
    entries_ = other.entries_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GiftsLeaderboardResponse Clone() {
    return new CMsgGCCStrike15_v2_GiftsLeaderboardResponse(this);
  }

  /// <summary>Field number for the "servertime" field.</summary>
  public const int ServertimeFieldNumber = 1;
  private readonly static uint ServertimeDefaultValue = 0;

  private uint servertime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Servertime {
    get { if ((_hasBits0 & 1) != 0) { return servertime_; } else { return ServertimeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      servertime_ = value;
    }
  }
  /// <summary>Gets whether the "servertime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServertime {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "servertime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServertime() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "time_period_seconds" field.</summary>
  public const int TimePeriodSecondsFieldNumber = 2;
  private readonly static uint TimePeriodSecondsDefaultValue = 0;

  private uint timePeriodSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimePeriodSeconds {
    get { if ((_hasBits0 & 2) != 0) { return timePeriodSeconds_; } else { return TimePeriodSecondsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      timePeriodSeconds_ = value;
    }
  }
  /// <summary>Gets whether the "time_period_seconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimePeriodSeconds {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "time_period_seconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimePeriodSeconds() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "total_gifts_given" field.</summary>
  public const int TotalGiftsGivenFieldNumber = 3;
  private readonly static uint TotalGiftsGivenDefaultValue = 0;

  private uint totalGiftsGiven_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TotalGiftsGiven {
    get { if ((_hasBits0 & 4) != 0) { return totalGiftsGiven_; } else { return TotalGiftsGivenDefaultValue; } }
    set {
      _hasBits0 |= 4;
      totalGiftsGiven_ = value;
    }
  }
  /// <summary>Gets whether the "total_gifts_given" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalGiftsGiven {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "total_gifts_given" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalGiftsGiven() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "total_givers" field.</summary>
  public const int TotalGiversFieldNumber = 4;
  private readonly static uint TotalGiversDefaultValue = 0;

  private uint totalGivers_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TotalGivers {
    get { if ((_hasBits0 & 8) != 0) { return totalGivers_; } else { return TotalGiversDefaultValue; } }
    set {
      _hasBits0 |= 8;
      totalGivers_ = value;
    }
  }
  /// <summary>Gets whether the "total_givers" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalGivers {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "total_givers" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalGivers() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "entries" field.</summary>
  public const int EntriesFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Types.GiftLeaderboardEntry> _repeated_entries_codec
      = pb::FieldCodec.ForMessage(42, global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Types.GiftLeaderboardEntry.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Types.GiftLeaderboardEntry> entries_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Types.GiftLeaderboardEntry>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Types.GiftLeaderboardEntry> Entries {
    get { return entries_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GiftsLeaderboardResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GiftsLeaderboardResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Servertime != other.Servertime) return false;
    if (TimePeriodSeconds != other.TimePeriodSeconds) return false;
    if (TotalGiftsGiven != other.TotalGiftsGiven) return false;
    if (TotalGivers != other.TotalGivers) return false;
    if(!entries_.Equals(other.entries_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasServertime) hash ^= Servertime.GetHashCode();
    if (HasTimePeriodSeconds) hash ^= TimePeriodSeconds.GetHashCode();
    if (HasTotalGiftsGiven) hash ^= TotalGiftsGiven.GetHashCode();
    if (HasTotalGivers) hash ^= TotalGivers.GetHashCode();
    hash ^= entries_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasServertime) {
      output.WriteRawTag(8);
      output.WriteUInt32(Servertime);
    }
    if (HasTimePeriodSeconds) {
      output.WriteRawTag(16);
      output.WriteUInt32(TimePeriodSeconds);
    }
    if (HasTotalGiftsGiven) {
      output.WriteRawTag(24);
      output.WriteUInt32(TotalGiftsGiven);
    }
    if (HasTotalGivers) {
      output.WriteRawTag(32);
      output.WriteUInt32(TotalGivers);
    }
    entries_.WriteTo(output, _repeated_entries_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasServertime) {
      output.WriteRawTag(8);
      output.WriteUInt32(Servertime);
    }
    if (HasTimePeriodSeconds) {
      output.WriteRawTag(16);
      output.WriteUInt32(TimePeriodSeconds);
    }
    if (HasTotalGiftsGiven) {
      output.WriteRawTag(24);
      output.WriteUInt32(TotalGiftsGiven);
    }
    if (HasTotalGivers) {
      output.WriteRawTag(32);
      output.WriteUInt32(TotalGivers);
    }
    entries_.WriteTo(ref output, _repeated_entries_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasServertime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Servertime);
    }
    if (HasTimePeriodSeconds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimePeriodSeconds);
    }
    if (HasTotalGiftsGiven) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalGiftsGiven);
    }
    if (HasTotalGivers) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalGivers);
    }
    size += entries_.CalculateSize(_repeated_entries_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GiftsLeaderboardResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasServertime) {
      Servertime = other.Servertime;
    }
    if (other.HasTimePeriodSeconds) {
      TimePeriodSeconds = other.TimePeriodSeconds;
    }
    if (other.HasTotalGiftsGiven) {
      TotalGiftsGiven = other.TotalGiftsGiven;
    }
    if (other.HasTotalGivers) {
      TotalGivers = other.TotalGivers;
    }
    entries_.Add(other.entries_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Servertime = input.ReadUInt32();
          break;
        }
        case 16: {
          TimePeriodSeconds = input.ReadUInt32();
          break;
        }
        case 24: {
          TotalGiftsGiven = input.ReadUInt32();
          break;
        }
        case 32: {
          TotalGivers = input.ReadUInt32();
          break;
        }
        case 42: {
          entries_.AddEntriesFrom(input, _repeated_entries_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Servertime = input.ReadUInt32();
          break;
        }
        case 16: {
          TimePeriodSeconds = input.ReadUInt32();
          break;
        }
        case 24: {
          TotalGiftsGiven = input.ReadUInt32();
          break;
        }
        case 32: {
          TotalGivers = input.ReadUInt32();
          break;
        }
        case 42: {
          entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_GiftsLeaderboardResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class GiftLeaderboardEntry : pb::IMessage<GiftLeaderboardEntry>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<GiftLeaderboardEntry> _parser = new pb::MessageParser<GiftLeaderboardEntry>(() => new GiftLeaderboardEntry());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<GiftLeaderboardEntry> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_GiftsLeaderboardResponse.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GiftLeaderboardEntry() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GiftLeaderboardEntry(GiftLeaderboardEntry other) : this() {
        _hasBits0 = other._hasBits0;
        accountid_ = other.accountid_;
        gifts_ = other.gifts_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GiftLeaderboardEntry Clone() {
        return new GiftLeaderboardEntry(this);
      }

      /// <summary>Field number for the "accountid" field.</summary>
      public const int AccountidFieldNumber = 1;
      private readonly static uint AccountidDefaultValue = 0;

      private uint accountid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Accountid {
        get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountid_ = value;
        }
      }
      /// <summary>Gets whether the "accountid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "accountid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "gifts" field.</summary>
      public const int GiftsFieldNumber = 2;
      private readonly static uint GiftsDefaultValue = 0;

      private uint gifts_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Gifts {
        get { if ((_hasBits0 & 2) != 0) { return gifts_; } else { return GiftsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          gifts_ = value;
        }
      }
      /// <summary>Gets whether the "gifts" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGifts {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "gifts" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGifts() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as GiftLeaderboardEntry);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(GiftLeaderboardEntry other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Accountid != other.Accountid) return false;
        if (Gifts != other.Gifts) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountid) hash ^= Accountid.GetHashCode();
        if (HasGifts) hash ^= Gifts.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Accountid);
        }
        if (HasGifts) {
          output.WriteRawTag(16);
          output.WriteUInt32(Gifts);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Accountid);
        }
        if (HasGifts) {
          output.WriteRawTag(16);
          output.WriteUInt32(Gifts);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
        }
        if (HasGifts) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gifts);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(GiftLeaderboardEntry other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountid) {
          Accountid = other.Accountid;
        }
        if (other.HasGifts) {
          Gifts = other.Gifts;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Accountid = input.ReadUInt32();
              break;
            }
            case 16: {
              Gifts = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Accountid = input.ReadUInt32();
              break;
            }
            case 16: {
              Gifts = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_ClientSubmitSurveyVote : pb::IMessage<CMsgGCCStrike15_v2_ClientSubmitSurveyVote>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientSubmitSurveyVote> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientSubmitSurveyVote>(() => new CMsgGCCStrike15_v2_ClientSubmitSurveyVote());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientSubmitSurveyVote> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[96]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientSubmitSurveyVote() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientSubmitSurveyVote(CMsgGCCStrike15_v2_ClientSubmitSurveyVote other) : this() {
    _hasBits0 = other._hasBits0;
    surveyId_ = other.surveyId_;
    vote_ = other.vote_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientSubmitSurveyVote Clone() {
    return new CMsgGCCStrike15_v2_ClientSubmitSurveyVote(this);
  }

  /// <summary>Field number for the "survey_id" field.</summary>
  public const int SurveyIdFieldNumber = 1;
  private readonly static uint SurveyIdDefaultValue = 0;

  private uint surveyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SurveyId {
    get { if ((_hasBits0 & 1) != 0) { return surveyId_; } else { return SurveyIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      surveyId_ = value;
    }
  }
  /// <summary>Gets whether the "survey_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSurveyId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "survey_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSurveyId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "vote" field.</summary>
  public const int VoteFieldNumber = 2;
  private readonly static uint VoteDefaultValue = 0;

  private uint vote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Vote {
    get { if ((_hasBits0 & 2) != 0) { return vote_; } else { return VoteDefaultValue; } }
    set {
      _hasBits0 |= 2;
      vote_ = value;
    }
  }
  /// <summary>Gets whether the "vote" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVote {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "vote" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVote() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientSubmitSurveyVote);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientSubmitSurveyVote other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SurveyId != other.SurveyId) return false;
    if (Vote != other.Vote) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSurveyId) hash ^= SurveyId.GetHashCode();
    if (HasVote) hash ^= Vote.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSurveyId) {
      output.WriteRawTag(8);
      output.WriteUInt32(SurveyId);
    }
    if (HasVote) {
      output.WriteRawTag(16);
      output.WriteUInt32(Vote);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSurveyId) {
      output.WriteRawTag(8);
      output.WriteUInt32(SurveyId);
    }
    if (HasVote) {
      output.WriteRawTag(16);
      output.WriteUInt32(Vote);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSurveyId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SurveyId);
    }
    if (HasVote) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Vote);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientSubmitSurveyVote other) {
    if (other == null) {
      return;
    }
    if (other.HasSurveyId) {
      SurveyId = other.SurveyId;
    }
    if (other.HasVote) {
      Vote = other.Vote;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SurveyId = input.ReadUInt32();
          break;
        }
        case 16: {
          Vote = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SurveyId = input.ReadUInt32();
          break;
        }
        case 16: {
          Vote = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Server2GCClientValidate : pb::IMessage<CMsgGCCStrike15_v2_Server2GCClientValidate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Server2GCClientValidate> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Server2GCClientValidate>(() => new CMsgGCCStrike15_v2_Server2GCClientValidate());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Server2GCClientValidate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[97]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Server2GCClientValidate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Server2GCClientValidate(CMsgGCCStrike15_v2_Server2GCClientValidate other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Server2GCClientValidate Clone() {
    return new CMsgGCCStrike15_v2_Server2GCClientValidate(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Server2GCClientValidate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Server2GCClientValidate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Server2GCClientValidate other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GC2ClientTournamentInfo : pb::IMessage<CMsgGCCStrike15_v2_GC2ClientTournamentInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientTournamentInfo> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientTournamentInfo>(() => new CMsgGCCStrike15_v2_GC2ClientTournamentInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientTournamentInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[98]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientTournamentInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientTournamentInfo(CMsgGCCStrike15_v2_GC2ClientTournamentInfo other) : this() {
    _hasBits0 = other._hasBits0;
    eventid_ = other.eventid_;
    stageid_ = other.stageid_;
    gameType_ = other.gameType_;
    teamids_ = other.teamids_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientTournamentInfo Clone() {
    return new CMsgGCCStrike15_v2_GC2ClientTournamentInfo(this);
  }

  /// <summary>Field number for the "eventid" field.</summary>
  public const int EventidFieldNumber = 1;
  private readonly static uint EventidDefaultValue = 0;

  private uint eventid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Eventid {
    get { if ((_hasBits0 & 1) != 0) { return eventid_; } else { return EventidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventid_ = value;
    }
  }
  /// <summary>Gets whether the "eventid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eventid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "stageid" field.</summary>
  public const int StageidFieldNumber = 2;
  private readonly static uint StageidDefaultValue = 0;

  private uint stageid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Stageid {
    get { if ((_hasBits0 & 2) != 0) { return stageid_; } else { return StageidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      stageid_ = value;
    }
  }
  /// <summary>Gets whether the "stageid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStageid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "stageid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStageid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "game_type" field.</summary>
  public const int GameTypeFieldNumber = 3;
  private readonly static uint GameTypeDefaultValue = 0;

  private uint gameType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameType {
    get { if ((_hasBits0 & 4) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      gameType_ = value;
    }
  }
  /// <summary>Gets whether the "game_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameType {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "game_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameType() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "teamids" field.</summary>
  public const int TeamidsFieldNumber = 4;
  private static readonly pb::FieldCodec<uint> _repeated_teamids_codec
      = pb::FieldCodec.ForUInt32(32);
  private readonly pbc::RepeatedField<uint> teamids_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> Teamids {
    get { return teamids_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GC2ClientTournamentInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GC2ClientTournamentInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eventid != other.Eventid) return false;
    if (Stageid != other.Stageid) return false;
    if (GameType != other.GameType) return false;
    if(!teamids_.Equals(other.teamids_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventid) hash ^= Eventid.GetHashCode();
    if (HasStageid) hash ^= Stageid.GetHashCode();
    if (HasGameType) hash ^= GameType.GetHashCode();
    hash ^= teamids_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eventid);
    }
    if (HasStageid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Stageid);
    }
    if (HasGameType) {
      output.WriteRawTag(24);
      output.WriteUInt32(GameType);
    }
    teamids_.WriteTo(output, _repeated_teamids_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eventid);
    }
    if (HasStageid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Stageid);
    }
    if (HasGameType) {
      output.WriteRawTag(24);
      output.WriteUInt32(GameType);
    }
    teamids_.WriteTo(ref output, _repeated_teamids_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eventid);
    }
    if (HasStageid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stageid);
    }
    if (HasGameType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
    }
    size += teamids_.CalculateSize(_repeated_teamids_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GC2ClientTournamentInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasEventid) {
      Eventid = other.Eventid;
    }
    if (other.HasStageid) {
      Stageid = other.Stageid;
    }
    if (other.HasGameType) {
      GameType = other.GameType;
    }
    teamids_.Add(other.teamids_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eventid = input.ReadUInt32();
          break;
        }
        case 16: {
          Stageid = input.ReadUInt32();
          break;
        }
        case 24: {
          GameType = input.ReadUInt32();
          break;
        }
        case 34:
        case 32: {
          teamids_.AddEntriesFrom(input, _repeated_teamids_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eventid = input.ReadUInt32();
          break;
        }
        case 16: {
          Stageid = input.ReadUInt32();
          break;
        }
        case 24: {
          GameType = input.ReadUInt32();
          break;
        }
        case 34:
        case 32: {
          teamids_.AddEntriesFrom(ref input, _repeated_teamids_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOEconCoupon : pb::IMessage<CSOEconCoupon>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOEconCoupon> _parser = new pb::MessageParser<CSOEconCoupon>(() => new CSOEconCoupon());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOEconCoupon> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[99]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOEconCoupon() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOEconCoupon(CSOEconCoupon other) : this() {
    _hasBits0 = other._hasBits0;
    entryid_ = other.entryid_;
    defidx_ = other.defidx_;
    expirationDate_ = other.expirationDate_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOEconCoupon Clone() {
    return new CSOEconCoupon(this);
  }

  /// <summary>Field number for the "entryid" field.</summary>
  public const int EntryidFieldNumber = 1;
  private readonly static uint EntryidDefaultValue = 0;

  private uint entryid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Entryid {
    get { if ((_hasBits0 & 1) != 0) { return entryid_; } else { return EntryidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      entryid_ = value;
    }
  }
  /// <summary>Gets whether the "entryid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntryid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "entryid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntryid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "defidx" field.</summary>
  public const int DefidxFieldNumber = 2;
  private readonly static uint DefidxDefaultValue = 0;

  private uint defidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Defidx {
    get { if ((_hasBits0 & 2) != 0) { return defidx_; } else { return DefidxDefaultValue; } }
    set {
      _hasBits0 |= 2;
      defidx_ = value;
    }
  }
  /// <summary>Gets whether the "defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDefidx {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDefidx() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "expiration_date" field.</summary>
  public const int ExpirationDateFieldNumber = 3;
  private readonly static uint ExpirationDateDefaultValue = 0;

  private uint expirationDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ExpirationDate {
    get { if ((_hasBits0 & 4) != 0) { return expirationDate_; } else { return ExpirationDateDefaultValue; } }
    set {
      _hasBits0 |= 4;
      expirationDate_ = value;
    }
  }
  /// <summary>Gets whether the "expiration_date" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExpirationDate {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "expiration_date" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExpirationDate() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOEconCoupon);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOEconCoupon other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Entryid != other.Entryid) return false;
    if (Defidx != other.Defidx) return false;
    if (ExpirationDate != other.ExpirationDate) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEntryid) hash ^= Entryid.GetHashCode();
    if (HasDefidx) hash ^= Defidx.GetHashCode();
    if (HasExpirationDate) hash ^= ExpirationDate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEntryid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Entryid);
    }
    if (HasDefidx) {
      output.WriteRawTag(16);
      output.WriteUInt32(Defidx);
    }
    if (HasExpirationDate) {
      output.WriteRawTag(29);
      output.WriteFixed32(ExpirationDate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEntryid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Entryid);
    }
    if (HasDefidx) {
      output.WriteRawTag(16);
      output.WriteUInt32(Defidx);
    }
    if (HasExpirationDate) {
      output.WriteRawTag(29);
      output.WriteFixed32(ExpirationDate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEntryid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entryid);
    }
    if (HasDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Defidx);
    }
    if (HasExpirationDate) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOEconCoupon other) {
    if (other == null) {
      return;
    }
    if (other.HasEntryid) {
      Entryid = other.Entryid;
    }
    if (other.HasDefidx) {
      Defidx = other.Defidx;
    }
    if (other.HasExpirationDate) {
      ExpirationDate = other.ExpirationDate;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Entryid = input.ReadUInt32();
          break;
        }
        case 16: {
          Defidx = input.ReadUInt32();
          break;
        }
        case 29: {
          ExpirationDate = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Entryid = input.ReadUInt32();
          break;
        }
        case 16: {
          Defidx = input.ReadUInt32();
          break;
        }
        case 29: {
          ExpirationDate = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOAccountItemPersonalStore : pb::IMessage<CSOAccountItemPersonalStore>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOAccountItemPersonalStore> _parser = new pb::MessageParser<CSOAccountItemPersonalStore>(() => new CSOAccountItemPersonalStore());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOAccountItemPersonalStore> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[100]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountItemPersonalStore() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountItemPersonalStore(CSOAccountItemPersonalStore other) : this() {
    _hasBits0 = other._hasBits0;
    generationTime_ = other.generationTime_;
    redeemableBalance_ = other.redeemableBalance_;
    items_ = other.items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountItemPersonalStore Clone() {
    return new CSOAccountItemPersonalStore(this);
  }

  /// <summary>Field number for the "generation_time" field.</summary>
  public const int GenerationTimeFieldNumber = 1;
  private readonly static uint GenerationTimeDefaultValue = 0;

  private uint generationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GenerationTime {
    get { if ((_hasBits0 & 1) != 0) { return generationTime_; } else { return GenerationTimeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      generationTime_ = value;
    }
  }
  /// <summary>Gets whether the "generation_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGenerationTime {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "generation_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGenerationTime() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "redeemable_balance" field.</summary>
  public const int RedeemableBalanceFieldNumber = 2;
  private readonly static uint RedeemableBalanceDefaultValue = 0;

  private uint redeemableBalance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RedeemableBalance {
    get { if ((_hasBits0 & 2) != 0) { return redeemableBalance_; } else { return RedeemableBalanceDefaultValue; } }
    set {
      _hasBits0 |= 2;
      redeemableBalance_ = value;
    }
  }
  /// <summary>Gets whether the "redeemable_balance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRedeemableBalance {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "redeemable_balance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRedeemableBalance() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 3;
  private static readonly pb::FieldCodec<ulong> _repeated_items_codec
      = pb::FieldCodec.ForUInt64(24);
  private readonly pbc::RepeatedField<ulong> items_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> Items {
    get { return items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOAccountItemPersonalStore);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOAccountItemPersonalStore other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GenerationTime != other.GenerationTime) return false;
    if (RedeemableBalance != other.RedeemableBalance) return false;
    if(!items_.Equals(other.items_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGenerationTime) hash ^= GenerationTime.GetHashCode();
    if (HasRedeemableBalance) hash ^= RedeemableBalance.GetHashCode();
    hash ^= items_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGenerationTime) {
      output.WriteRawTag(8);
      output.WriteUInt32(GenerationTime);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemableBalance);
    }
    items_.WriteTo(output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGenerationTime) {
      output.WriteRawTag(8);
      output.WriteUInt32(GenerationTime);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemableBalance);
    }
    items_.WriteTo(ref output, _repeated_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGenerationTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GenerationTime);
    }
    if (HasRedeemableBalance) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedeemableBalance);
    }
    size += items_.CalculateSize(_repeated_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOAccountItemPersonalStore other) {
    if (other == null) {
      return;
    }
    if (other.HasGenerationTime) {
      GenerationTime = other.GenerationTime;
    }
    if (other.HasRedeemableBalance) {
      RedeemableBalance = other.RedeemableBalance;
    }
    items_.Add(other.items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GenerationTime = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          items_.AddEntriesFrom(input, _repeated_items_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          GenerationTime = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          items_.AddEntriesFrom(ref input, _repeated_items_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOAccountXpShop : pb::IMessage<CSOAccountXpShop>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOAccountXpShop> _parser = new pb::MessageParser<CSOAccountXpShop>(() => new CSOAccountXpShop());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOAccountXpShop> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[101]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountXpShop() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountXpShop(CSOAccountXpShop other) : this() {
    _hasBits0 = other._hasBits0;
    generationTime_ = other.generationTime_;
    redeemableBalance_ = other.redeemableBalance_;
    xpTracks_ = other.xpTracks_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountXpShop Clone() {
    return new CSOAccountXpShop(this);
  }

  /// <summary>Field number for the "generation_time" field.</summary>
  public const int GenerationTimeFieldNumber = 1;
  private readonly static uint GenerationTimeDefaultValue = 0;

  private uint generationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GenerationTime {
    get { if ((_hasBits0 & 1) != 0) { return generationTime_; } else { return GenerationTimeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      generationTime_ = value;
    }
  }
  /// <summary>Gets whether the "generation_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGenerationTime {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "generation_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGenerationTime() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "redeemable_balance" field.</summary>
  public const int RedeemableBalanceFieldNumber = 2;
  private readonly static uint RedeemableBalanceDefaultValue = 0;

  private uint redeemableBalance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RedeemableBalance {
    get { if ((_hasBits0 & 2) != 0) { return redeemableBalance_; } else { return RedeemableBalanceDefaultValue; } }
    set {
      _hasBits0 |= 2;
      redeemableBalance_ = value;
    }
  }
  /// <summary>Gets whether the "redeemable_balance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRedeemableBalance {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "redeemable_balance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRedeemableBalance() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "xp_tracks" field.</summary>
  public const int XpTracksFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_xpTracks_codec
      = pb::FieldCodec.ForUInt32(24);
  private readonly pbc::RepeatedField<uint> xpTracks_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> XpTracks {
    get { return xpTracks_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOAccountXpShop);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOAccountXpShop other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GenerationTime != other.GenerationTime) return false;
    if (RedeemableBalance != other.RedeemableBalance) return false;
    if(!xpTracks_.Equals(other.xpTracks_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGenerationTime) hash ^= GenerationTime.GetHashCode();
    if (HasRedeemableBalance) hash ^= RedeemableBalance.GetHashCode();
    hash ^= xpTracks_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGenerationTime) {
      output.WriteRawTag(8);
      output.WriteUInt32(GenerationTime);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemableBalance);
    }
    xpTracks_.WriteTo(output, _repeated_xpTracks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGenerationTime) {
      output.WriteRawTag(8);
      output.WriteUInt32(GenerationTime);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemableBalance);
    }
    xpTracks_.WriteTo(ref output, _repeated_xpTracks_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGenerationTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GenerationTime);
    }
    if (HasRedeemableBalance) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedeemableBalance);
    }
    size += xpTracks_.CalculateSize(_repeated_xpTracks_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOAccountXpShop other) {
    if (other == null) {
      return;
    }
    if (other.HasGenerationTime) {
      GenerationTime = other.GenerationTime;
    }
    if (other.HasRedeemableBalance) {
      RedeemableBalance = other.RedeemableBalance;
    }
    xpTracks_.Add(other.xpTracks_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GenerationTime = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          xpTracks_.AddEntriesFrom(input, _repeated_xpTracks_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          GenerationTime = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          xpTracks_.AddEntriesFrom(ref input, _repeated_xpTracks_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOAccountXpShopBids : pb::IMessage<CSOAccountXpShopBids>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOAccountXpShopBids> _parser = new pb::MessageParser<CSOAccountXpShopBids>(() => new CSOAccountXpShopBids());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOAccountXpShopBids> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[102]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountXpShopBids() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountXpShopBids(CSOAccountXpShopBids other) : this() {
    _hasBits0 = other._hasBits0;
    campaignId_ = other.campaignId_;
    redeemId_ = other.redeemId_;
    expectedCost_ = other.expectedCost_;
    generationTime_ = other.generationTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountXpShopBids Clone() {
    return new CSOAccountXpShopBids(this);
  }

  /// <summary>Field number for the "campaign_id" field.</summary>
  public const int CampaignIdFieldNumber = 1;
  private readonly static uint CampaignIdDefaultValue = 0;

  private uint campaignId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CampaignId {
    get { if ((_hasBits0 & 1) != 0) { return campaignId_; } else { return CampaignIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      campaignId_ = value;
    }
  }
  /// <summary>Gets whether the "campaign_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCampaignId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "campaign_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCampaignId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "redeem_id" field.</summary>
  public const int RedeemIdFieldNumber = 2;
  private readonly static uint RedeemIdDefaultValue = 0;

  private uint redeemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RedeemId {
    get { if ((_hasBits0 & 2) != 0) { return redeemId_; } else { return RedeemIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      redeemId_ = value;
    }
  }
  /// <summary>Gets whether the "redeem_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRedeemId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "redeem_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRedeemId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "expected_cost" field.</summary>
  public const int ExpectedCostFieldNumber = 3;
  private readonly static uint ExpectedCostDefaultValue = 0;

  private uint expectedCost_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ExpectedCost {
    get { if ((_hasBits0 & 4) != 0) { return expectedCost_; } else { return ExpectedCostDefaultValue; } }
    set {
      _hasBits0 |= 4;
      expectedCost_ = value;
    }
  }
  /// <summary>Gets whether the "expected_cost" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExpectedCost {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "expected_cost" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExpectedCost() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "generation_time" field.</summary>
  public const int GenerationTimeFieldNumber = 4;
  private readonly static uint GenerationTimeDefaultValue = 0;

  private uint generationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GenerationTime {
    get { if ((_hasBits0 & 8) != 0) { return generationTime_; } else { return GenerationTimeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      generationTime_ = value;
    }
  }
  /// <summary>Gets whether the "generation_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGenerationTime {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "generation_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGenerationTime() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOAccountXpShopBids);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOAccountXpShopBids other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CampaignId != other.CampaignId) return false;
    if (RedeemId != other.RedeemId) return false;
    if (ExpectedCost != other.ExpectedCost) return false;
    if (GenerationTime != other.GenerationTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCampaignId) hash ^= CampaignId.GetHashCode();
    if (HasRedeemId) hash ^= RedeemId.GetHashCode();
    if (HasExpectedCost) hash ^= ExpectedCost.GetHashCode();
    if (HasGenerationTime) hash ^= GenerationTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCampaignId) {
      output.WriteRawTag(8);
      output.WriteUInt32(CampaignId);
    }
    if (HasRedeemId) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemId);
    }
    if (HasExpectedCost) {
      output.WriteRawTag(24);
      output.WriteUInt32(ExpectedCost);
    }
    if (HasGenerationTime) {
      output.WriteRawTag(32);
      output.WriteUInt32(GenerationTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCampaignId) {
      output.WriteRawTag(8);
      output.WriteUInt32(CampaignId);
    }
    if (HasRedeemId) {
      output.WriteRawTag(16);
      output.WriteUInt32(RedeemId);
    }
    if (HasExpectedCost) {
      output.WriteRawTag(24);
      output.WriteUInt32(ExpectedCost);
    }
    if (HasGenerationTime) {
      output.WriteRawTag(32);
      output.WriteUInt32(GenerationTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCampaignId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CampaignId);
    }
    if (HasRedeemId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedeemId);
    }
    if (HasExpectedCost) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpectedCost);
    }
    if (HasGenerationTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GenerationTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOAccountXpShopBids other) {
    if (other == null) {
      return;
    }
    if (other.HasCampaignId) {
      CampaignId = other.CampaignId;
    }
    if (other.HasRedeemId) {
      RedeemId = other.RedeemId;
    }
    if (other.HasExpectedCost) {
      ExpectedCost = other.ExpectedCost;
    }
    if (other.HasGenerationTime) {
      GenerationTime = other.GenerationTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CampaignId = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemId = input.ReadUInt32();
          break;
        }
        case 24: {
          ExpectedCost = input.ReadUInt32();
          break;
        }
        case 32: {
          GenerationTime = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CampaignId = input.ReadUInt32();
          break;
        }
        case 16: {
          RedeemId = input.ReadUInt32();
          break;
        }
        case 24: {
          ExpectedCost = input.ReadUInt32();
          break;
        }
        case 32: {
          GenerationTime = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOVolatileItemOffer : pb::IMessage<CSOVolatileItemOffer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOVolatileItemOffer> _parser = new pb::MessageParser<CSOVolatileItemOffer>(() => new CSOVolatileItemOffer());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOVolatileItemOffer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[103]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOVolatileItemOffer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOVolatileItemOffer(CSOVolatileItemOffer other) : this() {
    _hasBits0 = other._hasBits0;
    defidx_ = other.defidx_;
    fauxItemid_ = other.fauxItemid_.Clone();
    generationTime_ = other.generationTime_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOVolatileItemOffer Clone() {
    return new CSOVolatileItemOffer(this);
  }

  /// <summary>Field number for the "defidx" field.</summary>
  public const int DefidxFieldNumber = 1;
  private readonly static uint DefidxDefaultValue = 0;

  private uint defidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Defidx {
    get { if ((_hasBits0 & 1) != 0) { return defidx_; } else { return DefidxDefaultValue; } }
    set {
      _hasBits0 |= 1;
      defidx_ = value;
    }
  }
  /// <summary>Gets whether the "defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDefidx {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDefidx() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "faux_itemid" field.</summary>
  public const int FauxItemidFieldNumber = 2;
  private static readonly pb::FieldCodec<ulong> _repeated_fauxItemid_codec
      = pb::FieldCodec.ForUInt64(16);
  private readonly pbc::RepeatedField<ulong> fauxItemid_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> FauxItemid {
    get { return fauxItemid_; }
  }

  /// <summary>Field number for the "generation_time" field.</summary>
  public const int GenerationTimeFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_generationTime_codec
      = pb::FieldCodec.ForUInt32(24);
  private readonly pbc::RepeatedField<uint> generationTime_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> GenerationTime {
    get { return generationTime_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOVolatileItemOffer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOVolatileItemOffer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Defidx != other.Defidx) return false;
    if(!fauxItemid_.Equals(other.fauxItemid_)) return false;
    if(!generationTime_.Equals(other.generationTime_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDefidx) hash ^= Defidx.GetHashCode();
    hash ^= fauxItemid_.GetHashCode();
    hash ^= generationTime_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDefidx) {
      output.WriteRawTag(8);
      output.WriteUInt32(Defidx);
    }
    fauxItemid_.WriteTo(output, _repeated_fauxItemid_codec);
    generationTime_.WriteTo(output, _repeated_generationTime_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDefidx) {
      output.WriteRawTag(8);
      output.WriteUInt32(Defidx);
    }
    fauxItemid_.WriteTo(ref output, _repeated_fauxItemid_codec);
    generationTime_.WriteTo(ref output, _repeated_generationTime_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Defidx);
    }
    size += fauxItemid_.CalculateSize(_repeated_fauxItemid_codec);
    size += generationTime_.CalculateSize(_repeated_generationTime_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOVolatileItemOffer other) {
    if (other == null) {
      return;
    }
    if (other.HasDefidx) {
      Defidx = other.Defidx;
    }
    fauxItemid_.Add(other.fauxItemid_);
    generationTime_.Add(other.generationTime_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Defidx = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          fauxItemid_.AddEntriesFrom(input, _repeated_fauxItemid_codec);
          break;
        }
        case 26:
        case 24: {
          generationTime_.AddEntriesFrom(input, _repeated_generationTime_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Defidx = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          fauxItemid_.AddEntriesFrom(ref input, _repeated_fauxItemid_codec);
          break;
        }
        case 26:
        case 24: {
          generationTime_.AddEntriesFrom(ref input, _repeated_generationTime_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOVolatileItemClaimedRewards : pb::IMessage<CSOVolatileItemClaimedRewards>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOVolatileItemClaimedRewards> _parser = new pb::MessageParser<CSOVolatileItemClaimedRewards>(() => new CSOVolatileItemClaimedRewards());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOVolatileItemClaimedRewards> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[104]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOVolatileItemClaimedRewards() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOVolatileItemClaimedRewards(CSOVolatileItemClaimedRewards other) : this() {
    _hasBits0 = other._hasBits0;
    defidx_ = other.defidx_;
    reward_ = other.reward_.Clone();
    generationTime_ = other.generationTime_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOVolatileItemClaimedRewards Clone() {
    return new CSOVolatileItemClaimedRewards(this);
  }

  /// <summary>Field number for the "defidx" field.</summary>
  public const int DefidxFieldNumber = 1;
  private readonly static uint DefidxDefaultValue = 0;

  private uint defidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Defidx {
    get { if ((_hasBits0 & 1) != 0) { return defidx_; } else { return DefidxDefaultValue; } }
    set {
      _hasBits0 |= 1;
      defidx_ = value;
    }
  }
  /// <summary>Gets whether the "defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDefidx {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDefidx() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_reward_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> reward_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> Reward {
    get { return reward_; }
  }

  /// <summary>Field number for the "generation_time" field.</summary>
  public const int GenerationTimeFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_generationTime_codec
      = pb::FieldCodec.ForUInt32(24);
  private readonly pbc::RepeatedField<uint> generationTime_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> GenerationTime {
    get { return generationTime_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOVolatileItemClaimedRewards);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOVolatileItemClaimedRewards other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Defidx != other.Defidx) return false;
    if(!reward_.Equals(other.reward_)) return false;
    if(!generationTime_.Equals(other.generationTime_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDefidx) hash ^= Defidx.GetHashCode();
    hash ^= reward_.GetHashCode();
    hash ^= generationTime_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDefidx) {
      output.WriteRawTag(8);
      output.WriteUInt32(Defidx);
    }
    reward_.WriteTo(output, _repeated_reward_codec);
    generationTime_.WriteTo(output, _repeated_generationTime_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDefidx) {
      output.WriteRawTag(8);
      output.WriteUInt32(Defidx);
    }
    reward_.WriteTo(ref output, _repeated_reward_codec);
    generationTime_.WriteTo(ref output, _repeated_generationTime_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Defidx);
    }
    size += reward_.CalculateSize(_repeated_reward_codec);
    size += generationTime_.CalculateSize(_repeated_generationTime_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOVolatileItemClaimedRewards other) {
    if (other == null) {
      return;
    }
    if (other.HasDefidx) {
      Defidx = other.Defidx;
    }
    reward_.Add(other.reward_);
    generationTime_.Add(other.generationTime_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Defidx = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          reward_.AddEntriesFrom(input, _repeated_reward_codec);
          break;
        }
        case 26:
        case 24: {
          generationTime_.AddEntriesFrom(input, _repeated_generationTime_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Defidx = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
          break;
        }
        case 26:
        case 24: {
          generationTime_.AddEntriesFrom(ref input, _repeated_generationTime_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOAccountKeychainRemoveToolCharges : pb::IMessage<CSOAccountKeychainRemoveToolCharges>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOAccountKeychainRemoveToolCharges> _parser = new pb::MessageParser<CSOAccountKeychainRemoveToolCharges>(() => new CSOAccountKeychainRemoveToolCharges());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOAccountKeychainRemoveToolCharges> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[105]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountKeychainRemoveToolCharges() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountKeychainRemoveToolCharges(CSOAccountKeychainRemoveToolCharges other) : this() {
    _hasBits0 = other._hasBits0;
    charges_ = other.charges_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountKeychainRemoveToolCharges Clone() {
    return new CSOAccountKeychainRemoveToolCharges(this);
  }

  /// <summary>Field number for the "charges" field.</summary>
  public const int ChargesFieldNumber = 1;
  private readonly static uint ChargesDefaultValue = 0;

  private uint charges_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Charges {
    get { if ((_hasBits0 & 1) != 0) { return charges_; } else { return ChargesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      charges_ = value;
    }
  }
  /// <summary>Gets whether the "charges" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCharges {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "charges" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCharges() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOAccountKeychainRemoveToolCharges);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOAccountKeychainRemoveToolCharges other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Charges != other.Charges) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCharges) hash ^= Charges.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCharges) {
      output.WriteRawTag(8);
      output.WriteUInt32(Charges);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCharges) {
      output.WriteRawTag(8);
      output.WriteUInt32(Charges);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCharges) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Charges);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOAccountKeychainRemoveToolCharges other) {
    if (other == null) {
      return;
    }
    if (other.HasCharges) {
      Charges = other.Charges;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Charges = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Charges = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOQuestProgress : pb::IMessage<CSOQuestProgress>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOQuestProgress> _parser = new pb::MessageParser<CSOQuestProgress>(() => new CSOQuestProgress());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOQuestProgress> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[106]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOQuestProgress() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOQuestProgress(CSOQuestProgress other) : this() {
    _hasBits0 = other._hasBits0;
    questid_ = other.questid_;
    pointsRemaining_ = other.pointsRemaining_;
    bonusPoints_ = other.bonusPoints_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOQuestProgress Clone() {
    return new CSOQuestProgress(this);
  }

  /// <summary>Field number for the "questid" field.</summary>
  public const int QuestidFieldNumber = 1;
  private readonly static uint QuestidDefaultValue = 0;

  private uint questid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Questid {
    get { if ((_hasBits0 & 1) != 0) { return questid_; } else { return QuestidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      questid_ = value;
    }
  }
  /// <summary>Gets whether the "questid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQuestid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "questid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQuestid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "points_remaining" field.</summary>
  public const int PointsRemainingFieldNumber = 2;
  private readonly static uint PointsRemainingDefaultValue = 0;

  private uint pointsRemaining_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PointsRemaining {
    get { if ((_hasBits0 & 2) != 0) { return pointsRemaining_; } else { return PointsRemainingDefaultValue; } }
    set {
      _hasBits0 |= 2;
      pointsRemaining_ = value;
    }
  }
  /// <summary>Gets whether the "points_remaining" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPointsRemaining {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "points_remaining" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPointsRemaining() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "bonus_points" field.</summary>
  public const int BonusPointsFieldNumber = 3;
  private readonly static uint BonusPointsDefaultValue = 0;

  private uint bonusPoints_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BonusPoints {
    get { if ((_hasBits0 & 4) != 0) { return bonusPoints_; } else { return BonusPointsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      bonusPoints_ = value;
    }
  }
  /// <summary>Gets whether the "bonus_points" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBonusPoints {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "bonus_points" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBonusPoints() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOQuestProgress);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOQuestProgress other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Questid != other.Questid) return false;
    if (PointsRemaining != other.PointsRemaining) return false;
    if (BonusPoints != other.BonusPoints) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasQuestid) hash ^= Questid.GetHashCode();
    if (HasPointsRemaining) hash ^= PointsRemaining.GetHashCode();
    if (HasBonusPoints) hash ^= BonusPoints.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasQuestid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Questid);
    }
    if (HasPointsRemaining) {
      output.WriteRawTag(16);
      output.WriteUInt32(PointsRemaining);
    }
    if (HasBonusPoints) {
      output.WriteRawTag(24);
      output.WriteUInt32(BonusPoints);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasQuestid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Questid);
    }
    if (HasPointsRemaining) {
      output.WriteRawTag(16);
      output.WriteUInt32(PointsRemaining);
    }
    if (HasBonusPoints) {
      output.WriteRawTag(24);
      output.WriteUInt32(BonusPoints);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasQuestid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Questid);
    }
    if (HasPointsRemaining) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PointsRemaining);
    }
    if (HasBonusPoints) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BonusPoints);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOQuestProgress other) {
    if (other == null) {
      return;
    }
    if (other.HasQuestid) {
      Questid = other.Questid;
    }
    if (other.HasPointsRemaining) {
      PointsRemaining = other.PointsRemaining;
    }
    if (other.HasBonusPoints) {
      BonusPoints = other.BonusPoints;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Questid = input.ReadUInt32();
          break;
        }
        case 16: {
          PointsRemaining = input.ReadUInt32();
          break;
        }
        case 24: {
          BonusPoints = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Questid = input.ReadUInt32();
          break;
        }
        case 16: {
          PointsRemaining = input.ReadUInt32();
          break;
        }
        case 24: {
          BonusPoints = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOAccountSeasonalOperation : pb::IMessage<CSOAccountSeasonalOperation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOAccountSeasonalOperation> _parser = new pb::MessageParser<CSOAccountSeasonalOperation>(() => new CSOAccountSeasonalOperation());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOAccountSeasonalOperation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[107]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountSeasonalOperation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountSeasonalOperation(CSOAccountSeasonalOperation other) : this() {
    _hasBits0 = other._hasBits0;
    seasonValue_ = other.seasonValue_;
    tierUnlocked_ = other.tierUnlocked_;
    premiumTiers_ = other.premiumTiers_;
    missionId_ = other.missionId_;
    missionsCompleted_ = other.missionsCompleted_;
    redeemableBalance_ = other.redeemableBalance_;
    seasonPassTime_ = other.seasonPassTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountSeasonalOperation Clone() {
    return new CSOAccountSeasonalOperation(this);
  }

  /// <summary>Field number for the "season_value" field.</summary>
  public const int SeasonValueFieldNumber = 1;
  private readonly static uint SeasonValueDefaultValue = 0;

  private uint seasonValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SeasonValue {
    get { if ((_hasBits0 & 1) != 0) { return seasonValue_; } else { return SeasonValueDefaultValue; } }
    set {
      _hasBits0 |= 1;
      seasonValue_ = value;
    }
  }
  /// <summary>Gets whether the "season_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeasonValue {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "season_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeasonValue() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "tier_unlocked" field.</summary>
  public const int TierUnlockedFieldNumber = 2;
  private readonly static uint TierUnlockedDefaultValue = 0;

  private uint tierUnlocked_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TierUnlocked {
    get { if ((_hasBits0 & 2) != 0) { return tierUnlocked_; } else { return TierUnlockedDefaultValue; } }
    set {
      _hasBits0 |= 2;
      tierUnlocked_ = value;
    }
  }
  /// <summary>Gets whether the "tier_unlocked" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTierUnlocked {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "tier_unlocked" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTierUnlocked() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "premium_tiers" field.</summary>
  public const int PremiumTiersFieldNumber = 3;
  private readonly static uint PremiumTiersDefaultValue = 0;

  private uint premiumTiers_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PremiumTiers {
    get { if ((_hasBits0 & 4) != 0) { return premiumTiers_; } else { return PremiumTiersDefaultValue; } }
    set {
      _hasBits0 |= 4;
      premiumTiers_ = value;
    }
  }
  /// <summary>Gets whether the "premium_tiers" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPremiumTiers {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "premium_tiers" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPremiumTiers() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "mission_id" field.</summary>
  public const int MissionIdFieldNumber = 4;
  private readonly static uint MissionIdDefaultValue = 0;

  private uint missionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MissionId {
    get { if ((_hasBits0 & 8) != 0) { return missionId_; } else { return MissionIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      missionId_ = value;
    }
  }
  /// <summary>Gets whether the "mission_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMissionId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "mission_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMissionId() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "missions_completed" field.</summary>
  public const int MissionsCompletedFieldNumber = 5;
  private readonly static uint MissionsCompletedDefaultValue = 0;

  private uint missionsCompleted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MissionsCompleted {
    get { if ((_hasBits0 & 16) != 0) { return missionsCompleted_; } else { return MissionsCompletedDefaultValue; } }
    set {
      _hasBits0 |= 16;
      missionsCompleted_ = value;
    }
  }
  /// <summary>Gets whether the "missions_completed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMissionsCompleted {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "missions_completed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMissionsCompleted() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "redeemable_balance" field.</summary>
  public const int RedeemableBalanceFieldNumber = 6;
  private readonly static uint RedeemableBalanceDefaultValue = 0;

  private uint redeemableBalance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RedeemableBalance {
    get { if ((_hasBits0 & 32) != 0) { return redeemableBalance_; } else { return RedeemableBalanceDefaultValue; } }
    set {
      _hasBits0 |= 32;
      redeemableBalance_ = value;
    }
  }
  /// <summary>Gets whether the "redeemable_balance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRedeemableBalance {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "redeemable_balance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRedeemableBalance() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "season_pass_time" field.</summary>
  public const int SeasonPassTimeFieldNumber = 7;
  private readonly static uint SeasonPassTimeDefaultValue = 0;

  private uint seasonPassTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SeasonPassTime {
    get { if ((_hasBits0 & 64) != 0) { return seasonPassTime_; } else { return SeasonPassTimeDefaultValue; } }
    set {
      _hasBits0 |= 64;
      seasonPassTime_ = value;
    }
  }
  /// <summary>Gets whether the "season_pass_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeasonPassTime {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "season_pass_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeasonPassTime() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOAccountSeasonalOperation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOAccountSeasonalOperation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SeasonValue != other.SeasonValue) return false;
    if (TierUnlocked != other.TierUnlocked) return false;
    if (PremiumTiers != other.PremiumTiers) return false;
    if (MissionId != other.MissionId) return false;
    if (MissionsCompleted != other.MissionsCompleted) return false;
    if (RedeemableBalance != other.RedeemableBalance) return false;
    if (SeasonPassTime != other.SeasonPassTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSeasonValue) hash ^= SeasonValue.GetHashCode();
    if (HasTierUnlocked) hash ^= TierUnlocked.GetHashCode();
    if (HasPremiumTiers) hash ^= PremiumTiers.GetHashCode();
    if (HasMissionId) hash ^= MissionId.GetHashCode();
    if (HasMissionsCompleted) hash ^= MissionsCompleted.GetHashCode();
    if (HasRedeemableBalance) hash ^= RedeemableBalance.GetHashCode();
    if (HasSeasonPassTime) hash ^= SeasonPassTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSeasonValue) {
      output.WriteRawTag(8);
      output.WriteUInt32(SeasonValue);
    }
    if (HasTierUnlocked) {
      output.WriteRawTag(16);
      output.WriteUInt32(TierUnlocked);
    }
    if (HasPremiumTiers) {
      output.WriteRawTag(24);
      output.WriteUInt32(PremiumTiers);
    }
    if (HasMissionId) {
      output.WriteRawTag(32);
      output.WriteUInt32(MissionId);
    }
    if (HasMissionsCompleted) {
      output.WriteRawTag(40);
      output.WriteUInt32(MissionsCompleted);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(48);
      output.WriteUInt32(RedeemableBalance);
    }
    if (HasSeasonPassTime) {
      output.WriteRawTag(56);
      output.WriteUInt32(SeasonPassTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSeasonValue) {
      output.WriteRawTag(8);
      output.WriteUInt32(SeasonValue);
    }
    if (HasTierUnlocked) {
      output.WriteRawTag(16);
      output.WriteUInt32(TierUnlocked);
    }
    if (HasPremiumTiers) {
      output.WriteRawTag(24);
      output.WriteUInt32(PremiumTiers);
    }
    if (HasMissionId) {
      output.WriteRawTag(32);
      output.WriteUInt32(MissionId);
    }
    if (HasMissionsCompleted) {
      output.WriteRawTag(40);
      output.WriteUInt32(MissionsCompleted);
    }
    if (HasRedeemableBalance) {
      output.WriteRawTag(48);
      output.WriteUInt32(RedeemableBalance);
    }
    if (HasSeasonPassTime) {
      output.WriteRawTag(56);
      output.WriteUInt32(SeasonPassTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSeasonValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SeasonValue);
    }
    if (HasTierUnlocked) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TierUnlocked);
    }
    if (HasPremiumTiers) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PremiumTiers);
    }
    if (HasMissionId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MissionId);
    }
    if (HasMissionsCompleted) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MissionsCompleted);
    }
    if (HasRedeemableBalance) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RedeemableBalance);
    }
    if (HasSeasonPassTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SeasonPassTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOAccountSeasonalOperation other) {
    if (other == null) {
      return;
    }
    if (other.HasSeasonValue) {
      SeasonValue = other.SeasonValue;
    }
    if (other.HasTierUnlocked) {
      TierUnlocked = other.TierUnlocked;
    }
    if (other.HasPremiumTiers) {
      PremiumTiers = other.PremiumTiers;
    }
    if (other.HasMissionId) {
      MissionId = other.MissionId;
    }
    if (other.HasMissionsCompleted) {
      MissionsCompleted = other.MissionsCompleted;
    }
    if (other.HasRedeemableBalance) {
      RedeemableBalance = other.RedeemableBalance;
    }
    if (other.HasSeasonPassTime) {
      SeasonPassTime = other.SeasonPassTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SeasonValue = input.ReadUInt32();
          break;
        }
        case 16: {
          TierUnlocked = input.ReadUInt32();
          break;
        }
        case 24: {
          PremiumTiers = input.ReadUInt32();
          break;
        }
        case 32: {
          MissionId = input.ReadUInt32();
          break;
        }
        case 40: {
          MissionsCompleted = input.ReadUInt32();
          break;
        }
        case 48: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 56: {
          SeasonPassTime = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SeasonValue = input.ReadUInt32();
          break;
        }
        case 16: {
          TierUnlocked = input.ReadUInt32();
          break;
        }
        case 24: {
          PremiumTiers = input.ReadUInt32();
          break;
        }
        case 32: {
          MissionId = input.ReadUInt32();
          break;
        }
        case 40: {
          MissionsCompleted = input.ReadUInt32();
          break;
        }
        case 48: {
          RedeemableBalance = input.ReadUInt32();
          break;
        }
        case 56: {
          SeasonPassTime = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOAccountRecurringSubscription : pb::IMessage<CSOAccountRecurringSubscription>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOAccountRecurringSubscription> _parser = new pb::MessageParser<CSOAccountRecurringSubscription>(() => new CSOAccountRecurringSubscription());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOAccountRecurringSubscription> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[108]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountRecurringSubscription() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountRecurringSubscription(CSOAccountRecurringSubscription other) : this() {
    _hasBits0 = other._hasBits0;
    timeNextCycle_ = other.timeNextCycle_;
    timeInitiated_ = other.timeInitiated_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountRecurringSubscription Clone() {
    return new CSOAccountRecurringSubscription(this);
  }

  /// <summary>Field number for the "time_next_cycle" field.</summary>
  public const int TimeNextCycleFieldNumber = 1;
  private readonly static uint TimeNextCycleDefaultValue = 0;

  private uint timeNextCycle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeNextCycle {
    get { if ((_hasBits0 & 1) != 0) { return timeNextCycle_; } else { return TimeNextCycleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      timeNextCycle_ = value;
    }
  }
  /// <summary>Gets whether the "time_next_cycle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeNextCycle {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "time_next_cycle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeNextCycle() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "time_initiated" field.</summary>
  public const int TimeInitiatedFieldNumber = 2;
  private readonly static uint TimeInitiatedDefaultValue = 0;

  private uint timeInitiated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeInitiated {
    get { if ((_hasBits0 & 2) != 0) { return timeInitiated_; } else { return TimeInitiatedDefaultValue; } }
    set {
      _hasBits0 |= 2;
      timeInitiated_ = value;
    }
  }
  /// <summary>Gets whether the "time_initiated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeInitiated {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "time_initiated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeInitiated() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOAccountRecurringSubscription);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOAccountRecurringSubscription other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TimeNextCycle != other.TimeNextCycle) return false;
    if (TimeInitiated != other.TimeInitiated) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTimeNextCycle) hash ^= TimeNextCycle.GetHashCode();
    if (HasTimeInitiated) hash ^= TimeInitiated.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTimeNextCycle) {
      output.WriteRawTag(8);
      output.WriteUInt32(TimeNextCycle);
    }
    if (HasTimeInitiated) {
      output.WriteRawTag(16);
      output.WriteUInt32(TimeInitiated);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTimeNextCycle) {
      output.WriteRawTag(8);
      output.WriteUInt32(TimeNextCycle);
    }
    if (HasTimeInitiated) {
      output.WriteRawTag(16);
      output.WriteUInt32(TimeInitiated);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTimeNextCycle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeNextCycle);
    }
    if (HasTimeInitiated) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeInitiated);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOAccountRecurringSubscription other) {
    if (other == null) {
      return;
    }
    if (other.HasTimeNextCycle) {
      TimeNextCycle = other.TimeNextCycle;
    }
    if (other.HasTimeInitiated) {
      TimeInitiated = other.TimeInitiated;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TimeNextCycle = input.ReadUInt32();
          break;
        }
        case 16: {
          TimeInitiated = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TimeNextCycle = input.ReadUInt32();
          break;
        }
        case 16: {
          TimeInitiated = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOGameAccountSteamChina : pb::IMessage<CSOGameAccountSteamChina>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOGameAccountSteamChina> _parser = new pb::MessageParser<CSOGameAccountSteamChina>(() => new CSOGameAccountSteamChina());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOGameAccountSteamChina> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[109]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOGameAccountSteamChina() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOGameAccountSteamChina(CSOGameAccountSteamChina other) : this() {
    _hasBits0 = other._hasBits0;
    timeLastUpdate_ = other.timeLastUpdate_;
    timeCommsBan_ = other.timeCommsBan_;
    timePlayBan_ = other.timePlayBan_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOGameAccountSteamChina Clone() {
    return new CSOGameAccountSteamChina(this);
  }

  /// <summary>Field number for the "time_last_update" field.</summary>
  public const int TimeLastUpdateFieldNumber = 1;
  private readonly static uint TimeLastUpdateDefaultValue = 0;

  private uint timeLastUpdate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeLastUpdate {
    get { if ((_hasBits0 & 1) != 0) { return timeLastUpdate_; } else { return TimeLastUpdateDefaultValue; } }
    set {
      _hasBits0 |= 1;
      timeLastUpdate_ = value;
    }
  }
  /// <summary>Gets whether the "time_last_update" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeLastUpdate {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "time_last_update" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeLastUpdate() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "time_comms_ban" field.</summary>
  public const int TimeCommsBanFieldNumber = 2;
  private readonly static uint TimeCommsBanDefaultValue = 0;

  private uint timeCommsBan_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeCommsBan {
    get { if ((_hasBits0 & 2) != 0) { return timeCommsBan_; } else { return TimeCommsBanDefaultValue; } }
    set {
      _hasBits0 |= 2;
      timeCommsBan_ = value;
    }
  }
  /// <summary>Gets whether the "time_comms_ban" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeCommsBan {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "time_comms_ban" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeCommsBan() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "time_play_ban" field.</summary>
  public const int TimePlayBanFieldNumber = 3;
  private readonly static uint TimePlayBanDefaultValue = 0;

  private uint timePlayBan_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimePlayBan {
    get { if ((_hasBits0 & 4) != 0) { return timePlayBan_; } else { return TimePlayBanDefaultValue; } }
    set {
      _hasBits0 |= 4;
      timePlayBan_ = value;
    }
  }
  /// <summary>Gets whether the "time_play_ban" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimePlayBan {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "time_play_ban" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimePlayBan() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOGameAccountSteamChina);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOGameAccountSteamChina other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TimeLastUpdate != other.TimeLastUpdate) return false;
    if (TimeCommsBan != other.TimeCommsBan) return false;
    if (TimePlayBan != other.TimePlayBan) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTimeLastUpdate) hash ^= TimeLastUpdate.GetHashCode();
    if (HasTimeCommsBan) hash ^= TimeCommsBan.GetHashCode();
    if (HasTimePlayBan) hash ^= TimePlayBan.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTimeLastUpdate) {
      output.WriteRawTag(8);
      output.WriteUInt32(TimeLastUpdate);
    }
    if (HasTimeCommsBan) {
      output.WriteRawTag(16);
      output.WriteUInt32(TimeCommsBan);
    }
    if (HasTimePlayBan) {
      output.WriteRawTag(24);
      output.WriteUInt32(TimePlayBan);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTimeLastUpdate) {
      output.WriteRawTag(8);
      output.WriteUInt32(TimeLastUpdate);
    }
    if (HasTimeCommsBan) {
      output.WriteRawTag(16);
      output.WriteUInt32(TimeCommsBan);
    }
    if (HasTimePlayBan) {
      output.WriteRawTag(24);
      output.WriteUInt32(TimePlayBan);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTimeLastUpdate) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeLastUpdate);
    }
    if (HasTimeCommsBan) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeCommsBan);
    }
    if (HasTimePlayBan) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimePlayBan);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOGameAccountSteamChina other) {
    if (other == null) {
      return;
    }
    if (other.HasTimeLastUpdate) {
      TimeLastUpdate = other.TimeLastUpdate;
    }
    if (other.HasTimeCommsBan) {
      TimeCommsBan = other.TimeCommsBan;
    }
    if (other.HasTimePlayBan) {
      TimePlayBan = other.TimePlayBan;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TimeLastUpdate = input.ReadUInt32();
          break;
        }
        case 16: {
          TimeCommsBan = input.ReadUInt32();
          break;
        }
        case 24: {
          TimePlayBan = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TimeLastUpdate = input.ReadUInt32();
          break;
        }
        case 16: {
          TimeCommsBan = input.ReadUInt32();
          break;
        }
        case 24: {
          TimePlayBan = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOPersonaDataPublic : pb::IMessage<CSOPersonaDataPublic>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOPersonaDataPublic> _parser = new pb::MessageParser<CSOPersonaDataPublic>(() => new CSOPersonaDataPublic());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOPersonaDataPublic> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[110]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOPersonaDataPublic() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOPersonaDataPublic(CSOPersonaDataPublic other) : this() {
    _hasBits0 = other._hasBits0;
    playerLevel_ = other.playerLevel_;
    commendation_ = other.commendation_ != null ? other.commendation_.Clone() : null;
    elevatedState_ = other.elevatedState_;
    xpTrailTimestampRefresh_ = other.xpTrailTimestampRefresh_;
    xpTrailLevel_ = other.xpTrailLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOPersonaDataPublic Clone() {
    return new CSOPersonaDataPublic(this);
  }

  /// <summary>Field number for the "player_level" field.</summary>
  public const int PlayerLevelFieldNumber = 1;
  private readonly static int PlayerLevelDefaultValue = 0;

  private int playerLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PlayerLevel {
    get { if ((_hasBits0 & 1) != 0) { return playerLevel_; } else { return PlayerLevelDefaultValue; } }
    set {
      _hasBits0 |= 1;
      playerLevel_ = value;
    }
  }
  /// <summary>Gets whether the "player_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerLevel {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "player_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerLevel() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "commendation" field.</summary>
  public const int CommendationFieldNumber = 2;
  private global::PlayerCommendationInfo commendation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerCommendationInfo Commendation {
    get { return commendation_; }
    set {
      commendation_ = value;
    }
  }

  /// <summary>Field number for the "elevated_state" field.</summary>
  public const int ElevatedStateFieldNumber = 3;
  private readonly static bool ElevatedStateDefaultValue = false;

  private bool elevatedState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ElevatedState {
    get { if ((_hasBits0 & 2) != 0) { return elevatedState_; } else { return ElevatedStateDefaultValue; } }
    set {
      _hasBits0 |= 2;
      elevatedState_ = value;
    }
  }
  /// <summary>Gets whether the "elevated_state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasElevatedState {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "elevated_state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearElevatedState() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "xp_trail_timestamp_refresh" field.</summary>
  public const int XpTrailTimestampRefreshFieldNumber = 4;
  private readonly static uint XpTrailTimestampRefreshDefaultValue = 0;

  private uint xpTrailTimestampRefresh_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint XpTrailTimestampRefresh {
    get { if ((_hasBits0 & 4) != 0) { return xpTrailTimestampRefresh_; } else { return XpTrailTimestampRefreshDefaultValue; } }
    set {
      _hasBits0 |= 4;
      xpTrailTimestampRefresh_ = value;
    }
  }
  /// <summary>Gets whether the "xp_trail_timestamp_refresh" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXpTrailTimestampRefresh {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "xp_trail_timestamp_refresh" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXpTrailTimestampRefresh() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "xp_trail_level" field.</summary>
  public const int XpTrailLevelFieldNumber = 5;
  private readonly static uint XpTrailLevelDefaultValue = 0;

  private uint xpTrailLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint XpTrailLevel {
    get { if ((_hasBits0 & 8) != 0) { return xpTrailLevel_; } else { return XpTrailLevelDefaultValue; } }
    set {
      _hasBits0 |= 8;
      xpTrailLevel_ = value;
    }
  }
  /// <summary>Gets whether the "xp_trail_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXpTrailLevel {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "xp_trail_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXpTrailLevel() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOPersonaDataPublic);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOPersonaDataPublic other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayerLevel != other.PlayerLevel) return false;
    if (!object.Equals(Commendation, other.Commendation)) return false;
    if (ElevatedState != other.ElevatedState) return false;
    if (XpTrailTimestampRefresh != other.XpTrailTimestampRefresh) return false;
    if (XpTrailLevel != other.XpTrailLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPlayerLevel) hash ^= PlayerLevel.GetHashCode();
    if (commendation_ != null) hash ^= Commendation.GetHashCode();
    if (HasElevatedState) hash ^= ElevatedState.GetHashCode();
    if (HasXpTrailTimestampRefresh) hash ^= XpTrailTimestampRefresh.GetHashCode();
    if (HasXpTrailLevel) hash ^= XpTrailLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPlayerLevel) {
      output.WriteRawTag(8);
      output.WriteInt32(PlayerLevel);
    }
    if (commendation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Commendation);
    }
    if (HasElevatedState) {
      output.WriteRawTag(24);
      output.WriteBool(ElevatedState);
    }
    if (HasXpTrailTimestampRefresh) {
      output.WriteRawTag(32);
      output.WriteUInt32(XpTrailTimestampRefresh);
    }
    if (HasXpTrailLevel) {
      output.WriteRawTag(40);
      output.WriteUInt32(XpTrailLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPlayerLevel) {
      output.WriteRawTag(8);
      output.WriteInt32(PlayerLevel);
    }
    if (commendation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Commendation);
    }
    if (HasElevatedState) {
      output.WriteRawTag(24);
      output.WriteBool(ElevatedState);
    }
    if (HasXpTrailTimestampRefresh) {
      output.WriteRawTag(32);
      output.WriteUInt32(XpTrailTimestampRefresh);
    }
    if (HasXpTrailLevel) {
      output.WriteRawTag(40);
      output.WriteUInt32(XpTrailLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPlayerLevel) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
    }
    if (commendation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Commendation);
    }
    if (HasElevatedState) {
      size += 1 + 1;
    }
    if (HasXpTrailTimestampRefresh) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XpTrailTimestampRefresh);
    }
    if (HasXpTrailLevel) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XpTrailLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOPersonaDataPublic other) {
    if (other == null) {
      return;
    }
    if (other.HasPlayerLevel) {
      PlayerLevel = other.PlayerLevel;
    }
    if (other.commendation_ != null) {
      if (commendation_ == null) {
        Commendation = new global::PlayerCommendationInfo();
      }
      Commendation.MergeFrom(other.Commendation);
    }
    if (other.HasElevatedState) {
      ElevatedState = other.ElevatedState;
    }
    if (other.HasXpTrailTimestampRefresh) {
      XpTrailTimestampRefresh = other.XpTrailTimestampRefresh;
    }
    if (other.HasXpTrailLevel) {
      XpTrailLevel = other.XpTrailLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PlayerLevel = input.ReadInt32();
          break;
        }
        case 18: {
          if (commendation_ == null) {
            Commendation = new global::PlayerCommendationInfo();
          }
          input.ReadMessage(Commendation);
          break;
        }
        case 24: {
          ElevatedState = input.ReadBool();
          break;
        }
        case 32: {
          XpTrailTimestampRefresh = input.ReadUInt32();
          break;
        }
        case 40: {
          XpTrailLevel = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PlayerLevel = input.ReadInt32();
          break;
        }
        case 18: {
          if (commendation_ == null) {
            Commendation = new global::PlayerCommendationInfo();
          }
          input.ReadMessage(Commendation);
          break;
        }
        case 24: {
          ElevatedState = input.ReadBool();
          break;
        }
        case 32: {
          XpTrailTimestampRefresh = input.ReadUInt32();
          break;
        }
        case 40: {
          XpTrailLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSOAccountRecurringMission : pb::IMessage<CSOAccountRecurringMission>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOAccountRecurringMission> _parser = new pb::MessageParser<CSOAccountRecurringMission>(() => new CSOAccountRecurringMission());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOAccountRecurringMission> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[111]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountRecurringMission() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountRecurringMission(CSOAccountRecurringMission other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    missionId_ = other.missionId_;
    period_ = other.period_;
    progress_ = other.progress_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOAccountRecurringMission Clone() {
    return new CSOAccountRecurringMission(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "mission_id" field.</summary>
  public const int MissionIdFieldNumber = 2;
  private readonly static uint MissionIdDefaultValue = 0;

  private uint missionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MissionId {
    get { if ((_hasBits0 & 2) != 0) { return missionId_; } else { return MissionIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      missionId_ = value;
    }
  }
  /// <summary>Gets whether the "mission_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMissionId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "mission_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMissionId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "period" field.</summary>
  public const int PeriodFieldNumber = 3;
  private readonly static uint PeriodDefaultValue = 0;

  private uint period_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Period {
    get { if ((_hasBits0 & 4) != 0) { return period_; } else { return PeriodDefaultValue; } }
    set {
      _hasBits0 |= 4;
      period_ = value;
    }
  }
  /// <summary>Gets whether the "period" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPeriod {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "period" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPeriod() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "progress" field.</summary>
  public const int ProgressFieldNumber = 4;
  private readonly static uint ProgressDefaultValue = 0;

  private uint progress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Progress {
    get { if ((_hasBits0 & 8) != 0) { return progress_; } else { return ProgressDefaultValue; } }
    set {
      _hasBits0 |= 8;
      progress_ = value;
    }
  }
  /// <summary>Gets whether the "progress" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProgress {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "progress" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProgress() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOAccountRecurringMission);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOAccountRecurringMission other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (MissionId != other.MissionId) return false;
    if (Period != other.Period) return false;
    if (Progress != other.Progress) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasMissionId) hash ^= MissionId.GetHashCode();
    if (HasPeriod) hash ^= Period.GetHashCode();
    if (HasProgress) hash ^= Progress.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasMissionId) {
      output.WriteRawTag(16);
      output.WriteUInt32(MissionId);
    }
    if (HasPeriod) {
      output.WriteRawTag(24);
      output.WriteUInt32(Period);
    }
    if (HasProgress) {
      output.WriteRawTag(32);
      output.WriteUInt32(Progress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasMissionId) {
      output.WriteRawTag(16);
      output.WriteUInt32(MissionId);
    }
    if (HasPeriod) {
      output.WriteRawTag(24);
      output.WriteUInt32(Period);
    }
    if (HasProgress) {
      output.WriteRawTag(32);
      output.WriteUInt32(Progress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasMissionId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MissionId);
    }
    if (HasPeriod) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Period);
    }
    if (HasProgress) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Progress);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOAccountRecurringMission other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasMissionId) {
      MissionId = other.MissionId;
    }
    if (other.HasPeriod) {
      Period = other.Period;
    }
    if (other.HasProgress) {
      Progress = other.Progress;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          MissionId = input.ReadUInt32();
          break;
        }
        case 24: {
          Period = input.ReadUInt32();
          break;
        }
        case 32: {
          Progress = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          MissionId = input.ReadUInt32();
          break;
        }
        case 24: {
          Period = input.ReadUInt32();
          break;
        }
        case 32: {
          Progress = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GC2ClientNotifyXPShop : pb::IMessage<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop>(() => new CMsgGCCStrike15_v2_GC2ClientNotifyXPShop());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[112]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientNotifyXPShop() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientNotifyXPShop(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop other) : this() {
    _hasBits0 = other._hasBits0;
    prematch_ = other.prematch_ != null ? other.prematch_.Clone() : null;
    postmatch_ = other.postmatch_ != null ? other.postmatch_.Clone() : null;
    currentXp_ = other.currentXp_;
    currentLevel_ = other.currentLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientNotifyXPShop Clone() {
    return new CMsgGCCStrike15_v2_GC2ClientNotifyXPShop(this);
  }

  /// <summary>Field number for the "prematch" field.</summary>
  public const int PrematchFieldNumber = 1;
  private global::CSOAccountXpShop prematch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CSOAccountXpShop Prematch {
    get { return prematch_; }
    set {
      prematch_ = value;
    }
  }

  /// <summary>Field number for the "postmatch" field.</summary>
  public const int PostmatchFieldNumber = 2;
  private global::CSOAccountXpShop postmatch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CSOAccountXpShop Postmatch {
    get { return postmatch_; }
    set {
      postmatch_ = value;
    }
  }

  /// <summary>Field number for the "current_xp" field.</summary>
  public const int CurrentXpFieldNumber = 3;
  private readonly static uint CurrentXpDefaultValue = 0;

  private uint currentXp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CurrentXp {
    get { if ((_hasBits0 & 1) != 0) { return currentXp_; } else { return CurrentXpDefaultValue; } }
    set {
      _hasBits0 |= 1;
      currentXp_ = value;
    }
  }
  /// <summary>Gets whether the "current_xp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrentXp {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "current_xp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrentXp() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "current_level" field.</summary>
  public const int CurrentLevelFieldNumber = 4;
  private readonly static uint CurrentLevelDefaultValue = 0;

  private uint currentLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CurrentLevel {
    get { if ((_hasBits0 & 2) != 0) { return currentLevel_; } else { return CurrentLevelDefaultValue; } }
    set {
      _hasBits0 |= 2;
      currentLevel_ = value;
    }
  }
  /// <summary>Gets whether the "current_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrentLevel {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "current_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrentLevel() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GC2ClientNotifyXPShop);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Prematch, other.Prematch)) return false;
    if (!object.Equals(Postmatch, other.Postmatch)) return false;
    if (CurrentXp != other.CurrentXp) return false;
    if (CurrentLevel != other.CurrentLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (prematch_ != null) hash ^= Prematch.GetHashCode();
    if (postmatch_ != null) hash ^= Postmatch.GetHashCode();
    if (HasCurrentXp) hash ^= CurrentXp.GetHashCode();
    if (HasCurrentLevel) hash ^= CurrentLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (prematch_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Prematch);
    }
    if (postmatch_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Postmatch);
    }
    if (HasCurrentXp) {
      output.WriteRawTag(24);
      output.WriteUInt32(CurrentXp);
    }
    if (HasCurrentLevel) {
      output.WriteRawTag(32);
      output.WriteUInt32(CurrentLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (prematch_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Prematch);
    }
    if (postmatch_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Postmatch);
    }
    if (HasCurrentXp) {
      output.WriteRawTag(24);
      output.WriteUInt32(CurrentXp);
    }
    if (HasCurrentLevel) {
      output.WriteRawTag(32);
      output.WriteUInt32(CurrentLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (prematch_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prematch);
    }
    if (postmatch_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Postmatch);
    }
    if (HasCurrentXp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentXp);
    }
    if (HasCurrentLevel) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GC2ClientNotifyXPShop other) {
    if (other == null) {
      return;
    }
    if (other.prematch_ != null) {
      if (prematch_ == null) {
        Prematch = new global::CSOAccountXpShop();
      }
      Prematch.MergeFrom(other.Prematch);
    }
    if (other.postmatch_ != null) {
      if (postmatch_ == null) {
        Postmatch = new global::CSOAccountXpShop();
      }
      Postmatch.MergeFrom(other.Postmatch);
    }
    if (other.HasCurrentXp) {
      CurrentXp = other.CurrentXp;
    }
    if (other.HasCurrentLevel) {
      CurrentLevel = other.CurrentLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (prematch_ == null) {
            Prematch = new global::CSOAccountXpShop();
          }
          input.ReadMessage(Prematch);
          break;
        }
        case 18: {
          if (postmatch_ == null) {
            Postmatch = new global::CSOAccountXpShop();
          }
          input.ReadMessage(Postmatch);
          break;
        }
        case 24: {
          CurrentXp = input.ReadUInt32();
          break;
        }
        case 32: {
          CurrentLevel = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (prematch_ == null) {
            Prematch = new global::CSOAccountXpShop();
          }
          input.ReadMessage(Prematch);
          break;
        }
        case 18: {
          if (postmatch_ == null) {
            Postmatch = new global::CSOAccountXpShop();
          }
          input.ReadMessage(Postmatch);
          break;
        }
        case 24: {
          CurrentXp = input.ReadUInt32();
          break;
        }
        case 32: {
          CurrentLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Client2GcAckXPShopTracks : pb::IMessage<CMsgGCCStrike15_v2_Client2GcAckXPShopTracks>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Client2GcAckXPShopTracks> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Client2GcAckXPShopTracks>(() => new CMsgGCCStrike15_v2_Client2GcAckXPShopTracks());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Client2GcAckXPShopTracks> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[113]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GcAckXPShopTracks() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GcAckXPShopTracks(CMsgGCCStrike15_v2_Client2GcAckXPShopTracks other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GcAckXPShopTracks Clone() {
    return new CMsgGCCStrike15_v2_Client2GcAckXPShopTracks(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Client2GcAckXPShopTracks);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Client2GcAckXPShopTracks other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Client2GcAckXPShopTracks other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats : pb::IMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats>(() => new CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[114]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats(CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats other) : this() {
    _hasBits0 = other._hasBits0;
    gsLocationId_ = other.gsLocationId_;
    dataCenterId_ = other.dataCenterId_;
    numLockedIn_ = other.numLockedIn_;
    numFoundNearby_ = other.numFoundNearby_;
    noteLevel_ = other.noteLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats Clone() {
    return new CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats(this);
  }

  /// <summary>Field number for the "gs_location_id" field.</summary>
  public const int GsLocationIdFieldNumber = 1;
  private readonly static uint GsLocationIdDefaultValue = 0;

  private uint gsLocationId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GsLocationId {
    get { if ((_hasBits0 & 1) != 0) { return gsLocationId_; } else { return GsLocationIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gsLocationId_ = value;
    }
  }
  /// <summary>Gets whether the "gs_location_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGsLocationId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "gs_location_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGsLocationId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "data_center_id" field.</summary>
  public const int DataCenterIdFieldNumber = 2;
  private readonly static uint DataCenterIdDefaultValue = 0;

  private uint dataCenterId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DataCenterId {
    get { if ((_hasBits0 & 2) != 0) { return dataCenterId_; } else { return DataCenterIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      dataCenterId_ = value;
    }
  }
  /// <summary>Gets whether the "data_center_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDataCenterId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "data_center_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDataCenterId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "num_locked_in" field.</summary>
  public const int NumLockedInFieldNumber = 3;
  private readonly static uint NumLockedInDefaultValue = 0;

  private uint numLockedIn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NumLockedIn {
    get { if ((_hasBits0 & 4) != 0) { return numLockedIn_; } else { return NumLockedInDefaultValue; } }
    set {
      _hasBits0 |= 4;
      numLockedIn_ = value;
    }
  }
  /// <summary>Gets whether the "num_locked_in" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumLockedIn {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "num_locked_in" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumLockedIn() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "num_found_nearby" field.</summary>
  public const int NumFoundNearbyFieldNumber = 4;
  private readonly static uint NumFoundNearbyDefaultValue = 0;

  private uint numFoundNearby_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NumFoundNearby {
    get { if ((_hasBits0 & 8) != 0) { return numFoundNearby_; } else { return NumFoundNearbyDefaultValue; } }
    set {
      _hasBits0 |= 8;
      numFoundNearby_ = value;
    }
  }
  /// <summary>Gets whether the "num_found_nearby" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumFoundNearby {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "num_found_nearby" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumFoundNearby() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "note_level" field.</summary>
  public const int NoteLevelFieldNumber = 5;
  private readonly static uint NoteLevelDefaultValue = 0;

  private uint noteLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NoteLevel {
    get { if ((_hasBits0 & 16) != 0) { return noteLevel_; } else { return NoteLevelDefaultValue; } }
    set {
      _hasBits0 |= 16;
      noteLevel_ = value;
    }
  }
  /// <summary>Gets whether the "note_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNoteLevel {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "note_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNoteLevel() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GsLocationId != other.GsLocationId) return false;
    if (DataCenterId != other.DataCenterId) return false;
    if (NumLockedIn != other.NumLockedIn) return false;
    if (NumFoundNearby != other.NumFoundNearby) return false;
    if (NoteLevel != other.NoteLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGsLocationId) hash ^= GsLocationId.GetHashCode();
    if (HasDataCenterId) hash ^= DataCenterId.GetHashCode();
    if (HasNumLockedIn) hash ^= NumLockedIn.GetHashCode();
    if (HasNumFoundNearby) hash ^= NumFoundNearby.GetHashCode();
    if (HasNoteLevel) hash ^= NoteLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGsLocationId) {
      output.WriteRawTag(8);
      output.WriteUInt32(GsLocationId);
    }
    if (HasDataCenterId) {
      output.WriteRawTag(16);
      output.WriteUInt32(DataCenterId);
    }
    if (HasNumLockedIn) {
      output.WriteRawTag(24);
      output.WriteUInt32(NumLockedIn);
    }
    if (HasNumFoundNearby) {
      output.WriteRawTag(32);
      output.WriteUInt32(NumFoundNearby);
    }
    if (HasNoteLevel) {
      output.WriteRawTag(40);
      output.WriteUInt32(NoteLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGsLocationId) {
      output.WriteRawTag(8);
      output.WriteUInt32(GsLocationId);
    }
    if (HasDataCenterId) {
      output.WriteRawTag(16);
      output.WriteUInt32(DataCenterId);
    }
    if (HasNumLockedIn) {
      output.WriteRawTag(24);
      output.WriteUInt32(NumLockedIn);
    }
    if (HasNumFoundNearby) {
      output.WriteRawTag(32);
      output.WriteUInt32(NumFoundNearby);
    }
    if (HasNoteLevel) {
      output.WriteRawTag(40);
      output.WriteUInt32(NoteLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGsLocationId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GsLocationId);
    }
    if (HasDataCenterId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataCenterId);
    }
    if (HasNumLockedIn) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumLockedIn);
    }
    if (HasNumFoundNearby) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumFoundNearby);
    }
    if (HasNoteLevel) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NoteLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats other) {
    if (other == null) {
      return;
    }
    if (other.HasGsLocationId) {
      GsLocationId = other.GsLocationId;
    }
    if (other.HasDataCenterId) {
      DataCenterId = other.DataCenterId;
    }
    if (other.HasNumLockedIn) {
      NumLockedIn = other.NumLockedIn;
    }
    if (other.HasNumFoundNearby) {
      NumFoundNearby = other.NumFoundNearby;
    }
    if (other.HasNoteLevel) {
      NoteLevel = other.NoteLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GsLocationId = input.ReadUInt32();
          break;
        }
        case 16: {
          DataCenterId = input.ReadUInt32();
          break;
        }
        case 24: {
          NumLockedIn = input.ReadUInt32();
          break;
        }
        case 32: {
          NumFoundNearby = input.ReadUInt32();
          break;
        }
        case 40: {
          NoteLevel = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          GsLocationId = input.ReadUInt32();
          break;
        }
        case 16: {
          DataCenterId = input.ReadUInt32();
          break;
        }
        case 24: {
          NumLockedIn = input.ReadUInt32();
          break;
        }
        case 32: {
          NumFoundNearby = input.ReadUInt32();
          break;
        }
        case 40: {
          NoteLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGC_GlobalGame_Subscribe : pb::IMessage<CMsgGC_GlobalGame_Subscribe>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGC_GlobalGame_Subscribe> _parser = new pb::MessageParser<CMsgGC_GlobalGame_Subscribe>(() => new CMsgGC_GlobalGame_Subscribe());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGC_GlobalGame_Subscribe> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[115]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Subscribe() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Subscribe(CMsgGC_GlobalGame_Subscribe other) : this() {
    _hasBits0 = other._hasBits0;
    ticket_ = other.ticket_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Subscribe Clone() {
    return new CMsgGC_GlobalGame_Subscribe(this);
  }

  /// <summary>Field number for the "ticket" field.</summary>
  public const int TicketFieldNumber = 1;
  private readonly static ulong TicketDefaultValue = 0UL;

  private ulong ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Ticket {
    get { if ((_hasBits0 & 1) != 0) { return ticket_; } else { return TicketDefaultValue; } }
    set {
      _hasBits0 |= 1;
      ticket_ = value;
    }
  }
  /// <summary>Gets whether the "ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicket {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicket() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGC_GlobalGame_Subscribe);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGC_GlobalGame_Subscribe other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ticket != other.Ticket) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTicket) hash ^= Ticket.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTicket) {
      output.WriteRawTag(8);
      output.WriteUInt64(Ticket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTicket) {
      output.WriteRawTag(8);
      output.WriteUInt64(Ticket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTicket) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ticket);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGC_GlobalGame_Subscribe other) {
    if (other == null) {
      return;
    }
    if (other.HasTicket) {
      Ticket = other.Ticket;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ticket = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ticket = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGC_GlobalGame_Unsubscribe : pb::IMessage<CMsgGC_GlobalGame_Unsubscribe>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGC_GlobalGame_Unsubscribe> _parser = new pb::MessageParser<CMsgGC_GlobalGame_Unsubscribe>(() => new CMsgGC_GlobalGame_Unsubscribe());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGC_GlobalGame_Unsubscribe> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[116]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Unsubscribe() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Unsubscribe(CMsgGC_GlobalGame_Unsubscribe other) : this() {
    _hasBits0 = other._hasBits0;
    timeleft_ = other.timeleft_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Unsubscribe Clone() {
    return new CMsgGC_GlobalGame_Unsubscribe(this);
  }

  /// <summary>Field number for the "timeleft" field.</summary>
  public const int TimeleftFieldNumber = 1;
  private readonly static int TimeleftDefaultValue = 0;

  private int timeleft_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Timeleft {
    get { if ((_hasBits0 & 1) != 0) { return timeleft_; } else { return TimeleftDefaultValue; } }
    set {
      _hasBits0 |= 1;
      timeleft_ = value;
    }
  }
  /// <summary>Gets whether the "timeleft" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeleft {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "timeleft" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeleft() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGC_GlobalGame_Unsubscribe);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGC_GlobalGame_Unsubscribe other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Timeleft != other.Timeleft) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTimeleft) hash ^= Timeleft.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTimeleft) {
      output.WriteRawTag(8);
      output.WriteInt32(Timeleft);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTimeleft) {
      output.WriteRawTag(8);
      output.WriteInt32(Timeleft);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTimeleft) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeleft);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGC_GlobalGame_Unsubscribe other) {
    if (other == null) {
      return;
    }
    if (other.HasTimeleft) {
      Timeleft = other.Timeleft;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Timeleft = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Timeleft = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGC_GlobalGame_Play : pb::IMessage<CMsgGC_GlobalGame_Play>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGC_GlobalGame_Play> _parser = new pb::MessageParser<CMsgGC_GlobalGame_Play>(() => new CMsgGC_GlobalGame_Play());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGC_GlobalGame_Play> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[117]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Play() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Play(CMsgGC_GlobalGame_Play other) : this() {
    _hasBits0 = other._hasBits0;
    ticket_ = other.ticket_;
    gametimems_ = other.gametimems_;
    msperpoint_ = other.msperpoint_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGC_GlobalGame_Play Clone() {
    return new CMsgGC_GlobalGame_Play(this);
  }

  /// <summary>Field number for the "ticket" field.</summary>
  public const int TicketFieldNumber = 1;
  private readonly static ulong TicketDefaultValue = 0UL;

  private ulong ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Ticket {
    get { if ((_hasBits0 & 1) != 0) { return ticket_; } else { return TicketDefaultValue; } }
    set {
      _hasBits0 |= 1;
      ticket_ = value;
    }
  }
  /// <summary>Gets whether the "ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicket {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicket() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "gametimems" field.</summary>
  public const int GametimemsFieldNumber = 2;
  private readonly static uint GametimemsDefaultValue = 0;

  private uint gametimems_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Gametimems {
    get { if ((_hasBits0 & 2) != 0) { return gametimems_; } else { return GametimemsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      gametimems_ = value;
    }
  }
  /// <summary>Gets whether the "gametimems" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGametimems {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "gametimems" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGametimems() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "msperpoint" field.</summary>
  public const int MsperpointFieldNumber = 3;
  private readonly static uint MsperpointDefaultValue = 0;

  private uint msperpoint_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Msperpoint {
    get { if ((_hasBits0 & 4) != 0) { return msperpoint_; } else { return MsperpointDefaultValue; } }
    set {
      _hasBits0 |= 4;
      msperpoint_ = value;
    }
  }
  /// <summary>Gets whether the "msperpoint" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMsperpoint {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "msperpoint" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMsperpoint() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGC_GlobalGame_Play);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGC_GlobalGame_Play other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ticket != other.Ticket) return false;
    if (Gametimems != other.Gametimems) return false;
    if (Msperpoint != other.Msperpoint) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTicket) hash ^= Ticket.GetHashCode();
    if (HasGametimems) hash ^= Gametimems.GetHashCode();
    if (HasMsperpoint) hash ^= Msperpoint.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTicket) {
      output.WriteRawTag(8);
      output.WriteUInt64(Ticket);
    }
    if (HasGametimems) {
      output.WriteRawTag(16);
      output.WriteUInt32(Gametimems);
    }
    if (HasMsperpoint) {
      output.WriteRawTag(24);
      output.WriteUInt32(Msperpoint);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTicket) {
      output.WriteRawTag(8);
      output.WriteUInt64(Ticket);
    }
    if (HasGametimems) {
      output.WriteRawTag(16);
      output.WriteUInt32(Gametimems);
    }
    if (HasMsperpoint) {
      output.WriteRawTag(24);
      output.WriteUInt32(Msperpoint);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTicket) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ticket);
    }
    if (HasGametimems) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gametimems);
    }
    if (HasMsperpoint) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Msperpoint);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGC_GlobalGame_Play other) {
    if (other == null) {
      return;
    }
    if (other.HasTicket) {
      Ticket = other.Ticket;
    }
    if (other.HasGametimems) {
      Gametimems = other.Gametimems;
    }
    if (other.HasMsperpoint) {
      Msperpoint = other.Msperpoint;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ticket = input.ReadUInt64();
          break;
        }
        case 16: {
          Gametimems = input.ReadUInt32();
          break;
        }
        case 24: {
          Msperpoint = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ticket = input.ReadUInt64();
          break;
        }
        case 16: {
          Gametimems = input.ReadUInt32();
          break;
        }
        case 24: {
          Msperpoint = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_AcknowledgePenalty : pb::IMessage<CMsgGCCStrike15_v2_AcknowledgePenalty>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_AcknowledgePenalty> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_AcknowledgePenalty>(() => new CMsgGCCStrike15_v2_AcknowledgePenalty());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_AcknowledgePenalty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[118]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_AcknowledgePenalty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_AcknowledgePenalty(CMsgGCCStrike15_v2_AcknowledgePenalty other) : this() {
    _hasBits0 = other._hasBits0;
    acknowledged_ = other.acknowledged_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_AcknowledgePenalty Clone() {
    return new CMsgGCCStrike15_v2_AcknowledgePenalty(this);
  }

  /// <summary>Field number for the "acknowledged" field.</summary>
  public const int AcknowledgedFieldNumber = 1;
  private readonly static int AcknowledgedDefaultValue = 0;

  private int acknowledged_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Acknowledged {
    get { if ((_hasBits0 & 1) != 0) { return acknowledged_; } else { return AcknowledgedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      acknowledged_ = value;
    }
  }
  /// <summary>Gets whether the "acknowledged" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAcknowledged {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "acknowledged" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAcknowledged() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_AcknowledgePenalty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_AcknowledgePenalty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Acknowledged != other.Acknowledged) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAcknowledged) hash ^= Acknowledged.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAcknowledged) {
      output.WriteRawTag(8);
      output.WriteInt32(Acknowledged);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAcknowledged) {
      output.WriteRawTag(8);
      output.WriteInt32(Acknowledged);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAcknowledged) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Acknowledged);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_AcknowledgePenalty other) {
    if (other == null) {
      return;
    }
    if (other.HasAcknowledged) {
      Acknowledged = other.Acknowledged;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Acknowledged = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Acknowledged = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin : pb::IMessage<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin>(() => new CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[119]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin other) : this() {
    _hasBits0 = other._hasBits0;
    defindex_ = other.defindex_;
    upgradeid_ = other.upgradeid_;
    hours_ = other.hours_;
    prestigetime_ = other.prestigetime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin Clone() {
    return new CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin(this);
  }

  /// <summary>Field number for the "defindex" field.</summary>
  public const int DefindexFieldNumber = 1;
  private readonly static uint DefindexDefaultValue = 0;

  private uint defindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Defindex {
    get { if ((_hasBits0 & 1) != 0) { return defindex_; } else { return DefindexDefaultValue; } }
    set {
      _hasBits0 |= 1;
      defindex_ = value;
    }
  }
  /// <summary>Gets whether the "defindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDefindex {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "defindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDefindex() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "upgradeid" field.</summary>
  public const int UpgradeidFieldNumber = 2;
  private readonly static ulong UpgradeidDefaultValue = 0UL;

  private ulong upgradeid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Upgradeid {
    get { if ((_hasBits0 & 2) != 0) { return upgradeid_; } else { return UpgradeidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      upgradeid_ = value;
    }
  }
  /// <summary>Gets whether the "upgradeid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUpgradeid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "upgradeid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUpgradeid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "hours" field.</summary>
  public const int HoursFieldNumber = 3;
  private readonly static uint HoursDefaultValue = 0;

  private uint hours_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Hours {
    get { if ((_hasBits0 & 4) != 0) { return hours_; } else { return HoursDefaultValue; } }
    set {
      _hasBits0 |= 4;
      hours_ = value;
    }
  }
  /// <summary>Gets whether the "hours" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHours {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "hours" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHours() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "prestigetime" field.</summary>
  public const int PrestigetimeFieldNumber = 4;
  private readonly static uint PrestigetimeDefaultValue = 0;

  private uint prestigetime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Prestigetime {
    get { if ((_hasBits0 & 8) != 0) { return prestigetime_; } else { return PrestigetimeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      prestigetime_ = value;
    }
  }
  /// <summary>Gets whether the "prestigetime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrestigetime {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "prestigetime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrestigetime() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Defindex != other.Defindex) return false;
    if (Upgradeid != other.Upgradeid) return false;
    if (Hours != other.Hours) return false;
    if (Prestigetime != other.Prestigetime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDefindex) hash ^= Defindex.GetHashCode();
    if (HasUpgradeid) hash ^= Upgradeid.GetHashCode();
    if (HasHours) hash ^= Hours.GetHashCode();
    if (HasPrestigetime) hash ^= Prestigetime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDefindex) {
      output.WriteRawTag(8);
      output.WriteUInt32(Defindex);
    }
    if (HasUpgradeid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Upgradeid);
    }
    if (HasHours) {
      output.WriteRawTag(24);
      output.WriteUInt32(Hours);
    }
    if (HasPrestigetime) {
      output.WriteRawTag(32);
      output.WriteUInt32(Prestigetime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDefindex) {
      output.WriteRawTag(8);
      output.WriteUInt32(Defindex);
    }
    if (HasUpgradeid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Upgradeid);
    }
    if (HasHours) {
      output.WriteRawTag(24);
      output.WriteUInt32(Hours);
    }
    if (HasPrestigetime) {
      output.WriteRawTag(32);
      output.WriteUInt32(Prestigetime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDefindex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Defindex);
    }
    if (HasUpgradeid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Upgradeid);
    }
    if (HasHours) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hours);
    }
    if (HasPrestigetime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Prestigetime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin other) {
    if (other == null) {
      return;
    }
    if (other.HasDefindex) {
      Defindex = other.Defindex;
    }
    if (other.HasUpgradeid) {
      Upgradeid = other.Upgradeid;
    }
    if (other.HasHours) {
      Hours = other.Hours;
    }
    if (other.HasPrestigetime) {
      Prestigetime = other.Prestigetime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Defindex = input.ReadUInt32();
          break;
        }
        case 16: {
          Upgradeid = input.ReadUInt64();
          break;
        }
        case 24: {
          Hours = input.ReadUInt32();
          break;
        }
        case 32: {
          Prestigetime = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Defindex = input.ReadUInt32();
          break;
        }
        case 16: {
          Upgradeid = input.ReadUInt64();
          break;
        }
        case 24: {
          Hours = input.ReadUInt32();
          break;
        }
        case 32: {
          Prestigetime = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Client2GCStreamUnlock : pb::IMessage<CMsgGCCStrike15_v2_Client2GCStreamUnlock>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Client2GCStreamUnlock> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Client2GCStreamUnlock>(() => new CMsgGCCStrike15_v2_Client2GCStreamUnlock());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Client2GCStreamUnlock> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[120]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCStreamUnlock() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCStreamUnlock(CMsgGCCStrike15_v2_Client2GCStreamUnlock other) : this() {
    _hasBits0 = other._hasBits0;
    ticket_ = other.ticket_;
    os_ = other.os_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Client2GCStreamUnlock Clone() {
    return new CMsgGCCStrike15_v2_Client2GCStreamUnlock(this);
  }

  /// <summary>Field number for the "ticket" field.</summary>
  public const int TicketFieldNumber = 1;
  private readonly static ulong TicketDefaultValue = 0UL;

  private ulong ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Ticket {
    get { if ((_hasBits0 & 1) != 0) { return ticket_; } else { return TicketDefaultValue; } }
    set {
      _hasBits0 |= 1;
      ticket_ = value;
    }
  }
  /// <summary>Gets whether the "ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicket {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicket() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "os" field.</summary>
  public const int OsFieldNumber = 2;
  private readonly static int OsDefaultValue = 0;

  private int os_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Os {
    get { if ((_hasBits0 & 2) != 0) { return os_; } else { return OsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      os_ = value;
    }
  }
  /// <summary>Gets whether the "os" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOs {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "os" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOs() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Client2GCStreamUnlock);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Client2GCStreamUnlock other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ticket != other.Ticket) return false;
    if (Os != other.Os) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTicket) hash ^= Ticket.GetHashCode();
    if (HasOs) hash ^= Os.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTicket) {
      output.WriteRawTag(8);
      output.WriteUInt64(Ticket);
    }
    if (HasOs) {
      output.WriteRawTag(16);
      output.WriteInt32(Os);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTicket) {
      output.WriteRawTag(8);
      output.WriteUInt64(Ticket);
    }
    if (HasOs) {
      output.WriteRawTag(16);
      output.WriteInt32(Os);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTicket) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ticket);
    }
    if (HasOs) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Os);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Client2GCStreamUnlock other) {
    if (other == null) {
      return;
    }
    if (other.HasTicket) {
      Ticket = other.Ticket;
    }
    if (other.HasOs) {
      Os = other.Os;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ticket = input.ReadUInt64();
          break;
        }
        case 16: {
          Os = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ticket = input.ReadUInt64();
          break;
        }
        case 16: {
          Os = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientToGCRequestElevate : pb::IMessage<CMsgGCCStrike15_v2_ClientToGCRequestElevate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCRequestElevate> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCRequestElevate>(() => new CMsgGCCStrike15_v2_ClientToGCRequestElevate());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCRequestElevate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[121]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCRequestElevate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCRequestElevate(CMsgGCCStrike15_v2_ClientToGCRequestElevate other) : this() {
    _hasBits0 = other._hasBits0;
    stage_ = other.stage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCRequestElevate Clone() {
    return new CMsgGCCStrike15_v2_ClientToGCRequestElevate(this);
  }

  /// <summary>Field number for the "stage" field.</summary>
  public const int StageFieldNumber = 1;
  private readonly static uint StageDefaultValue = 0;

  private uint stage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Stage {
    get { if ((_hasBits0 & 1) != 0) { return stage_; } else { return StageDefaultValue; } }
    set {
      _hasBits0 |= 1;
      stage_ = value;
    }
  }
  /// <summary>Gets whether the "stage" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStage {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "stage" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStage() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientToGCRequestElevate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientToGCRequestElevate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Stage != other.Stage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasStage) hash ^= Stage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasStage) {
      output.WriteRawTag(8);
      output.WriteUInt32(Stage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasStage) {
      output.WriteRawTag(8);
      output.WriteUInt32(Stage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasStage) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientToGCRequestElevate other) {
    if (other == null) {
      return;
    }
    if (other.HasStage) {
      Stage = other.Stage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Stage = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Stage = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientToGCChat : pb::IMessage<CMsgGCCStrike15_v2_ClientToGCChat>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCChat> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCChat>(() => new CMsgGCCStrike15_v2_ClientToGCChat());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCChat> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[122]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCChat() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCChat(CMsgGCCStrike15_v2_ClientToGCChat other) : this() {
    _hasBits0 = other._hasBits0;
    matchId_ = other.matchId_;
    text_ = other.text_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCChat Clone() {
    return new CMsgGCCStrike15_v2_ClientToGCChat(this);
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 1;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 1) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "text" field.</summary>
  public const int TextFieldNumber = 2;
  private readonly static string TextDefaultValue = "";

  private string text_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Text {
    get { return text_ ?? TextDefaultValue; }
    set {
      text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "text" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasText {
    get { return text_ != null; }
  }
  /// <summary>Clears the value of the "text" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearText() {
    text_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientToGCChat);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientToGCChat other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MatchId != other.MatchId) return false;
    if (Text != other.Text) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (HasText) hash ^= Text.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMatchId) {
      output.WriteRawTag(8);
      output.WriteUInt64(MatchId);
    }
    if (HasText) {
      output.WriteRawTag(18);
      output.WriteString(Text);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMatchId) {
      output.WriteRawTag(8);
      output.WriteUInt64(MatchId);
    }
    if (HasText) {
      output.WriteRawTag(18);
      output.WriteString(Text);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (HasText) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientToGCChat other) {
    if (other == null) {
      return;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    if (other.HasText) {
      Text = other.Text;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 18: {
          Text = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 18: {
          Text = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GCToClientChat : pb::IMessage<CMsgGCCStrike15_v2_GCToClientChat>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GCToClientChat> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GCToClientChat>(() => new CMsgGCCStrike15_v2_GCToClientChat());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GCToClientChat> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[123]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GCToClientChat() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GCToClientChat(CMsgGCCStrike15_v2_GCToClientChat other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    text_ = other.text_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GCToClientChat Clone() {
    return new CMsgGCCStrike15_v2_GCToClientChat(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "text" field.</summary>
  public const int TextFieldNumber = 2;
  private readonly static string TextDefaultValue = "";

  private string text_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Text {
    get { return text_ ?? TextDefaultValue; }
    set {
      text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "text" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasText {
    get { return text_ != null; }
  }
  /// <summary>Clears the value of the "text" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearText() {
    text_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GCToClientChat);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GCToClientChat other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (Text != other.Text) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    if (HasText) hash ^= Text.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasText) {
      output.WriteRawTag(18);
      output.WriteString(Text);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (HasText) {
      output.WriteRawTag(18);
      output.WriteString(Text);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (HasText) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GCToClientChat other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    if (other.HasText) {
      Text = other.Text;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          Text = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          Text = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientAuthKeyCode : pb::IMessage<CMsgGCCStrike15_v2_ClientAuthKeyCode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientAuthKeyCode> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientAuthKeyCode>(() => new CMsgGCCStrike15_v2_ClientAuthKeyCode());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientAuthKeyCode> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[124]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientAuthKeyCode() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientAuthKeyCode(CMsgGCCStrike15_v2_ClientAuthKeyCode other) : this() {
    _hasBits0 = other._hasBits0;
    eventid_ = other.eventid_;
    code_ = other.code_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientAuthKeyCode Clone() {
    return new CMsgGCCStrike15_v2_ClientAuthKeyCode(this);
  }

  /// <summary>Field number for the "eventid" field.</summary>
  public const int EventidFieldNumber = 1;
  private readonly static uint EventidDefaultValue = 0;

  private uint eventid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Eventid {
    get { if ((_hasBits0 & 1) != 0) { return eventid_; } else { return EventidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventid_ = value;
    }
  }
  /// <summary>Gets whether the "eventid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eventid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 2;
  private readonly static string CodeDefaultValue = "";

  private string code_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Code {
    get { return code_ ?? CodeDefaultValue; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCode {
    get { return code_ != null; }
  }
  /// <summary>Clears the value of the "code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCode() {
    code_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientAuthKeyCode);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientAuthKeyCode other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eventid != other.Eventid) return false;
    if (Code != other.Code) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventid) hash ^= Eventid.GetHashCode();
    if (HasCode) hash ^= Code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eventid);
    }
    if (HasCode) {
      output.WriteRawTag(18);
      output.WriteString(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eventid);
    }
    if (HasCode) {
      output.WriteRawTag(18);
      output.WriteString(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eventid);
    }
    if (HasCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientAuthKeyCode other) {
    if (other == null) {
      return;
    }
    if (other.HasEventid) {
      Eventid = other.Eventid;
    }
    if (other.HasCode) {
      Code = other.Code;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eventid = input.ReadUInt32();
          break;
        }
        case 18: {
          Code = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eventid = input.ReadUInt32();
          break;
        }
        case 18: {
          Code = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_GotvSyncPacket : pb::IMessage<CMsgGCCStrike15_GotvSyncPacket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_GotvSyncPacket> _parser = new pb::MessageParser<CMsgGCCStrike15_GotvSyncPacket>(() => new CMsgGCCStrike15_GotvSyncPacket());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_GotvSyncPacket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[125]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_GotvSyncPacket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_GotvSyncPacket(CMsgGCCStrike15_GotvSyncPacket other) : this() {
    data_ = other.data_ != null ? other.data_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_GotvSyncPacket Clone() {
    return new CMsgGCCStrike15_GotvSyncPacket(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private global::CEngineGotvSyncPacket data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CEngineGotvSyncPacket Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_GotvSyncPacket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_GotvSyncPacket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Data, other.Data)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (data_ != null) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (data_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (data_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_GotvSyncPacket other) {
    if (other == null) {
      return;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        Data = new global::CEngineGotvSyncPacket();
      }
      Data.MergeFrom(other.Data);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (data_ == null) {
            Data = new global::CEngineGotvSyncPacket();
          }
          input.ReadMessage(Data);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (data_ == null) {
            Data = new global::CEngineGotvSyncPacket();
          }
          input.ReadMessage(Data);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerDecalDigitalSignature : pb::IMessage<PlayerDecalDigitalSignature>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerDecalDigitalSignature> _parser = new pb::MessageParser<PlayerDecalDigitalSignature>(() => new PlayerDecalDigitalSignature());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerDecalDigitalSignature> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[126]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerDecalDigitalSignature() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerDecalDigitalSignature(PlayerDecalDigitalSignature other) : this() {
    _hasBits0 = other._hasBits0;
    signature_ = other.signature_;
    accountid_ = other.accountid_;
    rtime_ = other.rtime_;
    endpos_ = other.endpos_.Clone();
    startpos_ = other.startpos_.Clone();
    left_ = other.left_.Clone();
    txDefidx_ = other.txDefidx_;
    entindex_ = other.entindex_;
    hitbox_ = other.hitbox_;
    creationtime_ = other.creationtime_;
    equipslot_ = other.equipslot_;
    traceId_ = other.traceId_;
    normal_ = other.normal_.Clone();
    tintId_ = other.tintId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerDecalDigitalSignature Clone() {
    return new PlayerDecalDigitalSignature(this);
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 1;
  private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString signature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Signature {
    get { return signature_ ?? SignatureDefaultValue; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSignature {
    get { return signature_ != null; }
  }
  /// <summary>Clears the value of the "signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSignature() {
    signature_ = null;
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 2;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "rtime" field.</summary>
  public const int RtimeFieldNumber = 3;
  private readonly static uint RtimeDefaultValue = 0;

  private uint rtime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime {
    get { if ((_hasBits0 & 2) != 0) { return rtime_; } else { return RtimeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      rtime_ = value;
    }
  }
  /// <summary>Gets whether the "rtime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "rtime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "endpos" field.</summary>
  public const int EndposFieldNumber = 4;
  private static readonly pb::FieldCodec<float> _repeated_endpos_codec
      = pb::FieldCodec.ForFloat(37);
  private readonly pbc::RepeatedField<float> endpos_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Endpos {
    get { return endpos_; }
  }

  /// <summary>Field number for the "startpos" field.</summary>
  public const int StartposFieldNumber = 5;
  private static readonly pb::FieldCodec<float> _repeated_startpos_codec
      = pb::FieldCodec.ForFloat(45);
  private readonly pbc::RepeatedField<float> startpos_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Startpos {
    get { return startpos_; }
  }

  /// <summary>Field number for the "left" field.</summary>
  public const int LeftFieldNumber = 6;
  private static readonly pb::FieldCodec<float> _repeated_left_codec
      = pb::FieldCodec.ForFloat(53);
  private readonly pbc::RepeatedField<float> left_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Left {
    get { return left_; }
  }

  /// <summary>Field number for the "tx_defidx" field.</summary>
  public const int TxDefidxFieldNumber = 7;
  private readonly static uint TxDefidxDefaultValue = 0;

  private uint txDefidx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxDefidx {
    get { if ((_hasBits0 & 4) != 0) { return txDefidx_; } else { return TxDefidxDefaultValue; } }
    set {
      _hasBits0 |= 4;
      txDefidx_ = value;
    }
  }
  /// <summary>Gets whether the "tx_defidx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxDefidx {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "tx_defidx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxDefidx() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "entindex" field.</summary>
  public const int EntindexFieldNumber = 8;
  private readonly static int EntindexDefaultValue = 0;

  private int entindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Entindex {
    get { if ((_hasBits0 & 8) != 0) { return entindex_; } else { return EntindexDefaultValue; } }
    set {
      _hasBits0 |= 8;
      entindex_ = value;
    }
  }
  /// <summary>Gets whether the "entindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntindex {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "entindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntindex() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "hitbox" field.</summary>
  public const int HitboxFieldNumber = 9;
  private readonly static uint HitboxDefaultValue = 0;

  private uint hitbox_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Hitbox {
    get { if ((_hasBits0 & 16) != 0) { return hitbox_; } else { return HitboxDefaultValue; } }
    set {
      _hasBits0 |= 16;
      hitbox_ = value;
    }
  }
  /// <summary>Gets whether the "hitbox" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHitbox {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "hitbox" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHitbox() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "creationtime" field.</summary>
  public const int CreationtimeFieldNumber = 10;
  private readonly static float CreationtimeDefaultValue = 0F;

  private float creationtime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Creationtime {
    get { if ((_hasBits0 & 32) != 0) { return creationtime_; } else { return CreationtimeDefaultValue; } }
    set {
      _hasBits0 |= 32;
      creationtime_ = value;
    }
  }
  /// <summary>Gets whether the "creationtime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreationtime {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "creationtime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreationtime() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "equipslot" field.</summary>
  public const int EquipslotFieldNumber = 11;
  private readonly static uint EquipslotDefaultValue = 0;

  private uint equipslot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Equipslot {
    get { if ((_hasBits0 & 64) != 0) { return equipslot_; } else { return EquipslotDefaultValue; } }
    set {
      _hasBits0 |= 64;
      equipslot_ = value;
    }
  }
  /// <summary>Gets whether the "equipslot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEquipslot {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "equipslot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEquipslot() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "trace_id" field.</summary>
  public const int TraceIdFieldNumber = 12;
  private readonly static uint TraceIdDefaultValue = 0;

  private uint traceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TraceId {
    get { if ((_hasBits0 & 128) != 0) { return traceId_; } else { return TraceIdDefaultValue; } }
    set {
      _hasBits0 |= 128;
      traceId_ = value;
    }
  }
  /// <summary>Gets whether the "trace_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTraceId {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "trace_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTraceId() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "normal" field.</summary>
  public const int NormalFieldNumber = 13;
  private static readonly pb::FieldCodec<float> _repeated_normal_codec
      = pb::FieldCodec.ForFloat(109);
  private readonly pbc::RepeatedField<float> normal_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Normal {
    get { return normal_; }
  }

  /// <summary>Field number for the "tint_id" field.</summary>
  public const int TintIdFieldNumber = 14;
  private readonly static uint TintIdDefaultValue = 0;

  private uint tintId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TintId {
    get { if ((_hasBits0 & 256) != 0) { return tintId_; } else { return TintIdDefaultValue; } }
    set {
      _hasBits0 |= 256;
      tintId_ = value;
    }
  }
  /// <summary>Gets whether the "tint_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTintId {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "tint_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTintId() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerDecalDigitalSignature);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerDecalDigitalSignature other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Signature != other.Signature) return false;
    if (Accountid != other.Accountid) return false;
    if (Rtime != other.Rtime) return false;
    if(!endpos_.Equals(other.endpos_)) return false;
    if(!startpos_.Equals(other.startpos_)) return false;
    if(!left_.Equals(other.left_)) return false;
    if (TxDefidx != other.TxDefidx) return false;
    if (Entindex != other.Entindex) return false;
    if (Hitbox != other.Hitbox) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Creationtime, other.Creationtime)) return false;
    if (Equipslot != other.Equipslot) return false;
    if (TraceId != other.TraceId) return false;
    if(!normal_.Equals(other.normal_)) return false;
    if (TintId != other.TintId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSignature) hash ^= Signature.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasRtime) hash ^= Rtime.GetHashCode();
    hash ^= endpos_.GetHashCode();
    hash ^= startpos_.GetHashCode();
    hash ^= left_.GetHashCode();
    if (HasTxDefidx) hash ^= TxDefidx.GetHashCode();
    if (HasEntindex) hash ^= Entindex.GetHashCode();
    if (HasHitbox) hash ^= Hitbox.GetHashCode();
    if (HasCreationtime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Creationtime);
    if (HasEquipslot) hash ^= Equipslot.GetHashCode();
    if (HasTraceId) hash ^= TraceId.GetHashCode();
    hash ^= normal_.GetHashCode();
    if (HasTintId) hash ^= TintId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSignature) {
      output.WriteRawTag(10);
      output.WriteBytes(Signature);
    }
    if (HasAccountid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Accountid);
    }
    if (HasRtime) {
      output.WriteRawTag(24);
      output.WriteUInt32(Rtime);
    }
    endpos_.WriteTo(output, _repeated_endpos_codec);
    startpos_.WriteTo(output, _repeated_startpos_codec);
    left_.WriteTo(output, _repeated_left_codec);
    if (HasTxDefidx) {
      output.WriteRawTag(56);
      output.WriteUInt32(TxDefidx);
    }
    if (HasEntindex) {
      output.WriteRawTag(64);
      output.WriteInt32(Entindex);
    }
    if (HasHitbox) {
      output.WriteRawTag(72);
      output.WriteUInt32(Hitbox);
    }
    if (HasCreationtime) {
      output.WriteRawTag(85);
      output.WriteFloat(Creationtime);
    }
    if (HasEquipslot) {
      output.WriteRawTag(88);
      output.WriteUInt32(Equipslot);
    }
    if (HasTraceId) {
      output.WriteRawTag(96);
      output.WriteUInt32(TraceId);
    }
    normal_.WriteTo(output, _repeated_normal_codec);
    if (HasTintId) {
      output.WriteRawTag(112);
      output.WriteUInt32(TintId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSignature) {
      output.WriteRawTag(10);
      output.WriteBytes(Signature);
    }
    if (HasAccountid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Accountid);
    }
    if (HasRtime) {
      output.WriteRawTag(24);
      output.WriteUInt32(Rtime);
    }
    endpos_.WriteTo(ref output, _repeated_endpos_codec);
    startpos_.WriteTo(ref output, _repeated_startpos_codec);
    left_.WriteTo(ref output, _repeated_left_codec);
    if (HasTxDefidx) {
      output.WriteRawTag(56);
      output.WriteUInt32(TxDefidx);
    }
    if (HasEntindex) {
      output.WriteRawTag(64);
      output.WriteInt32(Entindex);
    }
    if (HasHitbox) {
      output.WriteRawTag(72);
      output.WriteUInt32(Hitbox);
    }
    if (HasCreationtime) {
      output.WriteRawTag(85);
      output.WriteFloat(Creationtime);
    }
    if (HasEquipslot) {
      output.WriteRawTag(88);
      output.WriteUInt32(Equipslot);
    }
    if (HasTraceId) {
      output.WriteRawTag(96);
      output.WriteUInt32(TraceId);
    }
    normal_.WriteTo(ref output, _repeated_normal_codec);
    if (HasTintId) {
      output.WriteRawTag(112);
      output.WriteUInt32(TintId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSignature) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
    }
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasRtime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtime);
    }
    size += endpos_.CalculateSize(_repeated_endpos_codec);
    size += startpos_.CalculateSize(_repeated_startpos_codec);
    size += left_.CalculateSize(_repeated_left_codec);
    if (HasTxDefidx) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TxDefidx);
    }
    if (HasEntindex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Entindex);
    }
    if (HasHitbox) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hitbox);
    }
    if (HasCreationtime) {
      size += 1 + 4;
    }
    if (HasEquipslot) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipslot);
    }
    if (HasTraceId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TraceId);
    }
    size += normal_.CalculateSize(_repeated_normal_codec);
    if (HasTintId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TintId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerDecalDigitalSignature other) {
    if (other == null) {
      return;
    }
    if (other.HasSignature) {
      Signature = other.Signature;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasRtime) {
      Rtime = other.Rtime;
    }
    endpos_.Add(other.endpos_);
    startpos_.Add(other.startpos_);
    left_.Add(other.left_);
    if (other.HasTxDefidx) {
      TxDefidx = other.TxDefidx;
    }
    if (other.HasEntindex) {
      Entindex = other.Entindex;
    }
    if (other.HasHitbox) {
      Hitbox = other.Hitbox;
    }
    if (other.HasCreationtime) {
      Creationtime = other.Creationtime;
    }
    if (other.HasEquipslot) {
      Equipslot = other.Equipslot;
    }
    if (other.HasTraceId) {
      TraceId = other.TraceId;
    }
    normal_.Add(other.normal_);
    if (other.HasTintId) {
      TintId = other.TintId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Signature = input.ReadBytes();
          break;
        }
        case 16: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 24: {
          Rtime = input.ReadUInt32();
          break;
        }
        case 34:
        case 37: {
          endpos_.AddEntriesFrom(input, _repeated_endpos_codec);
          break;
        }
        case 42:
        case 45: {
          startpos_.AddEntriesFrom(input, _repeated_startpos_codec);
          break;
        }
        case 50:
        case 53: {
          left_.AddEntriesFrom(input, _repeated_left_codec);
          break;
        }
        case 56: {
          TxDefidx = input.ReadUInt32();
          break;
        }
        case 64: {
          Entindex = input.ReadInt32();
          break;
        }
        case 72: {
          Hitbox = input.ReadUInt32();
          break;
        }
        case 85: {
          Creationtime = input.ReadFloat();
          break;
        }
        case 88: {
          Equipslot = input.ReadUInt32();
          break;
        }
        case 96: {
          TraceId = input.ReadUInt32();
          break;
        }
        case 106:
        case 109: {
          normal_.AddEntriesFrom(input, _repeated_normal_codec);
          break;
        }
        case 112: {
          TintId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Signature = input.ReadBytes();
          break;
        }
        case 16: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 24: {
          Rtime = input.ReadUInt32();
          break;
        }
        case 34:
        case 37: {
          endpos_.AddEntriesFrom(ref input, _repeated_endpos_codec);
          break;
        }
        case 42:
        case 45: {
          startpos_.AddEntriesFrom(ref input, _repeated_startpos_codec);
          break;
        }
        case 50:
        case 53: {
          left_.AddEntriesFrom(ref input, _repeated_left_codec);
          break;
        }
        case 56: {
          TxDefidx = input.ReadUInt32();
          break;
        }
        case 64: {
          Entindex = input.ReadInt32();
          break;
        }
        case 72: {
          Hitbox = input.ReadUInt32();
          break;
        }
        case 85: {
          Creationtime = input.ReadFloat();
          break;
        }
        case 88: {
          Equipslot = input.ReadUInt32();
          break;
        }
        case 96: {
          TraceId = input.ReadUInt32();
          break;
        }
        case 106:
        case 109: {
          normal_.AddEntriesFrom(ref input, _repeated_normal_codec);
          break;
        }
        case 112: {
          TintId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientPlayerDecalSign : pb::IMessage<CMsgGCCStrike15_v2_ClientPlayerDecalSign>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientPlayerDecalSign> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientPlayerDecalSign>(() => new CMsgGCCStrike15_v2_ClientPlayerDecalSign());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientPlayerDecalSign> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[127]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPlayerDecalSign() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPlayerDecalSign(CMsgGCCStrike15_v2_ClientPlayerDecalSign other) : this() {
    _hasBits0 = other._hasBits0;
    data_ = other.data_ != null ? other.data_.Clone() : null;
    itemid_ = other.itemid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPlayerDecalSign Clone() {
    return new CMsgGCCStrike15_v2_ClientPlayerDecalSign(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private global::PlayerDecalDigitalSignature data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PlayerDecalDigitalSignature Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  /// <summary>Field number for the "itemid" field.</summary>
  public const int ItemidFieldNumber = 2;
  private readonly static ulong ItemidDefaultValue = 0UL;

  private ulong itemid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Itemid {
    get { if ((_hasBits0 & 1) != 0) { return itemid_; } else { return ItemidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      itemid_ = value;
    }
  }
  /// <summary>Gets whether the "itemid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasItemid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "itemid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearItemid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientPlayerDecalSign);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientPlayerDecalSign other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Data, other.Data)) return false;
    if (Itemid != other.Itemid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (data_ != null) hash ^= Data.GetHashCode();
    if (HasItemid) hash ^= Itemid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (data_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Data);
    }
    if (HasItemid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Itemid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (data_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Data);
    }
    if (HasItemid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Itemid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (HasItemid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Itemid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientPlayerDecalSign other) {
    if (other == null) {
      return;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        Data = new global::PlayerDecalDigitalSignature();
      }
      Data.MergeFrom(other.Data);
    }
    if (other.HasItemid) {
      Itemid = other.Itemid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (data_ == null) {
            Data = new global::PlayerDecalDigitalSignature();
          }
          input.ReadMessage(Data);
          break;
        }
        case 16: {
          Itemid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (data_ == null) {
            Data = new global::PlayerDecalDigitalSignature();
          }
          input.ReadMessage(Data);
          break;
        }
        case 16: {
          Itemid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_BetaEnrollment : pb::IMessage<CMsgGCCStrike15_v2_BetaEnrollment>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_BetaEnrollment> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_BetaEnrollment>(() => new CMsgGCCStrike15_v2_BetaEnrollment());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_BetaEnrollment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[128]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_BetaEnrollment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_BetaEnrollment(CMsgGCCStrike15_v2_BetaEnrollment other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_BetaEnrollment Clone() {
    return new CMsgGCCStrike15_v2_BetaEnrollment(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static uint EresultDefaultValue = 0;

  private uint eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_BetaEnrollment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_BetaEnrollment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eresult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eresult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eresult);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_BetaEnrollment other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientLogonFatalError : pb::IMessage<CMsgGCCStrike15_v2_ClientLogonFatalError>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientLogonFatalError> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientLogonFatalError>(() => new CMsgGCCStrike15_v2_ClientLogonFatalError());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientLogonFatalError> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[129]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientLogonFatalError() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientLogonFatalError(CMsgGCCStrike15_v2_ClientLogonFatalError other) : this() {
    _hasBits0 = other._hasBits0;
    errorcode_ = other.errorcode_;
    message_ = other.message_;
    country_ = other.country_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientLogonFatalError Clone() {
    return new CMsgGCCStrike15_v2_ClientLogonFatalError(this);
  }

  /// <summary>Field number for the "errorcode" field.</summary>
  public const int ErrorcodeFieldNumber = 1;
  private readonly static uint ErrorcodeDefaultValue = 0;

  private uint errorcode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Errorcode {
    get { if ((_hasBits0 & 1) != 0) { return errorcode_; } else { return ErrorcodeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      errorcode_ = value;
    }
  }
  /// <summary>Gets whether the "errorcode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasErrorcode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "errorcode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearErrorcode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 2;
  private readonly static string MessageDefaultValue = "";

  private string message_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Message {
    get { return message_ ?? MessageDefaultValue; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "message" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessage {
    get { return message_ != null; }
  }
  /// <summary>Clears the value of the "message" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessage() {
    message_ = null;
  }

  /// <summary>Field number for the "country" field.</summary>
  public const int CountryFieldNumber = 3;
  private readonly static string CountryDefaultValue = "";

  private string country_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Country {
    get { return country_ ?? CountryDefaultValue; }
    set {
      country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "country" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountry {
    get { return country_ != null; }
  }
  /// <summary>Clears the value of the "country" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountry() {
    country_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientLogonFatalError);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientLogonFatalError other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Errorcode != other.Errorcode) return false;
    if (Message != other.Message) return false;
    if (Country != other.Country) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasErrorcode) hash ^= Errorcode.GetHashCode();
    if (HasMessage) hash ^= Message.GetHashCode();
    if (HasCountry) hash ^= Country.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasErrorcode) {
      output.WriteRawTag(8);
      output.WriteUInt32(Errorcode);
    }
    if (HasMessage) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    if (HasCountry) {
      output.WriteRawTag(26);
      output.WriteString(Country);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasErrorcode) {
      output.WriteRawTag(8);
      output.WriteUInt32(Errorcode);
    }
    if (HasMessage) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    if (HasCountry) {
      output.WriteRawTag(26);
      output.WriteString(Country);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasErrorcode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Errorcode);
    }
    if (HasMessage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (HasCountry) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientLogonFatalError other) {
    if (other == null) {
      return;
    }
    if (other.HasErrorcode) {
      Errorcode = other.Errorcode;
    }
    if (other.HasMessage) {
      Message = other.Message;
    }
    if (other.HasCountry) {
      Country = other.Country;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Errorcode = input.ReadUInt32();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
        case 26: {
          Country = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Errorcode = input.ReadUInt32();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
        case 26: {
          Country = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientPollState : pb::IMessage<CMsgGCCStrike15_v2_ClientPollState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientPollState> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientPollState>(() => new CMsgGCCStrike15_v2_ClientPollState());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientPollState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[130]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPollState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPollState(CMsgGCCStrike15_v2_ClientPollState other) : this() {
    _hasBits0 = other._hasBits0;
    pollid_ = other.pollid_;
    names_ = other.names_.Clone();
    values_ = other.values_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPollState Clone() {
    return new CMsgGCCStrike15_v2_ClientPollState(this);
  }

  /// <summary>Field number for the "pollid" field.</summary>
  public const int PollidFieldNumber = 1;
  private readonly static uint PollidDefaultValue = 0;

  private uint pollid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Pollid {
    get { if ((_hasBits0 & 1) != 0) { return pollid_; } else { return PollidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      pollid_ = value;
    }
  }
  /// <summary>Gets whether the "pollid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPollid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "pollid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPollid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "names" field.</summary>
  public const int NamesFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_names_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> Names {
    get { return names_; }
  }

  /// <summary>Field number for the "values" field.</summary>
  public const int ValuesFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_values_codec
      = pb::FieldCodec.ForInt32(24);
  private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> Values {
    get { return values_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientPollState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientPollState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Pollid != other.Pollid) return false;
    if(!names_.Equals(other.names_)) return false;
    if(!values_.Equals(other.values_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPollid) hash ^= Pollid.GetHashCode();
    hash ^= names_.GetHashCode();
    hash ^= values_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPollid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Pollid);
    }
    names_.WriteTo(output, _repeated_names_codec);
    values_.WriteTo(output, _repeated_values_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPollid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Pollid);
    }
    names_.WriteTo(ref output, _repeated_names_codec);
    values_.WriteTo(ref output, _repeated_values_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPollid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pollid);
    }
    size += names_.CalculateSize(_repeated_names_codec);
    size += values_.CalculateSize(_repeated_values_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientPollState other) {
    if (other == null) {
      return;
    }
    if (other.HasPollid) {
      Pollid = other.Pollid;
    }
    names_.Add(other.names_);
    values_.Add(other.values_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Pollid = input.ReadUInt32();
          break;
        }
        case 18: {
          names_.AddEntriesFrom(input, _repeated_names_codec);
          break;
        }
        case 26:
        case 24: {
          values_.AddEntriesFrom(input, _repeated_values_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Pollid = input.ReadUInt32();
          break;
        }
        case 18: {
          names_.AddEntriesFrom(ref input, _repeated_names_codec);
          break;
        }
        case 26:
        case 24: {
          values_.AddEntriesFrom(ref input, _repeated_values_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Party_Register : pb::IMessage<CMsgGCCStrike15_v2_Party_Register>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Party_Register> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Party_Register>(() => new CMsgGCCStrike15_v2_Party_Register());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Party_Register> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[131]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Register() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Register(CMsgGCCStrike15_v2_Party_Register other) : this() {
    _hasBits0 = other._hasBits0;
    id_ = other.id_;
    ver_ = other.ver_;
    apr_ = other.apr_;
    ark_ = other.ark_;
    nby_ = other.nby_;
    grp_ = other.grp_;
    slots_ = other.slots_;
    launcher_ = other.launcher_;
    gameType_ = other.gameType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Register Clone() {
    return new CMsgGCCStrike15_v2_Party_Register(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private readonly static uint IdDefaultValue = 0;

  private uint id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Id {
    get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      id_ = value;
    }
  }
  /// <summary>Gets whether the "id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ver" field.</summary>
  public const int VerFieldNumber = 2;
  private readonly static uint VerDefaultValue = 0;

  private uint ver_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ver {
    get { if ((_hasBits0 & 2) != 0) { return ver_; } else { return VerDefaultValue; } }
    set {
      _hasBits0 |= 2;
      ver_ = value;
    }
  }
  /// <summary>Gets whether the "ver" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVer {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "ver" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVer() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "apr" field.</summary>
  public const int AprFieldNumber = 3;
  private readonly static uint AprDefaultValue = 0;

  private uint apr_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Apr {
    get { if ((_hasBits0 & 4) != 0) { return apr_; } else { return AprDefaultValue; } }
    set {
      _hasBits0 |= 4;
      apr_ = value;
    }
  }
  /// <summary>Gets whether the "apr" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasApr {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "apr" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearApr() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "ark" field.</summary>
  public const int ArkFieldNumber = 4;
  private readonly static uint ArkDefaultValue = 0;

  private uint ark_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ark {
    get { if ((_hasBits0 & 8) != 0) { return ark_; } else { return ArkDefaultValue; } }
    set {
      _hasBits0 |= 8;
      ark_ = value;
    }
  }
  /// <summary>Gets whether the "ark" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasArk {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "ark" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearArk() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "nby" field.</summary>
  public const int NbyFieldNumber = 5;
  private readonly static uint NbyDefaultValue = 0;

  private uint nby_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Nby {
    get { if ((_hasBits0 & 16) != 0) { return nby_; } else { return NbyDefaultValue; } }
    set {
      _hasBits0 |= 16;
      nby_ = value;
    }
  }
  /// <summary>Gets whether the "nby" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNby {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "nby" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNby() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "grp" field.</summary>
  public const int GrpFieldNumber = 6;
  private readonly static uint GrpDefaultValue = 0;

  private uint grp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Grp {
    get { if ((_hasBits0 & 32) != 0) { return grp_; } else { return GrpDefaultValue; } }
    set {
      _hasBits0 |= 32;
      grp_ = value;
    }
  }
  /// <summary>Gets whether the "grp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGrp {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "grp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGrp() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "slots" field.</summary>
  public const int SlotsFieldNumber = 7;
  private readonly static uint SlotsDefaultValue = 0;

  private uint slots_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Slots {
    get { if ((_hasBits0 & 64) != 0) { return slots_; } else { return SlotsDefaultValue; } }
    set {
      _hasBits0 |= 64;
      slots_ = value;
    }
  }
  /// <summary>Gets whether the "slots" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSlots {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "slots" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSlots() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "launcher" field.</summary>
  public const int LauncherFieldNumber = 8;
  private readonly static uint LauncherDefaultValue = 0;

  private uint launcher_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Launcher {
    get { if ((_hasBits0 & 128) != 0) { return launcher_; } else { return LauncherDefaultValue; } }
    set {
      _hasBits0 |= 128;
      launcher_ = value;
    }
  }
  /// <summary>Gets whether the "launcher" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLauncher {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "launcher" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLauncher() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "game_type" field.</summary>
  public const int GameTypeFieldNumber = 9;
  private readonly static uint GameTypeDefaultValue = 0;

  private uint gameType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameType {
    get { if ((_hasBits0 & 256) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
    set {
      _hasBits0 |= 256;
      gameType_ = value;
    }
  }
  /// <summary>Gets whether the "game_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameType {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "game_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameType() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Party_Register);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Party_Register other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Ver != other.Ver) return false;
    if (Apr != other.Apr) return false;
    if (Ark != other.Ark) return false;
    if (Nby != other.Nby) return false;
    if (Grp != other.Grp) return false;
    if (Slots != other.Slots) return false;
    if (Launcher != other.Launcher) return false;
    if (GameType != other.GameType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasId) hash ^= Id.GetHashCode();
    if (HasVer) hash ^= Ver.GetHashCode();
    if (HasApr) hash ^= Apr.GetHashCode();
    if (HasArk) hash ^= Ark.GetHashCode();
    if (HasNby) hash ^= Nby.GetHashCode();
    if (HasGrp) hash ^= Grp.GetHashCode();
    if (HasSlots) hash ^= Slots.GetHashCode();
    if (HasLauncher) hash ^= Launcher.GetHashCode();
    if (HasGameType) hash ^= GameType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    if (HasVer) {
      output.WriteRawTag(16);
      output.WriteUInt32(Ver);
    }
    if (HasApr) {
      output.WriteRawTag(24);
      output.WriteUInt32(Apr);
    }
    if (HasArk) {
      output.WriteRawTag(32);
      output.WriteUInt32(Ark);
    }
    if (HasNby) {
      output.WriteRawTag(40);
      output.WriteUInt32(Nby);
    }
    if (HasGrp) {
      output.WriteRawTag(48);
      output.WriteUInt32(Grp);
    }
    if (HasSlots) {
      output.WriteRawTag(56);
      output.WriteUInt32(Slots);
    }
    if (HasLauncher) {
      output.WriteRawTag(64);
      output.WriteUInt32(Launcher);
    }
    if (HasGameType) {
      output.WriteRawTag(72);
      output.WriteUInt32(GameType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    if (HasVer) {
      output.WriteRawTag(16);
      output.WriteUInt32(Ver);
    }
    if (HasApr) {
      output.WriteRawTag(24);
      output.WriteUInt32(Apr);
    }
    if (HasArk) {
      output.WriteRawTag(32);
      output.WriteUInt32(Ark);
    }
    if (HasNby) {
      output.WriteRawTag(40);
      output.WriteUInt32(Nby);
    }
    if (HasGrp) {
      output.WriteRawTag(48);
      output.WriteUInt32(Grp);
    }
    if (HasSlots) {
      output.WriteRawTag(56);
      output.WriteUInt32(Slots);
    }
    if (HasLauncher) {
      output.WriteRawTag(64);
      output.WriteUInt32(Launcher);
    }
    if (HasGameType) {
      output.WriteRawTag(72);
      output.WriteUInt32(GameType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
    }
    if (HasVer) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
    }
    if (HasApr) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Apr);
    }
    if (HasArk) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ark);
    }
    if (HasNby) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nby);
    }
    if (HasGrp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Grp);
    }
    if (HasSlots) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Slots);
    }
    if (HasLauncher) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Launcher);
    }
    if (HasGameType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Party_Register other) {
    if (other == null) {
      return;
    }
    if (other.HasId) {
      Id = other.Id;
    }
    if (other.HasVer) {
      Ver = other.Ver;
    }
    if (other.HasApr) {
      Apr = other.Apr;
    }
    if (other.HasArk) {
      Ark = other.Ark;
    }
    if (other.HasNby) {
      Nby = other.Nby;
    }
    if (other.HasGrp) {
      Grp = other.Grp;
    }
    if (other.HasSlots) {
      Slots = other.Slots;
    }
    if (other.HasLauncher) {
      Launcher = other.Launcher;
    }
    if (other.HasGameType) {
      GameType = other.GameType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 16: {
          Ver = input.ReadUInt32();
          break;
        }
        case 24: {
          Apr = input.ReadUInt32();
          break;
        }
        case 32: {
          Ark = input.ReadUInt32();
          break;
        }
        case 40: {
          Nby = input.ReadUInt32();
          break;
        }
        case 48: {
          Grp = input.ReadUInt32();
          break;
        }
        case 56: {
          Slots = input.ReadUInt32();
          break;
        }
        case 64: {
          Launcher = input.ReadUInt32();
          break;
        }
        case 72: {
          GameType = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 16: {
          Ver = input.ReadUInt32();
          break;
        }
        case 24: {
          Apr = input.ReadUInt32();
          break;
        }
        case 32: {
          Ark = input.ReadUInt32();
          break;
        }
        case 40: {
          Nby = input.ReadUInt32();
          break;
        }
        case 48: {
          Grp = input.ReadUInt32();
          break;
        }
        case 56: {
          Slots = input.ReadUInt32();
          break;
        }
        case 64: {
          Launcher = input.ReadUInt32();
          break;
        }
        case 72: {
          GameType = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Party_Search : pb::IMessage<CMsgGCCStrike15_v2_Party_Search>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Party_Search> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Party_Search>(() => new CMsgGCCStrike15_v2_Party_Search());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Party_Search> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[132]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Search() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Search(CMsgGCCStrike15_v2_Party_Search other) : this() {
    _hasBits0 = other._hasBits0;
    ver_ = other.ver_;
    apr_ = other.apr_;
    ark_ = other.ark_;
    grps_ = other.grps_.Clone();
    launcher_ = other.launcher_;
    gameType_ = other.gameType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Search Clone() {
    return new CMsgGCCStrike15_v2_Party_Search(this);
  }

  /// <summary>Field number for the "ver" field.</summary>
  public const int VerFieldNumber = 1;
  private readonly static uint VerDefaultValue = 0;

  private uint ver_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ver {
    get { if ((_hasBits0 & 1) != 0) { return ver_; } else { return VerDefaultValue; } }
    set {
      _hasBits0 |= 1;
      ver_ = value;
    }
  }
  /// <summary>Gets whether the "ver" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVer {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ver" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVer() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "apr" field.</summary>
  public const int AprFieldNumber = 2;
  private readonly static uint AprDefaultValue = 0;

  private uint apr_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Apr {
    get { if ((_hasBits0 & 2) != 0) { return apr_; } else { return AprDefaultValue; } }
    set {
      _hasBits0 |= 2;
      apr_ = value;
    }
  }
  /// <summary>Gets whether the "apr" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasApr {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "apr" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearApr() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ark" field.</summary>
  public const int ArkFieldNumber = 3;
  private readonly static uint ArkDefaultValue = 0;

  private uint ark_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ark {
    get { if ((_hasBits0 & 4) != 0) { return ark_; } else { return ArkDefaultValue; } }
    set {
      _hasBits0 |= 4;
      ark_ = value;
    }
  }
  /// <summary>Gets whether the "ark" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasArk {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "ark" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearArk() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "grps" field.</summary>
  public const int GrpsFieldNumber = 4;
  private static readonly pb::FieldCodec<uint> _repeated_grps_codec
      = pb::FieldCodec.ForUInt32(32);
  private readonly pbc::RepeatedField<uint> grps_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> Grps {
    get { return grps_; }
  }

  /// <summary>Field number for the "launcher" field.</summary>
  public const int LauncherFieldNumber = 5;
  private readonly static uint LauncherDefaultValue = 0;

  private uint launcher_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Launcher {
    get { if ((_hasBits0 & 8) != 0) { return launcher_; } else { return LauncherDefaultValue; } }
    set {
      _hasBits0 |= 8;
      launcher_ = value;
    }
  }
  /// <summary>Gets whether the "launcher" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLauncher {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "launcher" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLauncher() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "game_type" field.</summary>
  public const int GameTypeFieldNumber = 6;
  private readonly static uint GameTypeDefaultValue = 0;

  private uint gameType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameType {
    get { if ((_hasBits0 & 16) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      gameType_ = value;
    }
  }
  /// <summary>Gets whether the "game_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameType {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "game_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameType() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Party_Search);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Party_Search other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ver != other.Ver) return false;
    if (Apr != other.Apr) return false;
    if (Ark != other.Ark) return false;
    if(!grps_.Equals(other.grps_)) return false;
    if (Launcher != other.Launcher) return false;
    if (GameType != other.GameType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVer) hash ^= Ver.GetHashCode();
    if (HasApr) hash ^= Apr.GetHashCode();
    if (HasArk) hash ^= Ark.GetHashCode();
    hash ^= grps_.GetHashCode();
    if (HasLauncher) hash ^= Launcher.GetHashCode();
    if (HasGameType) hash ^= GameType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVer) {
      output.WriteRawTag(8);
      output.WriteUInt32(Ver);
    }
    if (HasApr) {
      output.WriteRawTag(16);
      output.WriteUInt32(Apr);
    }
    if (HasArk) {
      output.WriteRawTag(24);
      output.WriteUInt32(Ark);
    }
    grps_.WriteTo(output, _repeated_grps_codec);
    if (HasLauncher) {
      output.WriteRawTag(40);
      output.WriteUInt32(Launcher);
    }
    if (HasGameType) {
      output.WriteRawTag(48);
      output.WriteUInt32(GameType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVer) {
      output.WriteRawTag(8);
      output.WriteUInt32(Ver);
    }
    if (HasApr) {
      output.WriteRawTag(16);
      output.WriteUInt32(Apr);
    }
    if (HasArk) {
      output.WriteRawTag(24);
      output.WriteUInt32(Ark);
    }
    grps_.WriteTo(ref output, _repeated_grps_codec);
    if (HasLauncher) {
      output.WriteRawTag(40);
      output.WriteUInt32(Launcher);
    }
    if (HasGameType) {
      output.WriteRawTag(48);
      output.WriteUInt32(GameType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVer) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
    }
    if (HasApr) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Apr);
    }
    if (HasArk) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ark);
    }
    size += grps_.CalculateSize(_repeated_grps_codec);
    if (HasLauncher) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Launcher);
    }
    if (HasGameType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Party_Search other) {
    if (other == null) {
      return;
    }
    if (other.HasVer) {
      Ver = other.Ver;
    }
    if (other.HasApr) {
      Apr = other.Apr;
    }
    if (other.HasArk) {
      Ark = other.Ark;
    }
    grps_.Add(other.grps_);
    if (other.HasLauncher) {
      Launcher = other.Launcher;
    }
    if (other.HasGameType) {
      GameType = other.GameType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ver = input.ReadUInt32();
          break;
        }
        case 16: {
          Apr = input.ReadUInt32();
          break;
        }
        case 24: {
          Ark = input.ReadUInt32();
          break;
        }
        case 34:
        case 32: {
          grps_.AddEntriesFrom(input, _repeated_grps_codec);
          break;
        }
        case 40: {
          Launcher = input.ReadUInt32();
          break;
        }
        case 48: {
          GameType = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ver = input.ReadUInt32();
          break;
        }
        case 16: {
          Apr = input.ReadUInt32();
          break;
        }
        case 24: {
          Ark = input.ReadUInt32();
          break;
        }
        case 34:
        case 32: {
          grps_.AddEntriesFrom(ref input, _repeated_grps_codec);
          break;
        }
        case 40: {
          Launcher = input.ReadUInt32();
          break;
        }
        case 48: {
          GameType = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Party_SearchResults : pb::IMessage<CMsgGCCStrike15_v2_Party_SearchResults>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Party_SearchResults> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Party_SearchResults>(() => new CMsgGCCStrike15_v2_Party_SearchResults());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Party_SearchResults> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[133]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_SearchResults() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_SearchResults(CMsgGCCStrike15_v2_Party_SearchResults other) : this() {
    entries_ = other.entries_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_SearchResults Clone() {
    return new CMsgGCCStrike15_v2_Party_SearchResults(this);
  }

  /// <summary>Field number for the "entries" field.</summary>
  public const int EntriesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_Party_SearchResults.Types.Entry> _repeated_entries_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgGCCStrike15_v2_Party_SearchResults.Types.Entry.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_Party_SearchResults.Types.Entry> entries_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_Party_SearchResults.Types.Entry>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_Party_SearchResults.Types.Entry> Entries {
    get { return entries_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Party_SearchResults);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Party_SearchResults other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!entries_.Equals(other.entries_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= entries_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    entries_.WriteTo(output, _repeated_entries_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    entries_.WriteTo(ref output, _repeated_entries_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += entries_.CalculateSize(_repeated_entries_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Party_SearchResults other) {
    if (other == null) {
      return;
    }
    entries_.Add(other.entries_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          entries_.AddEntriesFrom(input, _repeated_entries_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_Party_SearchResults message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Entry : pb::IMessage<Entry>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Entry> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_Party_SearchResults.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry(Entry other) : this() {
        _hasBits0 = other._hasBits0;
        id_ = other.id_;
        grp_ = other.grp_;
        gameType_ = other.gameType_;
        apr_ = other.apr_;
        ark_ = other.ark_;
        loc_ = other.loc_;
        accountid_ = other.accountid_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry Clone() {
        return new Entry(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private readonly static uint IdDefaultValue = 0;

      private uint id_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Id {
        get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          id_ = value;
        }
      }
      /// <summary>Gets whether the "id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "grp" field.</summary>
      public const int GrpFieldNumber = 2;
      private readonly static uint GrpDefaultValue = 0;

      private uint grp_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Grp {
        get { if ((_hasBits0 & 2) != 0) { return grp_; } else { return GrpDefaultValue; } }
        set {
          _hasBits0 |= 2;
          grp_ = value;
        }
      }
      /// <summary>Gets whether the "grp" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGrp {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "grp" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGrp() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "game_type" field.</summary>
      public const int GameTypeFieldNumber = 3;
      private readonly static uint GameTypeDefaultValue = 0;

      private uint gameType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GameType {
        get { if ((_hasBits0 & 4) != 0) { return gameType_; } else { return GameTypeDefaultValue; } }
        set {
          _hasBits0 |= 4;
          gameType_ = value;
        }
      }
      /// <summary>Gets whether the "game_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameType {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "game_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameType() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "apr" field.</summary>
      public const int AprFieldNumber = 4;
      private readonly static uint AprDefaultValue = 0;

      private uint apr_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Apr {
        get { if ((_hasBits0 & 8) != 0) { return apr_; } else { return AprDefaultValue; } }
        set {
          _hasBits0 |= 8;
          apr_ = value;
        }
      }
      /// <summary>Gets whether the "apr" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasApr {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "apr" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearApr() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "ark" field.</summary>
      public const int ArkFieldNumber = 5;
      private readonly static uint ArkDefaultValue = 0;

      private uint ark_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Ark {
        get { if ((_hasBits0 & 16) != 0) { return ark_; } else { return ArkDefaultValue; } }
        set {
          _hasBits0 |= 16;
          ark_ = value;
        }
      }
      /// <summary>Gets whether the "ark" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasArk {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "ark" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearArk() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "loc" field.</summary>
      public const int LocFieldNumber = 6;
      private readonly static uint LocDefaultValue = 0;

      private uint loc_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Loc {
        get { if ((_hasBits0 & 32) != 0) { return loc_; } else { return LocDefaultValue; } }
        set {
          _hasBits0 |= 32;
          loc_ = value;
        }
      }
      /// <summary>Gets whether the "loc" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLoc {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "loc" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLoc() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "accountid" field.</summary>
      public const int AccountidFieldNumber = 7;
      private readonly static uint AccountidDefaultValue = 0;

      private uint accountid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Accountid {
        get { if ((_hasBits0 & 64) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
        set {
          _hasBits0 |= 64;
          accountid_ = value;
        }
      }
      /// <summary>Gets whether the "accountid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountid {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "accountid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountid() {
        _hasBits0 &= ~64;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Entry);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Entry other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (Grp != other.Grp) return false;
        if (GameType != other.GameType) return false;
        if (Apr != other.Apr) return false;
        if (Ark != other.Ark) return false;
        if (Loc != other.Loc) return false;
        if (Accountid != other.Accountid) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasId) hash ^= Id.GetHashCode();
        if (HasGrp) hash ^= Grp.GetHashCode();
        if (HasGameType) hash ^= GameType.GetHashCode();
        if (HasApr) hash ^= Apr.GetHashCode();
        if (HasArk) hash ^= Ark.GetHashCode();
        if (HasLoc) hash ^= Loc.GetHashCode();
        if (HasAccountid) hash ^= Accountid.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasId) {
          output.WriteRawTag(8);
          output.WriteUInt32(Id);
        }
        if (HasGrp) {
          output.WriteRawTag(16);
          output.WriteUInt32(Grp);
        }
        if (HasGameType) {
          output.WriteRawTag(24);
          output.WriteUInt32(GameType);
        }
        if (HasApr) {
          output.WriteRawTag(32);
          output.WriteUInt32(Apr);
        }
        if (HasArk) {
          output.WriteRawTag(40);
          output.WriteUInt32(Ark);
        }
        if (HasLoc) {
          output.WriteRawTag(48);
          output.WriteUInt32(Loc);
        }
        if (HasAccountid) {
          output.WriteRawTag(56);
          output.WriteUInt32(Accountid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasId) {
          output.WriteRawTag(8);
          output.WriteUInt32(Id);
        }
        if (HasGrp) {
          output.WriteRawTag(16);
          output.WriteUInt32(Grp);
        }
        if (HasGameType) {
          output.WriteRawTag(24);
          output.WriteUInt32(GameType);
        }
        if (HasApr) {
          output.WriteRawTag(32);
          output.WriteUInt32(Apr);
        }
        if (HasArk) {
          output.WriteRawTag(40);
          output.WriteUInt32(Ark);
        }
        if (HasLoc) {
          output.WriteRawTag(48);
          output.WriteUInt32(Loc);
        }
        if (HasAccountid) {
          output.WriteRawTag(56);
          output.WriteUInt32(Accountid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
        }
        if (HasGrp) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Grp);
        }
        if (HasGameType) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameType);
        }
        if (HasApr) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Apr);
        }
        if (HasArk) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ark);
        }
        if (HasLoc) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Loc);
        }
        if (HasAccountid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Entry other) {
        if (other == null) {
          return;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasGrp) {
          Grp = other.Grp;
        }
        if (other.HasGameType) {
          GameType = other.GameType;
        }
        if (other.HasApr) {
          Apr = other.Apr;
        }
        if (other.HasArk) {
          Ark = other.Ark;
        }
        if (other.HasLoc) {
          Loc = other.Loc;
        }
        if (other.HasAccountid) {
          Accountid = other.Accountid;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadUInt32();
              break;
            }
            case 16: {
              Grp = input.ReadUInt32();
              break;
            }
            case 24: {
              GameType = input.ReadUInt32();
              break;
            }
            case 32: {
              Apr = input.ReadUInt32();
              break;
            }
            case 40: {
              Ark = input.ReadUInt32();
              break;
            }
            case 48: {
              Loc = input.ReadUInt32();
              break;
            }
            case 56: {
              Accountid = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Id = input.ReadUInt32();
              break;
            }
            case 16: {
              Grp = input.ReadUInt32();
              break;
            }
            case 24: {
              GameType = input.ReadUInt32();
              break;
            }
            case 32: {
              Apr = input.ReadUInt32();
              break;
            }
            case 40: {
              Ark = input.ReadUInt32();
              break;
            }
            case 48: {
              Loc = input.ReadUInt32();
              break;
            }
            case 56: {
              Accountid = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_Party_Invite : pb::IMessage<CMsgGCCStrike15_v2_Party_Invite>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Party_Invite> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Party_Invite>(() => new CMsgGCCStrike15_v2_Party_Invite());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Party_Invite> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[134]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Invite() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Invite(CMsgGCCStrike15_v2_Party_Invite other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    lobbyid_ = other.lobbyid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Party_Invite Clone() {
    return new CMsgGCCStrike15_v2_Party_Invite(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "lobbyid" field.</summary>
  public const int LobbyidFieldNumber = 2;
  private readonly static uint LobbyidDefaultValue = 0;

  private uint lobbyid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Lobbyid {
    get { if ((_hasBits0 & 2) != 0) { return lobbyid_; } else { return LobbyidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      lobbyid_ = value;
    }
  }
  /// <summary>Gets whether the "lobbyid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLobbyid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "lobbyid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLobbyid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Party_Invite);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Party_Invite other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    if (Lobbyid != other.Lobbyid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasLobbyid) hash ^= Lobbyid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasLobbyid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Lobbyid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasLobbyid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Lobbyid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasLobbyid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Lobbyid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Party_Invite other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasLobbyid) {
      Lobbyid = other.Lobbyid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          Lobbyid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          Lobbyid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_Account_RequestCoPlays : pb::IMessage<CMsgGCCStrike15_v2_Account_RequestCoPlays>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_Account_RequestCoPlays> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_Account_RequestCoPlays>(() => new CMsgGCCStrike15_v2_Account_RequestCoPlays());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_Account_RequestCoPlays> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[135]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Account_RequestCoPlays() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Account_RequestCoPlays(CMsgGCCStrike15_v2_Account_RequestCoPlays other) : this() {
    _hasBits0 = other._hasBits0;
    players_ = other.players_.Clone();
    servertime_ = other.servertime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_Account_RequestCoPlays Clone() {
    return new CMsgGCCStrike15_v2_Account_RequestCoPlays(this);
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Types.Player> _repeated_players_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Types.Player.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Types.Player> players_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Types.Player>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Types.Player> Players {
    get { return players_; }
  }

  /// <summary>Field number for the "servertime" field.</summary>
  public const int ServertimeFieldNumber = 2;
  private readonly static uint ServertimeDefaultValue = 0;

  private uint servertime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Servertime {
    get { if ((_hasBits0 & 1) != 0) { return servertime_; } else { return ServertimeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      servertime_ = value;
    }
  }
  /// <summary>Gets whether the "servertime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServertime {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "servertime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServertime() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_Account_RequestCoPlays);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_Account_RequestCoPlays other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!players_.Equals(other.players_)) return false;
    if (Servertime != other.Servertime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= players_.GetHashCode();
    if (HasServertime) hash ^= Servertime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    players_.WriteTo(output, _repeated_players_codec);
    if (HasServertime) {
      output.WriteRawTag(16);
      output.WriteUInt32(Servertime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    players_.WriteTo(ref output, _repeated_players_codec);
    if (HasServertime) {
      output.WriteRawTag(16);
      output.WriteUInt32(Servertime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += players_.CalculateSize(_repeated_players_codec);
    if (HasServertime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Servertime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_Account_RequestCoPlays other) {
    if (other == null) {
      return;
    }
    players_.Add(other.players_);
    if (other.HasServertime) {
      Servertime = other.Servertime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
        case 16: {
          Servertime = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          players_.AddEntriesFrom(ref input, _repeated_players_codec);
          break;
        }
        case 16: {
          Servertime = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_Account_RequestCoPlays message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Player : pb::IMessage<Player>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Player> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_Account_RequestCoPlays.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Player() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Player(Player other) : this() {
        _hasBits0 = other._hasBits0;
        accountid_ = other.accountid_;
        rtcoplay_ = other.rtcoplay_;
        online_ = other.online_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Player Clone() {
        return new Player(this);
      }

      /// <summary>Field number for the "accountid" field.</summary>
      public const int AccountidFieldNumber = 1;
      private readonly static uint AccountidDefaultValue = 0;

      private uint accountid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Accountid {
        get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountid_ = value;
        }
      }
      /// <summary>Gets whether the "accountid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "accountid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "rtcoplay" field.</summary>
      public const int RtcoplayFieldNumber = 2;
      private readonly static uint RtcoplayDefaultValue = 0;

      private uint rtcoplay_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Rtcoplay {
        get { if ((_hasBits0 & 2) != 0) { return rtcoplay_; } else { return RtcoplayDefaultValue; } }
        set {
          _hasBits0 |= 2;
          rtcoplay_ = value;
        }
      }
      /// <summary>Gets whether the "rtcoplay" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRtcoplay {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "rtcoplay" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRtcoplay() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "online" field.</summary>
      public const int OnlineFieldNumber = 3;
      private readonly static bool OnlineDefaultValue = false;

      private bool online_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Online {
        get { if ((_hasBits0 & 4) != 0) { return online_; } else { return OnlineDefaultValue; } }
        set {
          _hasBits0 |= 4;
          online_ = value;
        }
      }
      /// <summary>Gets whether the "online" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOnline {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "online" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOnline() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Player);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Player other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Accountid != other.Accountid) return false;
        if (Rtcoplay != other.Rtcoplay) return false;
        if (Online != other.Online) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountid) hash ^= Accountid.GetHashCode();
        if (HasRtcoplay) hash ^= Rtcoplay.GetHashCode();
        if (HasOnline) hash ^= Online.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Accountid);
        }
        if (HasRtcoplay) {
          output.WriteRawTag(16);
          output.WriteUInt32(Rtcoplay);
        }
        if (HasOnline) {
          output.WriteRawTag(24);
          output.WriteBool(Online);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Accountid);
        }
        if (HasRtcoplay) {
          output.WriteRawTag(16);
          output.WriteUInt32(Rtcoplay);
        }
        if (HasOnline) {
          output.WriteRawTag(24);
          output.WriteBool(Online);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
        }
        if (HasRtcoplay) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtcoplay);
        }
        if (HasOnline) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Player other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountid) {
          Accountid = other.Accountid;
        }
        if (other.HasRtcoplay) {
          Rtcoplay = other.Rtcoplay;
        }
        if (other.HasOnline) {
          Online = other.Online;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Accountid = input.ReadUInt32();
              break;
            }
            case 16: {
              Rtcoplay = input.ReadUInt32();
              break;
            }
            case 24: {
              Online = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Accountid = input.ReadUInt32();
              break;
            }
            case 16: {
              Rtcoplay = input.ReadUInt32();
              break;
            }
            case 24: {
              Online = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_ClientToGCRequestTicket : pb::IMessage<CMsgGCCStrike15_v2_ClientToGCRequestTicket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCRequestTicket> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCRequestTicket>(() => new CMsgGCCStrike15_v2_ClientToGCRequestTicket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientToGCRequestTicket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[136]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCRequestTicket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCRequestTicket(CMsgGCCStrike15_v2_ClientToGCRequestTicket other) : this() {
    _hasBits0 = other._hasBits0;
    authorizedSteamId_ = other.authorizedSteamId_;
    authorizedPublicIp_ = other.authorizedPublicIp_;
    gameserverSteamId_ = other.gameserverSteamId_;
    gameserverSdrRouting_ = other.gameserverSdrRouting_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientToGCRequestTicket Clone() {
    return new CMsgGCCStrike15_v2_ClientToGCRequestTicket(this);
  }

  /// <summary>Field number for the "authorized_steam_id" field.</summary>
  public const int AuthorizedSteamIdFieldNumber = 1;
  private readonly static ulong AuthorizedSteamIdDefaultValue = 0UL;

  private ulong authorizedSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AuthorizedSteamId {
    get { if ((_hasBits0 & 1) != 0) { return authorizedSteamId_; } else { return AuthorizedSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      authorizedSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "authorized_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthorizedSteamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "authorized_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthorizedSteamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "authorized_public_ip" field.</summary>
  public const int AuthorizedPublicIpFieldNumber = 2;
  private readonly static uint AuthorizedPublicIpDefaultValue = 0;

  private uint authorizedPublicIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AuthorizedPublicIp {
    get { if ((_hasBits0 & 2) != 0) { return authorizedPublicIp_; } else { return AuthorizedPublicIpDefaultValue; } }
    set {
      _hasBits0 |= 2;
      authorizedPublicIp_ = value;
    }
  }
  /// <summary>Gets whether the "authorized_public_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthorizedPublicIp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "authorized_public_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthorizedPublicIp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "gameserver_steam_id" field.</summary>
  public const int GameserverSteamIdFieldNumber = 3;
  private readonly static ulong GameserverSteamIdDefaultValue = 0UL;

  private ulong gameserverSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong GameserverSteamId {
    get { if ((_hasBits0 & 4) != 0) { return gameserverSteamId_; } else { return GameserverSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      gameserverSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "gameserver_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameserverSteamId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "gameserver_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameserverSteamId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "gameserver_sdr_routing" field.</summary>
  public const int GameserverSdrRoutingFieldNumber = 5;
  private readonly static string GameserverSdrRoutingDefaultValue = "";

  private string gameserverSdrRouting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameserverSdrRouting {
    get { return gameserverSdrRouting_ ?? GameserverSdrRoutingDefaultValue; }
    set {
      gameserverSdrRouting_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "gameserver_sdr_routing" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameserverSdrRouting {
    get { return gameserverSdrRouting_ != null; }
  }
  /// <summary>Clears the value of the "gameserver_sdr_routing" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameserverSdrRouting() {
    gameserverSdrRouting_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientToGCRequestTicket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientToGCRequestTicket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AuthorizedSteamId != other.AuthorizedSteamId) return false;
    if (AuthorizedPublicIp != other.AuthorizedPublicIp) return false;
    if (GameserverSteamId != other.GameserverSteamId) return false;
    if (GameserverSdrRouting != other.GameserverSdrRouting) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAuthorizedSteamId) hash ^= AuthorizedSteamId.GetHashCode();
    if (HasAuthorizedPublicIp) hash ^= AuthorizedPublicIp.GetHashCode();
    if (HasGameserverSteamId) hash ^= GameserverSteamId.GetHashCode();
    if (HasGameserverSdrRouting) hash ^= GameserverSdrRouting.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAuthorizedSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(AuthorizedSteamId);
    }
    if (HasAuthorizedPublicIp) {
      output.WriteRawTag(21);
      output.WriteFixed32(AuthorizedPublicIp);
    }
    if (HasGameserverSteamId) {
      output.WriteRawTag(25);
      output.WriteFixed64(GameserverSteamId);
    }
    if (HasGameserverSdrRouting) {
      output.WriteRawTag(42);
      output.WriteString(GameserverSdrRouting);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAuthorizedSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(AuthorizedSteamId);
    }
    if (HasAuthorizedPublicIp) {
      output.WriteRawTag(21);
      output.WriteFixed32(AuthorizedPublicIp);
    }
    if (HasGameserverSteamId) {
      output.WriteRawTag(25);
      output.WriteFixed64(GameserverSteamId);
    }
    if (HasGameserverSdrRouting) {
      output.WriteRawTag(42);
      output.WriteString(GameserverSdrRouting);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAuthorizedSteamId) {
      size += 1 + 8;
    }
    if (HasAuthorizedPublicIp) {
      size += 1 + 4;
    }
    if (HasGameserverSteamId) {
      size += 1 + 8;
    }
    if (HasGameserverSdrRouting) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameserverSdrRouting);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientToGCRequestTicket other) {
    if (other == null) {
      return;
    }
    if (other.HasAuthorizedSteamId) {
      AuthorizedSteamId = other.AuthorizedSteamId;
    }
    if (other.HasAuthorizedPublicIp) {
      AuthorizedPublicIp = other.AuthorizedPublicIp;
    }
    if (other.HasGameserverSteamId) {
      GameserverSteamId = other.GameserverSteamId;
    }
    if (other.HasGameserverSdrRouting) {
      GameserverSdrRouting = other.GameserverSdrRouting;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          AuthorizedSteamId = input.ReadFixed64();
          break;
        }
        case 21: {
          AuthorizedPublicIp = input.ReadFixed32();
          break;
        }
        case 25: {
          GameserverSteamId = input.ReadFixed64();
          break;
        }
        case 42: {
          GameserverSdrRouting = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          AuthorizedSteamId = input.ReadFixed64();
          break;
        }
        case 21: {
          AuthorizedPublicIp = input.ReadFixed32();
          break;
        }
        case 25: {
          GameserverSteamId = input.ReadFixed64();
          break;
        }
        case 42: {
          GameserverSdrRouting = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCToClientSteamDatagramTicket : pb::IMessage<CMsgGCToClientSteamDatagramTicket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCToClientSteamDatagramTicket> _parser = new pb::MessageParser<CMsgGCToClientSteamDatagramTicket>(() => new CMsgGCToClientSteamDatagramTicket());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCToClientSteamDatagramTicket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[137]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCToClientSteamDatagramTicket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCToClientSteamDatagramTicket(CMsgGCToClientSteamDatagramTicket other) : this() {
    serializedTicket_ = other.serializedTicket_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCToClientSteamDatagramTicket Clone() {
    return new CMsgGCToClientSteamDatagramTicket(this);
  }

  /// <summary>Field number for the "serialized_ticket" field.</summary>
  public const int SerializedTicketFieldNumber = 16;
  private readonly static pb::ByteString SerializedTicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString serializedTicket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString SerializedTicket {
    get { return serializedTicket_ ?? SerializedTicketDefaultValue; }
    set {
      serializedTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serialized_ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerializedTicket {
    get { return serializedTicket_ != null; }
  }
  /// <summary>Clears the value of the "serialized_ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerializedTicket() {
    serializedTicket_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCToClientSteamDatagramTicket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCToClientSteamDatagramTicket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerializedTicket != other.SerializedTicket) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerializedTicket) hash ^= SerializedTicket.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerializedTicket) {
      output.WriteRawTag(130, 1);
      output.WriteBytes(SerializedTicket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerializedTicket) {
      output.WriteRawTag(130, 1);
      output.WriteBytes(SerializedTicket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerializedTicket) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(SerializedTicket);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCToClientSteamDatagramTicket other) {
    if (other == null) {
      return;
    }
    if (other.HasSerializedTicket) {
      SerializedTicket = other.SerializedTicket;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 130: {
          SerializedTicket = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 130: {
          SerializedTicket = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientRequestOffers : pb::IMessage<CMsgGCCStrike15_v2_ClientRequestOffers>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestOffers> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestOffers>(() => new CMsgGCCStrike15_v2_ClientRequestOffers());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestOffers> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[138]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestOffers() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestOffers(CMsgGCCStrike15_v2_ClientRequestOffers other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestOffers Clone() {
    return new CMsgGCCStrike15_v2_ClientRequestOffers(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientRequestOffers);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientRequestOffers other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientRequestOffers other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientRequestSouvenir : pb::IMessage<CMsgGCCStrike15_v2_ClientRequestSouvenir>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestSouvenir> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestSouvenir>(() => new CMsgGCCStrike15_v2_ClientRequestSouvenir());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientRequestSouvenir> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[139]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestSouvenir() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestSouvenir(CMsgGCCStrike15_v2_ClientRequestSouvenir other) : this() {
    _hasBits0 = other._hasBits0;
    itemid_ = other.itemid_;
    matchid_ = other.matchid_;
    eventid_ = other.eventid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientRequestSouvenir Clone() {
    return new CMsgGCCStrike15_v2_ClientRequestSouvenir(this);
  }

  /// <summary>Field number for the "itemid" field.</summary>
  public const int ItemidFieldNumber = 1;
  private readonly static ulong ItemidDefaultValue = 0UL;

  private ulong itemid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Itemid {
    get { if ((_hasBits0 & 1) != 0) { return itemid_; } else { return ItemidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      itemid_ = value;
    }
  }
  /// <summary>Gets whether the "itemid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasItemid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "itemid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearItemid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "matchid" field.</summary>
  public const int MatchidFieldNumber = 2;
  private readonly static ulong MatchidDefaultValue = 0UL;

  private ulong matchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Matchid {
    get { if ((_hasBits0 & 2) != 0) { return matchid_; } else { return MatchidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchid_ = value;
    }
  }
  /// <summary>Gets whether the "matchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "matchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "eventid" field.</summary>
  public const int EventidFieldNumber = 3;
  private readonly static int EventidDefaultValue = 0;

  private int eventid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eventid {
    get { if ((_hasBits0 & 4) != 0) { return eventid_; } else { return EventidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      eventid_ = value;
    }
  }
  /// <summary>Gets whether the "eventid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "eventid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventid() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientRequestSouvenir);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientRequestSouvenir other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Itemid != other.Itemid) return false;
    if (Matchid != other.Matchid) return false;
    if (Eventid != other.Eventid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasItemid) hash ^= Itemid.GetHashCode();
    if (HasMatchid) hash ^= Matchid.GetHashCode();
    if (HasEventid) hash ^= Eventid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasItemid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Itemid);
    }
    if (HasMatchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Matchid);
    }
    if (HasEventid) {
      output.WriteRawTag(24);
      output.WriteInt32(Eventid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasItemid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Itemid);
    }
    if (HasMatchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Matchid);
    }
    if (HasEventid) {
      output.WriteRawTag(24);
      output.WriteInt32(Eventid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasItemid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Itemid);
    }
    if (HasMatchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Matchid);
    }
    if (HasEventid) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eventid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientRequestSouvenir other) {
    if (other == null) {
      return;
    }
    if (other.HasItemid) {
      Itemid = other.Itemid;
    }
    if (other.HasMatchid) {
      Matchid = other.Matchid;
    }
    if (other.HasEventid) {
      Eventid = other.Eventid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Itemid = input.ReadUInt64();
          break;
        }
        case 16: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 24: {
          Eventid = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Itemid = input.ReadUInt64();
          break;
        }
        case 16: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 24: {
          Eventid = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientAccountBalance : pb::IMessage<CMsgGCCStrike15_v2_ClientAccountBalance>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientAccountBalance> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientAccountBalance>(() => new CMsgGCCStrike15_v2_ClientAccountBalance());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientAccountBalance> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[140]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientAccountBalance() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientAccountBalance(CMsgGCCStrike15_v2_ClientAccountBalance other) : this() {
    _hasBits0 = other._hasBits0;
    amount_ = other.amount_;
    url_ = other.url_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientAccountBalance Clone() {
    return new CMsgGCCStrike15_v2_ClientAccountBalance(this);
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 1;
  private readonly static ulong AmountDefaultValue = 0UL;

  private ulong amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Amount {
    get { if ((_hasBits0 & 1) != 0) { return amount_; } else { return AmountDefaultValue; } }
    set {
      _hasBits0 |= 1;
      amount_ = value;
    }
  }
  /// <summary>Gets whether the "amount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAmount {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "amount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAmount() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "url" field.</summary>
  public const int UrlFieldNumber = 2;
  private readonly static string UrlDefaultValue = "";

  private string url_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Url {
    get { return url_ ?? UrlDefaultValue; }
    set {
      url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "url" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUrl {
    get { return url_ != null; }
  }
  /// <summary>Clears the value of the "url" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUrl() {
    url_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientAccountBalance);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientAccountBalance other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Amount != other.Amount) return false;
    if (Url != other.Url) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAmount) hash ^= Amount.GetHashCode();
    if (HasUrl) hash ^= Url.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAmount) {
      output.WriteRawTag(8);
      output.WriteUInt64(Amount);
    }
    if (HasUrl) {
      output.WriteRawTag(18);
      output.WriteString(Url);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAmount) {
      output.WriteRawTag(8);
      output.WriteUInt64(Amount);
    }
    if (HasUrl) {
      output.WriteRawTag(18);
      output.WriteString(Url);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAmount) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
    }
    if (HasUrl) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientAccountBalance other) {
    if (other == null) {
      return;
    }
    if (other.HasAmount) {
      Amount = other.Amount;
    }
    if (other.HasUrl) {
      Url = other.Url;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Amount = input.ReadUInt64();
          break;
        }
        case 18: {
          Url = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Amount = input.ReadUInt64();
          break;
        }
        case 18: {
          Url = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientPartyJoinRelay : pb::IMessage<CMsgGCCStrike15_v2_ClientPartyJoinRelay>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientPartyJoinRelay> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientPartyJoinRelay>(() => new CMsgGCCStrike15_v2_ClientPartyJoinRelay());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientPartyJoinRelay> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[141]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPartyJoinRelay() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPartyJoinRelay(CMsgGCCStrike15_v2_ClientPartyJoinRelay other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    lobbyid_ = other.lobbyid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPartyJoinRelay Clone() {
    return new CMsgGCCStrike15_v2_ClientPartyJoinRelay(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "lobbyid" field.</summary>
  public const int LobbyidFieldNumber = 2;
  private readonly static ulong LobbyidDefaultValue = 0UL;

  private ulong lobbyid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Lobbyid {
    get { if ((_hasBits0 & 2) != 0) { return lobbyid_; } else { return LobbyidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      lobbyid_ = value;
    }
  }
  /// <summary>Gets whether the "lobbyid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLobbyid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "lobbyid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLobbyid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientPartyJoinRelay);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientPartyJoinRelay other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    if (Lobbyid != other.Lobbyid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasLobbyid) hash ^= Lobbyid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasLobbyid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Lobbyid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasLobbyid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Lobbyid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasLobbyid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Lobbyid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientPartyJoinRelay other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasLobbyid) {
      Lobbyid = other.Lobbyid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          Lobbyid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          Lobbyid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientPartyWarning : pb::IMessage<CMsgGCCStrike15_v2_ClientPartyWarning>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientPartyWarning> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientPartyWarning>(() => new CMsgGCCStrike15_v2_ClientPartyWarning());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientPartyWarning> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[142]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPartyWarning() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPartyWarning(CMsgGCCStrike15_v2_ClientPartyWarning other) : this() {
    entries_ = other.entries_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPartyWarning Clone() {
    return new CMsgGCCStrike15_v2_ClientPartyWarning(this);
  }

  /// <summary>Field number for the "entries" field.</summary>
  public const int EntriesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_ClientPartyWarning.Types.Entry> _repeated_entries_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgGCCStrike15_v2_ClientPartyWarning.Types.Entry.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_ClientPartyWarning.Types.Entry> entries_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_ClientPartyWarning.Types.Entry>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_ClientPartyWarning.Types.Entry> Entries {
    get { return entries_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientPartyWarning);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientPartyWarning other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!entries_.Equals(other.entries_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= entries_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    entries_.WriteTo(output, _repeated_entries_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    entries_.WriteTo(ref output, _repeated_entries_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += entries_.CalculateSize(_repeated_entries_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientPartyWarning other) {
    if (other == null) {
      return;
    }
    entries_.Add(other.entries_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          entries_.AddEntriesFrom(input, _repeated_entries_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_ClientPartyWarning message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Entry : pb::IMessage<Entry>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Entry> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_ClientPartyWarning.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry(Entry other) : this() {
        _hasBits0 = other._hasBits0;
        accountid_ = other.accountid_;
        warntype_ = other.warntype_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry Clone() {
        return new Entry(this);
      }

      /// <summary>Field number for the "accountid" field.</summary>
      public const int AccountidFieldNumber = 1;
      private readonly static uint AccountidDefaultValue = 0;

      private uint accountid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Accountid {
        get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountid_ = value;
        }
      }
      /// <summary>Gets whether the "accountid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "accountid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "warntype" field.</summary>
      public const int WarntypeFieldNumber = 2;
      private readonly static uint WarntypeDefaultValue = 0;

      private uint warntype_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Warntype {
        get { if ((_hasBits0 & 2) != 0) { return warntype_; } else { return WarntypeDefaultValue; } }
        set {
          _hasBits0 |= 2;
          warntype_ = value;
        }
      }
      /// <summary>Gets whether the "warntype" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasWarntype {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "warntype" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearWarntype() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Entry);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Entry other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Accountid != other.Accountid) return false;
        if (Warntype != other.Warntype) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountid) hash ^= Accountid.GetHashCode();
        if (HasWarntype) hash ^= Warntype.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Accountid);
        }
        if (HasWarntype) {
          output.WriteRawTag(16);
          output.WriteUInt32(Warntype);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Accountid);
        }
        if (HasWarntype) {
          output.WriteRawTag(16);
          output.WriteUInt32(Warntype);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
        }
        if (HasWarntype) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Warntype);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Entry other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountid) {
          Accountid = other.Accountid;
        }
        if (other.HasWarntype) {
          Warntype = other.Warntype;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Accountid = input.ReadUInt32();
              break;
            }
            case 16: {
              Warntype = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Accountid = input.ReadUInt32();
              break;
            }
            case 16: {
              Warntype = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGCCStrike15_v2_SetEventFavorite : pb::IMessage<CMsgGCCStrike15_v2_SetEventFavorite>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_SetEventFavorite> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_SetEventFavorite>(() => new CMsgGCCStrike15_v2_SetEventFavorite());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_SetEventFavorite> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[143]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_SetEventFavorite() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_SetEventFavorite(CMsgGCCStrike15_v2_SetEventFavorite other) : this() {
    _hasBits0 = other._hasBits0;
    eventid_ = other.eventid_;
    isFavorite_ = other.isFavorite_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_SetEventFavorite Clone() {
    return new CMsgGCCStrike15_v2_SetEventFavorite(this);
  }

  /// <summary>Field number for the "eventid" field.</summary>
  public const int EventidFieldNumber = 1;
  private readonly static ulong EventidDefaultValue = 0UL;

  private ulong eventid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Eventid {
    get { if ((_hasBits0 & 1) != 0) { return eventid_; } else { return EventidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventid_ = value;
    }
  }
  /// <summary>Gets whether the "eventid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eventid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "is_favorite" field.</summary>
  public const int IsFavoriteFieldNumber = 2;
  private readonly static bool IsFavoriteDefaultValue = false;

  private bool isFavorite_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsFavorite {
    get { if ((_hasBits0 & 2) != 0) { return isFavorite_; } else { return IsFavoriteDefaultValue; } }
    set {
      _hasBits0 |= 2;
      isFavorite_ = value;
    }
  }
  /// <summary>Gets whether the "is_favorite" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsFavorite {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "is_favorite" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsFavorite() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_SetEventFavorite);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_SetEventFavorite other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eventid != other.Eventid) return false;
    if (IsFavorite != other.IsFavorite) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventid) hash ^= Eventid.GetHashCode();
    if (HasIsFavorite) hash ^= IsFavorite.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Eventid);
    }
    if (HasIsFavorite) {
      output.WriteRawTag(16);
      output.WriteBool(IsFavorite);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Eventid);
    }
    if (HasIsFavorite) {
      output.WriteRawTag(16);
      output.WriteBool(IsFavorite);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Eventid);
    }
    if (HasIsFavorite) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_SetEventFavorite other) {
    if (other == null) {
      return;
    }
    if (other.HasEventid) {
      Eventid = other.Eventid;
    }
    if (other.HasIsFavorite) {
      IsFavorite = other.IsFavorite;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eventid = input.ReadUInt64();
          break;
        }
        case 16: {
          IsFavorite = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eventid = input.ReadUInt64();
          break;
        }
        case 16: {
          IsFavorite = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GetEventFavorites_Request : pb::IMessage<CMsgGCCStrike15_v2_GetEventFavorites_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GetEventFavorites_Request> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GetEventFavorites_Request>(() => new CMsgGCCStrike15_v2_GetEventFavorites_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GetEventFavorites_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[144]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GetEventFavorites_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GetEventFavorites_Request(CMsgGCCStrike15_v2_GetEventFavorites_Request other) : this() {
    _hasBits0 = other._hasBits0;
    allEvents_ = other.allEvents_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GetEventFavorites_Request Clone() {
    return new CMsgGCCStrike15_v2_GetEventFavorites_Request(this);
  }

  /// <summary>Field number for the "all_events" field.</summary>
  public const int AllEventsFieldNumber = 1;
  private readonly static bool AllEventsDefaultValue = false;

  private bool allEvents_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AllEvents {
    get { if ((_hasBits0 & 1) != 0) { return allEvents_; } else { return AllEventsDefaultValue; } }
    set {
      _hasBits0 |= 1;
      allEvents_ = value;
    }
  }
  /// <summary>Gets whether the "all_events" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAllEvents {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "all_events" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAllEvents() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GetEventFavorites_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GetEventFavorites_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AllEvents != other.AllEvents) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAllEvents) hash ^= AllEvents.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAllEvents) {
      output.WriteRawTag(8);
      output.WriteBool(AllEvents);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAllEvents) {
      output.WriteRawTag(8);
      output.WriteBool(AllEvents);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAllEvents) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GetEventFavorites_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAllEvents) {
      AllEvents = other.AllEvents;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AllEvents = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AllEvents = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GetEventFavorites_Response : pb::IMessage<CMsgGCCStrike15_v2_GetEventFavorites_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GetEventFavorites_Response> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GetEventFavorites_Response>(() => new CMsgGCCStrike15_v2_GetEventFavorites_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GetEventFavorites_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[145]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GetEventFavorites_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GetEventFavorites_Response(CMsgGCCStrike15_v2_GetEventFavorites_Response other) : this() {
    _hasBits0 = other._hasBits0;
    allEvents_ = other.allEvents_;
    jsonFavorites_ = other.jsonFavorites_;
    jsonFeatured_ = other.jsonFeatured_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GetEventFavorites_Response Clone() {
    return new CMsgGCCStrike15_v2_GetEventFavorites_Response(this);
  }

  /// <summary>Field number for the "all_events" field.</summary>
  public const int AllEventsFieldNumber = 1;
  private readonly static bool AllEventsDefaultValue = false;

  private bool allEvents_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AllEvents {
    get { if ((_hasBits0 & 1) != 0) { return allEvents_; } else { return AllEventsDefaultValue; } }
    set {
      _hasBits0 |= 1;
      allEvents_ = value;
    }
  }
  /// <summary>Gets whether the "all_events" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAllEvents {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "all_events" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAllEvents() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "json_favorites" field.</summary>
  public const int JsonFavoritesFieldNumber = 2;
  private readonly static string JsonFavoritesDefaultValue = "";

  private string jsonFavorites_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string JsonFavorites {
    get { return jsonFavorites_ ?? JsonFavoritesDefaultValue; }
    set {
      jsonFavorites_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "json_favorites" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJsonFavorites {
    get { return jsonFavorites_ != null; }
  }
  /// <summary>Clears the value of the "json_favorites" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJsonFavorites() {
    jsonFavorites_ = null;
  }

  /// <summary>Field number for the "json_featured" field.</summary>
  public const int JsonFeaturedFieldNumber = 3;
  private readonly static string JsonFeaturedDefaultValue = "";

  private string jsonFeatured_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string JsonFeatured {
    get { return jsonFeatured_ ?? JsonFeaturedDefaultValue; }
    set {
      jsonFeatured_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "json_featured" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJsonFeatured {
    get { return jsonFeatured_ != null; }
  }
  /// <summary>Clears the value of the "json_featured" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJsonFeatured() {
    jsonFeatured_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GetEventFavorites_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GetEventFavorites_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AllEvents != other.AllEvents) return false;
    if (JsonFavorites != other.JsonFavorites) return false;
    if (JsonFeatured != other.JsonFeatured) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAllEvents) hash ^= AllEvents.GetHashCode();
    if (HasJsonFavorites) hash ^= JsonFavorites.GetHashCode();
    if (HasJsonFeatured) hash ^= JsonFeatured.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAllEvents) {
      output.WriteRawTag(8);
      output.WriteBool(AllEvents);
    }
    if (HasJsonFavorites) {
      output.WriteRawTag(18);
      output.WriteString(JsonFavorites);
    }
    if (HasJsonFeatured) {
      output.WriteRawTag(26);
      output.WriteString(JsonFeatured);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAllEvents) {
      output.WriteRawTag(8);
      output.WriteBool(AllEvents);
    }
    if (HasJsonFavorites) {
      output.WriteRawTag(18);
      output.WriteString(JsonFavorites);
    }
    if (HasJsonFeatured) {
      output.WriteRawTag(26);
      output.WriteString(JsonFeatured);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAllEvents) {
      size += 1 + 1;
    }
    if (HasJsonFavorites) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonFavorites);
    }
    if (HasJsonFeatured) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonFeatured);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GetEventFavorites_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasAllEvents) {
      AllEvents = other.AllEvents;
    }
    if (other.HasJsonFavorites) {
      JsonFavorites = other.JsonFavorites;
    }
    if (other.HasJsonFeatured) {
      JsonFeatured = other.JsonFeatured;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AllEvents = input.ReadBool();
          break;
        }
        case 18: {
          JsonFavorites = input.ReadString();
          break;
        }
        case 26: {
          JsonFeatured = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AllEvents = input.ReadBool();
          break;
        }
        case 18: {
          JsonFavorites = input.ReadString();
          break;
        }
        case 26: {
          JsonFeatured = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientPerfReport : pb::IMessage<CMsgGCCStrike15_v2_ClientPerfReport>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientPerfReport> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientPerfReport>(() => new CMsgGCCStrike15_v2_ClientPerfReport());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientPerfReport> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[146]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPerfReport() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPerfReport(CMsgGCCStrike15_v2_ClientPerfReport other) : this() {
    entries_ = other.entries_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientPerfReport Clone() {
    return new CMsgGCCStrike15_v2_ClientPerfReport(this);
  }

  /// <summary>Field number for the "entries" field.</summary>
  public const int EntriesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgGCCStrike15_v2_ClientPerfReport.Types.Entry> _repeated_entries_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgGCCStrike15_v2_ClientPerfReport.Types.Entry.Parser);
  private readonly pbc::RepeatedField<global::CMsgGCCStrike15_v2_ClientPerfReport.Types.Entry> entries_ = new pbc::RepeatedField<global::CMsgGCCStrike15_v2_ClientPerfReport.Types.Entry>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgGCCStrike15_v2_ClientPerfReport.Types.Entry> Entries {
    get { return entries_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientPerfReport);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientPerfReport other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!entries_.Equals(other.entries_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= entries_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    entries_.WriteTo(output, _repeated_entries_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    entries_.WriteTo(ref output, _repeated_entries_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += entries_.CalculateSize(_repeated_entries_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientPerfReport other) {
    if (other == null) {
      return;
    }
    entries_.Add(other.entries_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          entries_.AddEntriesFrom(input, _repeated_entries_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgGCCStrike15_v2_ClientPerfReport message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Entry : pb::IMessage<Entry>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Entry> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgGCCStrike15_v2_ClientPerfReport.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry(Entry other) : this() {
        _hasBits0 = other._hasBits0;
        perfcounter_ = other.perfcounter_;
        length_ = other.length_;
        reference_ = other.reference_;
        actual_ = other.actual_;
        sourceid_ = other.sourceid_;
        status_ = other.status_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Entry Clone() {
        return new Entry(this);
      }

      /// <summary>Field number for the "perfcounter" field.</summary>
      public const int PerfcounterFieldNumber = 1;
      private readonly static uint PerfcounterDefaultValue = 0;

      private uint perfcounter_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Perfcounter {
        get { if ((_hasBits0 & 1) != 0) { return perfcounter_; } else { return PerfcounterDefaultValue; } }
        set {
          _hasBits0 |= 1;
          perfcounter_ = value;
        }
      }
      /// <summary>Gets whether the "perfcounter" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPerfcounter {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "perfcounter" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPerfcounter() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "length" field.</summary>
      public const int LengthFieldNumber = 2;
      private readonly static uint LengthDefaultValue = 0;

      private uint length_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Length {
        get { if ((_hasBits0 & 2) != 0) { return length_; } else { return LengthDefaultValue; } }
        set {
          _hasBits0 |= 2;
          length_ = value;
        }
      }
      /// <summary>Gets whether the "length" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLength {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "length" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLength() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "reference" field.</summary>
      public const int ReferenceFieldNumber = 3;
      private readonly static pb::ByteString ReferenceDefaultValue = pb::ByteString.Empty;

      private pb::ByteString reference_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString Reference {
        get { return reference_ ?? ReferenceDefaultValue; }
        set {
          reference_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "reference" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasReference {
        get { return reference_ != null; }
      }
      /// <summary>Clears the value of the "reference" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearReference() {
        reference_ = null;
      }

      /// <summary>Field number for the "actual" field.</summary>
      public const int ActualFieldNumber = 4;
      private readonly static pb::ByteString ActualDefaultValue = pb::ByteString.Empty;

      private pb::ByteString actual_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString Actual {
        get { return actual_ ?? ActualDefaultValue; }
        set {
          actual_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "actual" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasActual {
        get { return actual_ != null; }
      }
      /// <summary>Clears the value of the "actual" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearActual() {
        actual_ = null;
      }

      /// <summary>Field number for the "sourceid" field.</summary>
      public const int SourceidFieldNumber = 5;
      private readonly static uint SourceidDefaultValue = 0;

      private uint sourceid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Sourceid {
        get { if ((_hasBits0 & 4) != 0) { return sourceid_; } else { return SourceidDefaultValue; } }
        set {
          _hasBits0 |= 4;
          sourceid_ = value;
        }
      }
      /// <summary>Gets whether the "sourceid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSourceid {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "sourceid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSourceid() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "status" field.</summary>
      public const int StatusFieldNumber = 6;
      private readonly static uint StatusDefaultValue = 0;

      private uint status_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Status {
        get { if ((_hasBits0 & 8) != 0) { return status_; } else { return StatusDefaultValue; } }
        set {
          _hasBits0 |= 8;
          status_ = value;
        }
      }
      /// <summary>Gets whether the "status" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasStatus {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "status" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearStatus() {
        _hasBits0 &= ~8;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Entry);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Entry other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Perfcounter != other.Perfcounter) return false;
        if (Length != other.Length) return false;
        if (Reference != other.Reference) return false;
        if (Actual != other.Actual) return false;
        if (Sourceid != other.Sourceid) return false;
        if (Status != other.Status) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPerfcounter) hash ^= Perfcounter.GetHashCode();
        if (HasLength) hash ^= Length.GetHashCode();
        if (HasReference) hash ^= Reference.GetHashCode();
        if (HasActual) hash ^= Actual.GetHashCode();
        if (HasSourceid) hash ^= Sourceid.GetHashCode();
        if (HasStatus) hash ^= Status.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPerfcounter) {
          output.WriteRawTag(8);
          output.WriteUInt32(Perfcounter);
        }
        if (HasLength) {
          output.WriteRawTag(16);
          output.WriteUInt32(Length);
        }
        if (HasReference) {
          output.WriteRawTag(26);
          output.WriteBytes(Reference);
        }
        if (HasActual) {
          output.WriteRawTag(34);
          output.WriteBytes(Actual);
        }
        if (HasSourceid) {
          output.WriteRawTag(40);
          output.WriteUInt32(Sourceid);
        }
        if (HasStatus) {
          output.WriteRawTag(48);
          output.WriteUInt32(Status);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPerfcounter) {
          output.WriteRawTag(8);
          output.WriteUInt32(Perfcounter);
        }
        if (HasLength) {
          output.WriteRawTag(16);
          output.WriteUInt32(Length);
        }
        if (HasReference) {
          output.WriteRawTag(26);
          output.WriteBytes(Reference);
        }
        if (HasActual) {
          output.WriteRawTag(34);
          output.WriteBytes(Actual);
        }
        if (HasSourceid) {
          output.WriteRawTag(40);
          output.WriteUInt32(Sourceid);
        }
        if (HasStatus) {
          output.WriteRawTag(48);
          output.WriteUInt32(Status);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPerfcounter) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Perfcounter);
        }
        if (HasLength) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
        }
        if (HasReference) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Reference);
        }
        if (HasActual) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Actual);
        }
        if (HasSourceid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sourceid);
        }
        if (HasStatus) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Status);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Entry other) {
        if (other == null) {
          return;
        }
        if (other.HasPerfcounter) {
          Perfcounter = other.Perfcounter;
        }
        if (other.HasLength) {
          Length = other.Length;
        }
        if (other.HasReference) {
          Reference = other.Reference;
        }
        if (other.HasActual) {
          Actual = other.Actual;
        }
        if (other.HasSourceid) {
          Sourceid = other.Sourceid;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Perfcounter = input.ReadUInt32();
              break;
            }
            case 16: {
              Length = input.ReadUInt32();
              break;
            }
            case 26: {
              Reference = input.ReadBytes();
              break;
            }
            case 34: {
              Actual = input.ReadBytes();
              break;
            }
            case 40: {
              Sourceid = input.ReadUInt32();
              break;
            }
            case 48: {
              Status = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Perfcounter = input.ReadUInt32();
              break;
            }
            case 16: {
              Length = input.ReadUInt32();
              break;
            }
            case 26: {
              Reference = input.ReadBytes();
              break;
            }
            case 34: {
              Actual = input.ReadBytes();
              break;
            }
            case 40: {
              Sourceid = input.ReadUInt32();
              break;
            }
            case 48: {
              Status = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CVDiagnostic : pb::IMessage<CVDiagnostic>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CVDiagnostic> _parser = new pb::MessageParser<CVDiagnostic>(() => new CVDiagnostic());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CVDiagnostic> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[147]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVDiagnostic() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVDiagnostic(CVDiagnostic other) : this() {
    _hasBits0 = other._hasBits0;
    id_ = other.id_;
    extended_ = other.extended_;
    value_ = other.value_;
    stringValue_ = other.stringValue_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVDiagnostic Clone() {
    return new CVDiagnostic(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private readonly static uint IdDefaultValue = 0;

  private uint id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Id {
    get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      id_ = value;
    }
  }
  /// <summary>Gets whether the "id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "extended" field.</summary>
  public const int ExtendedFieldNumber = 2;
  private readonly static uint ExtendedDefaultValue = 0;

  private uint extended_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Extended {
    get { if ((_hasBits0 & 2) != 0) { return extended_; } else { return ExtendedDefaultValue; } }
    set {
      _hasBits0 |= 2;
      extended_ = value;
    }
  }
  /// <summary>Gets whether the "extended" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExtended {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "extended" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExtended() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 3;
  private readonly static ulong ValueDefaultValue = 0UL;

  private ulong value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Value {
    get { if ((_hasBits0 & 4) != 0) { return value_; } else { return ValueDefaultValue; } }
    set {
      _hasBits0 |= 4;
      value_ = value;
    }
  }
  /// <summary>Gets whether the "value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValue {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValue() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "string_value" field.</summary>
  public const int StringValueFieldNumber = 4;
  private readonly static string StringValueDefaultValue = "";

  private string stringValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string StringValue {
    get { return stringValue_ ?? StringValueDefaultValue; }
    set {
      stringValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "string_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStringValue {
    get { return stringValue_ != null; }
  }
  /// <summary>Clears the value of the "string_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStringValue() {
    stringValue_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CVDiagnostic);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CVDiagnostic other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Extended != other.Extended) return false;
    if (Value != other.Value) return false;
    if (StringValue != other.StringValue) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasId) hash ^= Id.GetHashCode();
    if (HasExtended) hash ^= Extended.GetHashCode();
    if (HasValue) hash ^= Value.GetHashCode();
    if (HasStringValue) hash ^= StringValue.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    if (HasExtended) {
      output.WriteRawTag(16);
      output.WriteUInt32(Extended);
    }
    if (HasValue) {
      output.WriteRawTag(24);
      output.WriteUInt64(Value);
    }
    if (HasStringValue) {
      output.WriteRawTag(34);
      output.WriteString(StringValue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteUInt32(Id);
    }
    if (HasExtended) {
      output.WriteRawTag(16);
      output.WriteUInt32(Extended);
    }
    if (HasValue) {
      output.WriteRawTag(24);
      output.WriteUInt64(Value);
    }
    if (HasStringValue) {
      output.WriteRawTag(34);
      output.WriteString(StringValue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
    }
    if (HasExtended) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Extended);
    }
    if (HasValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Value);
    }
    if (HasStringValue) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CVDiagnostic other) {
    if (other == null) {
      return;
    }
    if (other.HasId) {
      Id = other.Id;
    }
    if (other.HasExtended) {
      Extended = other.Extended;
    }
    if (other.HasValue) {
      Value = other.Value;
    }
    if (other.HasStringValue) {
      StringValue = other.StringValue;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 16: {
          Extended = input.ReadUInt32();
          break;
        }
        case 24: {
          Value = input.ReadUInt64();
          break;
        }
        case 34: {
          StringValue = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadUInt32();
          break;
        }
        case 16: {
          Extended = input.ReadUInt32();
          break;
        }
        case 24: {
          Value = input.ReadUInt64();
          break;
        }
        case 34: {
          StringValue = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_ClientReportValidation : pb::IMessage<CMsgGCCStrike15_v2_ClientReportValidation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_ClientReportValidation> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_ClientReportValidation>(() => new CMsgGCCStrike15_v2_ClientReportValidation());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_ClientReportValidation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[148]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportValidation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportValidation(CMsgGCCStrike15_v2_ClientReportValidation other) : this() {
    _hasBits0 = other._hasBits0;
    fileReport_ = other.fileReport_;
    commandLine_ = other.commandLine_;
    totalFiles_ = other.totalFiles_;
    internalError_ = other.internalError_;
    trustTime_ = other.trustTime_;
    countPending_ = other.countPending_;
    countCompleted_ = other.countCompleted_;
    processId_ = other.processId_;
    osversion_ = other.osversion_;
    clientreportversion_ = other.clientreportversion_;
    statusId_ = other.statusId_;
    diagnostic1_ = other.diagnostic1_;
    diagnostic2_ = other.diagnostic2_;
    diagnostic3_ = other.diagnostic3_;
    lastLaunchData_ = other.lastLaunchData_;
    reportCount_ = other.reportCount_;
    clientTime_ = other.clientTime_;
    diagnostic4_ = other.diagnostic4_;
    diagnostic5_ = other.diagnostic5_;
    diagnostics_ = other.diagnostics_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_ClientReportValidation Clone() {
    return new CMsgGCCStrike15_v2_ClientReportValidation(this);
  }

  /// <summary>Field number for the "file_report" field.</summary>
  public const int FileReportFieldNumber = 1;
  private readonly static string FileReportDefaultValue = "";

  private string fileReport_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FileReport {
    get { return fileReport_ ?? FileReportDefaultValue; }
    set {
      fileReport_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "file_report" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFileReport {
    get { return fileReport_ != null; }
  }
  /// <summary>Clears the value of the "file_report" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFileReport() {
    fileReport_ = null;
  }

  /// <summary>Field number for the "command_line" field.</summary>
  public const int CommandLineFieldNumber = 2;
  private readonly static string CommandLineDefaultValue = "";

  private string commandLine_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CommandLine {
    get { return commandLine_ ?? CommandLineDefaultValue; }
    set {
      commandLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "command_line" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCommandLine {
    get { return commandLine_ != null; }
  }
  /// <summary>Clears the value of the "command_line" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCommandLine() {
    commandLine_ = null;
  }

  /// <summary>Field number for the "total_files" field.</summary>
  public const int TotalFilesFieldNumber = 3;
  private readonly static uint TotalFilesDefaultValue = 0;

  private uint totalFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TotalFiles {
    get { if ((_hasBits0 & 1) != 0) { return totalFiles_; } else { return TotalFilesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      totalFiles_ = value;
    }
  }
  /// <summary>Gets whether the "total_files" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalFiles {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "total_files" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalFiles() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "internal_error" field.</summary>
  public const int InternalErrorFieldNumber = 4;
  private readonly static uint InternalErrorDefaultValue = 0;

  private uint internalError_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint InternalError {
    get { if ((_hasBits0 & 2) != 0) { return internalError_; } else { return InternalErrorDefaultValue; } }
    set {
      _hasBits0 |= 2;
      internalError_ = value;
    }
  }
  /// <summary>Gets whether the "internal_error" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInternalError {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "internal_error" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInternalError() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "trust_time" field.</summary>
  public const int TrustTimeFieldNumber = 5;
  private readonly static uint TrustTimeDefaultValue = 0;

  private uint trustTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TrustTime {
    get { if ((_hasBits0 & 4) != 0) { return trustTime_; } else { return TrustTimeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      trustTime_ = value;
    }
  }
  /// <summary>Gets whether the "trust_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTrustTime {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "trust_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTrustTime() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "count_pending" field.</summary>
  public const int CountPendingFieldNumber = 6;
  private readonly static uint CountPendingDefaultValue = 0;

  private uint countPending_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CountPending {
    get { if ((_hasBits0 & 8) != 0) { return countPending_; } else { return CountPendingDefaultValue; } }
    set {
      _hasBits0 |= 8;
      countPending_ = value;
    }
  }
  /// <summary>Gets whether the "count_pending" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountPending {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "count_pending" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountPending() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "count_completed" field.</summary>
  public const int CountCompletedFieldNumber = 7;
  private readonly static uint CountCompletedDefaultValue = 0;

  private uint countCompleted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CountCompleted {
    get { if ((_hasBits0 & 16) != 0) { return countCompleted_; } else { return CountCompletedDefaultValue; } }
    set {
      _hasBits0 |= 16;
      countCompleted_ = value;
    }
  }
  /// <summary>Gets whether the "count_completed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountCompleted {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "count_completed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountCompleted() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "process_id" field.</summary>
  public const int ProcessIdFieldNumber = 8;
  private readonly static uint ProcessIdDefaultValue = 0;

  private uint processId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProcessId {
    get { if ((_hasBits0 & 32) != 0) { return processId_; } else { return ProcessIdDefaultValue; } }
    set {
      _hasBits0 |= 32;
      processId_ = value;
    }
  }
  /// <summary>Gets whether the "process_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProcessId {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "process_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProcessId() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "osversion" field.</summary>
  public const int OsversionFieldNumber = 9;
  private readonly static int OsversionDefaultValue = 0;

  private int osversion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Osversion {
    get { if ((_hasBits0 & 64) != 0) { return osversion_; } else { return OsversionDefaultValue; } }
    set {
      _hasBits0 |= 64;
      osversion_ = value;
    }
  }
  /// <summary>Gets whether the "osversion" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOsversion {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "osversion" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOsversion() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "clientreportversion" field.</summary>
  public const int ClientreportversionFieldNumber = 10;
  private readonly static uint ClientreportversionDefaultValue = 0;

  private uint clientreportversion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Clientreportversion {
    get { if ((_hasBits0 & 128) != 0) { return clientreportversion_; } else { return ClientreportversionDefaultValue; } }
    set {
      _hasBits0 |= 128;
      clientreportversion_ = value;
    }
  }
  /// <summary>Gets whether the "clientreportversion" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientreportversion {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "clientreportversion" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientreportversion() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "status_id" field.</summary>
  public const int StatusIdFieldNumber = 11;
  private readonly static uint StatusIdDefaultValue = 0;

  private uint statusId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StatusId {
    get { if ((_hasBits0 & 256) != 0) { return statusId_; } else { return StatusIdDefaultValue; } }
    set {
      _hasBits0 |= 256;
      statusId_ = value;
    }
  }
  /// <summary>Gets whether the "status_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStatusId {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "status_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStatusId() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "diagnostic1" field.</summary>
  public const int Diagnostic1FieldNumber = 12;
  private readonly static uint Diagnostic1DefaultValue = 0;

  private uint diagnostic1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Diagnostic1 {
    get { if ((_hasBits0 & 512) != 0) { return diagnostic1_; } else { return Diagnostic1DefaultValue; } }
    set {
      _hasBits0 |= 512;
      diagnostic1_ = value;
    }
  }
  /// <summary>Gets whether the "diagnostic1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDiagnostic1 {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "diagnostic1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDiagnostic1() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "diagnostic2" field.</summary>
  public const int Diagnostic2FieldNumber = 13;
  private readonly static ulong Diagnostic2DefaultValue = 0UL;

  private ulong diagnostic2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Diagnostic2 {
    get { if ((_hasBits0 & 1024) != 0) { return diagnostic2_; } else { return Diagnostic2DefaultValue; } }
    set {
      _hasBits0 |= 1024;
      diagnostic2_ = value;
    }
  }
  /// <summary>Gets whether the "diagnostic2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDiagnostic2 {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "diagnostic2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDiagnostic2() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "diagnostic3" field.</summary>
  public const int Diagnostic3FieldNumber = 14;
  private readonly static ulong Diagnostic3DefaultValue = 0UL;

  private ulong diagnostic3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Diagnostic3 {
    get { if ((_hasBits0 & 2048) != 0) { return diagnostic3_; } else { return Diagnostic3DefaultValue; } }
    set {
      _hasBits0 |= 2048;
      diagnostic3_ = value;
    }
  }
  /// <summary>Gets whether the "diagnostic3" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDiagnostic3 {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "diagnostic3" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDiagnostic3() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "last_launch_data" field.</summary>
  public const int LastLaunchDataFieldNumber = 15;
  private readonly static string LastLaunchDataDefaultValue = "";

  private string lastLaunchData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LastLaunchData {
    get { return lastLaunchData_ ?? LastLaunchDataDefaultValue; }
    set {
      lastLaunchData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "last_launch_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastLaunchData {
    get { return lastLaunchData_ != null; }
  }
  /// <summary>Clears the value of the "last_launch_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastLaunchData() {
    lastLaunchData_ = null;
  }

  /// <summary>Field number for the "report_count" field.</summary>
  public const int ReportCountFieldNumber = 16;
  private readonly static uint ReportCountDefaultValue = 0;

  private uint reportCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ReportCount {
    get { if ((_hasBits0 & 4096) != 0) { return reportCount_; } else { return ReportCountDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      reportCount_ = value;
    }
  }
  /// <summary>Gets whether the "report_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReportCount {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "report_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReportCount() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "client_time" field.</summary>
  public const int ClientTimeFieldNumber = 17;
  private readonly static ulong ClientTimeDefaultValue = 0UL;

  private ulong clientTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientTime {
    get { if ((_hasBits0 & 8192) != 0) { return clientTime_; } else { return ClientTimeDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      clientTime_ = value;
    }
  }
  /// <summary>Gets whether the "client_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientTime {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "client_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientTime() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "diagnostic4" field.</summary>
  public const int Diagnostic4FieldNumber = 18;
  private readonly static ulong Diagnostic4DefaultValue = 0UL;

  private ulong diagnostic4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Diagnostic4 {
    get { if ((_hasBits0 & 16384) != 0) { return diagnostic4_; } else { return Diagnostic4DefaultValue; } }
    set {
      _hasBits0 |= 16384;
      diagnostic4_ = value;
    }
  }
  /// <summary>Gets whether the "diagnostic4" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDiagnostic4 {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "diagnostic4" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDiagnostic4() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "diagnostic5" field.</summary>
  public const int Diagnostic5FieldNumber = 19;
  private readonly static ulong Diagnostic5DefaultValue = 0UL;

  private ulong diagnostic5_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Diagnostic5 {
    get { if ((_hasBits0 & 32768) != 0) { return diagnostic5_; } else { return Diagnostic5DefaultValue; } }
    set {
      _hasBits0 |= 32768;
      diagnostic5_ = value;
    }
  }
  /// <summary>Gets whether the "diagnostic5" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDiagnostic5 {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "diagnostic5" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDiagnostic5() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "diagnostics" field.</summary>
  public const int DiagnosticsFieldNumber = 20;
  private static readonly pb::FieldCodec<global::CVDiagnostic> _repeated_diagnostics_codec
      = pb::FieldCodec.ForMessage(162, global::CVDiagnostic.Parser);
  private readonly pbc::RepeatedField<global::CVDiagnostic> diagnostics_ = new pbc::RepeatedField<global::CVDiagnostic>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CVDiagnostic> Diagnostics {
    get { return diagnostics_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_ClientReportValidation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_ClientReportValidation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FileReport != other.FileReport) return false;
    if (CommandLine != other.CommandLine) return false;
    if (TotalFiles != other.TotalFiles) return false;
    if (InternalError != other.InternalError) return false;
    if (TrustTime != other.TrustTime) return false;
    if (CountPending != other.CountPending) return false;
    if (CountCompleted != other.CountCompleted) return false;
    if (ProcessId != other.ProcessId) return false;
    if (Osversion != other.Osversion) return false;
    if (Clientreportversion != other.Clientreportversion) return false;
    if (StatusId != other.StatusId) return false;
    if (Diagnostic1 != other.Diagnostic1) return false;
    if (Diagnostic2 != other.Diagnostic2) return false;
    if (Diagnostic3 != other.Diagnostic3) return false;
    if (LastLaunchData != other.LastLaunchData) return false;
    if (ReportCount != other.ReportCount) return false;
    if (ClientTime != other.ClientTime) return false;
    if (Diagnostic4 != other.Diagnostic4) return false;
    if (Diagnostic5 != other.Diagnostic5) return false;
    if(!diagnostics_.Equals(other.diagnostics_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFileReport) hash ^= FileReport.GetHashCode();
    if (HasCommandLine) hash ^= CommandLine.GetHashCode();
    if (HasTotalFiles) hash ^= TotalFiles.GetHashCode();
    if (HasInternalError) hash ^= InternalError.GetHashCode();
    if (HasTrustTime) hash ^= TrustTime.GetHashCode();
    if (HasCountPending) hash ^= CountPending.GetHashCode();
    if (HasCountCompleted) hash ^= CountCompleted.GetHashCode();
    if (HasProcessId) hash ^= ProcessId.GetHashCode();
    if (HasOsversion) hash ^= Osversion.GetHashCode();
    if (HasClientreportversion) hash ^= Clientreportversion.GetHashCode();
    if (HasStatusId) hash ^= StatusId.GetHashCode();
    if (HasDiagnostic1) hash ^= Diagnostic1.GetHashCode();
    if (HasDiagnostic2) hash ^= Diagnostic2.GetHashCode();
    if (HasDiagnostic3) hash ^= Diagnostic3.GetHashCode();
    if (HasLastLaunchData) hash ^= LastLaunchData.GetHashCode();
    if (HasReportCount) hash ^= ReportCount.GetHashCode();
    if (HasClientTime) hash ^= ClientTime.GetHashCode();
    if (HasDiagnostic4) hash ^= Diagnostic4.GetHashCode();
    if (HasDiagnostic5) hash ^= Diagnostic5.GetHashCode();
    hash ^= diagnostics_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFileReport) {
      output.WriteRawTag(10);
      output.WriteString(FileReport);
    }
    if (HasCommandLine) {
      output.WriteRawTag(18);
      output.WriteString(CommandLine);
    }
    if (HasTotalFiles) {
      output.WriteRawTag(24);
      output.WriteUInt32(TotalFiles);
    }
    if (HasInternalError) {
      output.WriteRawTag(32);
      output.WriteUInt32(InternalError);
    }
    if (HasTrustTime) {
      output.WriteRawTag(40);
      output.WriteUInt32(TrustTime);
    }
    if (HasCountPending) {
      output.WriteRawTag(48);
      output.WriteUInt32(CountPending);
    }
    if (HasCountCompleted) {
      output.WriteRawTag(56);
      output.WriteUInt32(CountCompleted);
    }
    if (HasProcessId) {
      output.WriteRawTag(64);
      output.WriteUInt32(ProcessId);
    }
    if (HasOsversion) {
      output.WriteRawTag(72);
      output.WriteInt32(Osversion);
    }
    if (HasClientreportversion) {
      output.WriteRawTag(80);
      output.WriteUInt32(Clientreportversion);
    }
    if (HasStatusId) {
      output.WriteRawTag(88);
      output.WriteUInt32(StatusId);
    }
    if (HasDiagnostic1) {
      output.WriteRawTag(96);
      output.WriteUInt32(Diagnostic1);
    }
    if (HasDiagnostic2) {
      output.WriteRawTag(104);
      output.WriteUInt64(Diagnostic2);
    }
    if (HasDiagnostic3) {
      output.WriteRawTag(112);
      output.WriteUInt64(Diagnostic3);
    }
    if (HasLastLaunchData) {
      output.WriteRawTag(122);
      output.WriteString(LastLaunchData);
    }
    if (HasReportCount) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(ReportCount);
    }
    if (HasClientTime) {
      output.WriteRawTag(136, 1);
      output.WriteUInt64(ClientTime);
    }
    if (HasDiagnostic4) {
      output.WriteRawTag(144, 1);
      output.WriteUInt64(Diagnostic4);
    }
    if (HasDiagnostic5) {
      output.WriteRawTag(152, 1);
      output.WriteUInt64(Diagnostic5);
    }
    diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFileReport) {
      output.WriteRawTag(10);
      output.WriteString(FileReport);
    }
    if (HasCommandLine) {
      output.WriteRawTag(18);
      output.WriteString(CommandLine);
    }
    if (HasTotalFiles) {
      output.WriteRawTag(24);
      output.WriteUInt32(TotalFiles);
    }
    if (HasInternalError) {
      output.WriteRawTag(32);
      output.WriteUInt32(InternalError);
    }
    if (HasTrustTime) {
      output.WriteRawTag(40);
      output.WriteUInt32(TrustTime);
    }
    if (HasCountPending) {
      output.WriteRawTag(48);
      output.WriteUInt32(CountPending);
    }
    if (HasCountCompleted) {
      output.WriteRawTag(56);
      output.WriteUInt32(CountCompleted);
    }
    if (HasProcessId) {
      output.WriteRawTag(64);
      output.WriteUInt32(ProcessId);
    }
    if (HasOsversion) {
      output.WriteRawTag(72);
      output.WriteInt32(Osversion);
    }
    if (HasClientreportversion) {
      output.WriteRawTag(80);
      output.WriteUInt32(Clientreportversion);
    }
    if (HasStatusId) {
      output.WriteRawTag(88);
      output.WriteUInt32(StatusId);
    }
    if (HasDiagnostic1) {
      output.WriteRawTag(96);
      output.WriteUInt32(Diagnostic1);
    }
    if (HasDiagnostic2) {
      output.WriteRawTag(104);
      output.WriteUInt64(Diagnostic2);
    }
    if (HasDiagnostic3) {
      output.WriteRawTag(112);
      output.WriteUInt64(Diagnostic3);
    }
    if (HasLastLaunchData) {
      output.WriteRawTag(122);
      output.WriteString(LastLaunchData);
    }
    if (HasReportCount) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(ReportCount);
    }
    if (HasClientTime) {
      output.WriteRawTag(136, 1);
      output.WriteUInt64(ClientTime);
    }
    if (HasDiagnostic4) {
      output.WriteRawTag(144, 1);
      output.WriteUInt64(Diagnostic4);
    }
    if (HasDiagnostic5) {
      output.WriteRawTag(152, 1);
      output.WriteUInt64(Diagnostic5);
    }
    diagnostics_.WriteTo(ref output, _repeated_diagnostics_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFileReport) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FileReport);
    }
    if (HasCommandLine) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandLine);
    }
    if (HasTotalFiles) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalFiles);
    }
    if (HasInternalError) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InternalError);
    }
    if (HasTrustTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrustTime);
    }
    if (HasCountPending) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CountPending);
    }
    if (HasCountCompleted) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CountCompleted);
    }
    if (HasProcessId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcessId);
    }
    if (HasOsversion) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Osversion);
    }
    if (HasClientreportversion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Clientreportversion);
    }
    if (HasStatusId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusId);
    }
    if (HasDiagnostic1) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Diagnostic1);
    }
    if (HasDiagnostic2) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Diagnostic2);
    }
    if (HasDiagnostic3) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Diagnostic3);
    }
    if (HasLastLaunchData) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LastLaunchData);
    }
    if (HasReportCount) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReportCount);
    }
    if (HasClientTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ClientTime);
    }
    if (HasDiagnostic4) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Diagnostic4);
    }
    if (HasDiagnostic5) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Diagnostic5);
    }
    size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_ClientReportValidation other) {
    if (other == null) {
      return;
    }
    if (other.HasFileReport) {
      FileReport = other.FileReport;
    }
    if (other.HasCommandLine) {
      CommandLine = other.CommandLine;
    }
    if (other.HasTotalFiles) {
      TotalFiles = other.TotalFiles;
    }
    if (other.HasInternalError) {
      InternalError = other.InternalError;
    }
    if (other.HasTrustTime) {
      TrustTime = other.TrustTime;
    }
    if (other.HasCountPending) {
      CountPending = other.CountPending;
    }
    if (other.HasCountCompleted) {
      CountCompleted = other.CountCompleted;
    }
    if (other.HasProcessId) {
      ProcessId = other.ProcessId;
    }
    if (other.HasOsversion) {
      Osversion = other.Osversion;
    }
    if (other.HasClientreportversion) {
      Clientreportversion = other.Clientreportversion;
    }
    if (other.HasStatusId) {
      StatusId = other.StatusId;
    }
    if (other.HasDiagnostic1) {
      Diagnostic1 = other.Diagnostic1;
    }
    if (other.HasDiagnostic2) {
      Diagnostic2 = other.Diagnostic2;
    }
    if (other.HasDiagnostic3) {
      Diagnostic3 = other.Diagnostic3;
    }
    if (other.HasLastLaunchData) {
      LastLaunchData = other.LastLaunchData;
    }
    if (other.HasReportCount) {
      ReportCount = other.ReportCount;
    }
    if (other.HasClientTime) {
      ClientTime = other.ClientTime;
    }
    if (other.HasDiagnostic4) {
      Diagnostic4 = other.Diagnostic4;
    }
    if (other.HasDiagnostic5) {
      Diagnostic5 = other.Diagnostic5;
    }
    diagnostics_.Add(other.diagnostics_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          FileReport = input.ReadString();
          break;
        }
        case 18: {
          CommandLine = input.ReadString();
          break;
        }
        case 24: {
          TotalFiles = input.ReadUInt32();
          break;
        }
        case 32: {
          InternalError = input.ReadUInt32();
          break;
        }
        case 40: {
          TrustTime = input.ReadUInt32();
          break;
        }
        case 48: {
          CountPending = input.ReadUInt32();
          break;
        }
        case 56: {
          CountCompleted = input.ReadUInt32();
          break;
        }
        case 64: {
          ProcessId = input.ReadUInt32();
          break;
        }
        case 72: {
          Osversion = input.ReadInt32();
          break;
        }
        case 80: {
          Clientreportversion = input.ReadUInt32();
          break;
        }
        case 88: {
          StatusId = input.ReadUInt32();
          break;
        }
        case 96: {
          Diagnostic1 = input.ReadUInt32();
          break;
        }
        case 104: {
          Diagnostic2 = input.ReadUInt64();
          break;
        }
        case 112: {
          Diagnostic3 = input.ReadUInt64();
          break;
        }
        case 122: {
          LastLaunchData = input.ReadString();
          break;
        }
        case 128: {
          ReportCount = input.ReadUInt32();
          break;
        }
        case 136: {
          ClientTime = input.ReadUInt64();
          break;
        }
        case 144: {
          Diagnostic4 = input.ReadUInt64();
          break;
        }
        case 152: {
          Diagnostic5 = input.ReadUInt64();
          break;
        }
        case 162: {
          diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          FileReport = input.ReadString();
          break;
        }
        case 18: {
          CommandLine = input.ReadString();
          break;
        }
        case 24: {
          TotalFiles = input.ReadUInt32();
          break;
        }
        case 32: {
          InternalError = input.ReadUInt32();
          break;
        }
        case 40: {
          TrustTime = input.ReadUInt32();
          break;
        }
        case 48: {
          CountPending = input.ReadUInt32();
          break;
        }
        case 56: {
          CountCompleted = input.ReadUInt32();
          break;
        }
        case 64: {
          ProcessId = input.ReadUInt32();
          break;
        }
        case 72: {
          Osversion = input.ReadInt32();
          break;
        }
        case 80: {
          Clientreportversion = input.ReadUInt32();
          break;
        }
        case 88: {
          StatusId = input.ReadUInt32();
          break;
        }
        case 96: {
          Diagnostic1 = input.ReadUInt32();
          break;
        }
        case 104: {
          Diagnostic2 = input.ReadUInt64();
          break;
        }
        case 112: {
          Diagnostic3 = input.ReadUInt64();
          break;
        }
        case 122: {
          LastLaunchData = input.ReadString();
          break;
        }
        case 128: {
          ReportCount = input.ReadUInt32();
          break;
        }
        case 136: {
          ClientTime = input.ReadUInt64();
          break;
        }
        case 144: {
          Diagnostic4 = input.ReadUInt64();
          break;
        }
        case 152: {
          Diagnostic5 = input.ReadUInt64();
          break;
        }
        case 162: {
          diagnostics_.AddEntriesFrom(ref input, _repeated_diagnostics_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode : pb::IMessage<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode>(() => new CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[149]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode other) : this() {
    _hasBits0 = other._hasBits0;
    fileReport_ = other.fileReport_;
    offerInsecureMode_ = other.offerInsecureMode_;
    offerSecureMode_ = other.offerSecureMode_;
    showUnsignedUi_ = other.showUnsignedUi_;
    kickUser_ = other.kickUser_;
    showTrustedUi_ = other.showTrustedUi_;
    showWarningNotTrusted_ = other.showWarningNotTrusted_;
    showWarningNotTrusted2_ = other.showWarningNotTrusted2_;
    filesPreventedTrusted_ = other.filesPreventedTrusted_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode Clone() {
    return new CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode(this);
  }

  /// <summary>Field number for the "file_report" field.</summary>
  public const int FileReportFieldNumber = 1;
  private readonly static string FileReportDefaultValue = "";

  private string fileReport_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FileReport {
    get { return fileReport_ ?? FileReportDefaultValue; }
    set {
      fileReport_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "file_report" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFileReport {
    get { return fileReport_ != null; }
  }
  /// <summary>Clears the value of the "file_report" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFileReport() {
    fileReport_ = null;
  }

  /// <summary>Field number for the "offer_insecure_mode" field.</summary>
  public const int OfferInsecureModeFieldNumber = 2;
  private readonly static bool OfferInsecureModeDefaultValue = false;

  private bool offerInsecureMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool OfferInsecureMode {
    get { if ((_hasBits0 & 1) != 0) { return offerInsecureMode_; } else { return OfferInsecureModeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      offerInsecureMode_ = value;
    }
  }
  /// <summary>Gets whether the "offer_insecure_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOfferInsecureMode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "offer_insecure_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOfferInsecureMode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "offer_secure_mode" field.</summary>
  public const int OfferSecureModeFieldNumber = 3;
  private readonly static bool OfferSecureModeDefaultValue = false;

  private bool offerSecureMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool OfferSecureMode {
    get { if ((_hasBits0 & 2) != 0) { return offerSecureMode_; } else { return OfferSecureModeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      offerSecureMode_ = value;
    }
  }
  /// <summary>Gets whether the "offer_secure_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOfferSecureMode {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "offer_secure_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOfferSecureMode() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "show_unsigned_ui" field.</summary>
  public const int ShowUnsignedUiFieldNumber = 4;
  private readonly static bool ShowUnsignedUiDefaultValue = false;

  private bool showUnsignedUi_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ShowUnsignedUi {
    get { if ((_hasBits0 & 4) != 0) { return showUnsignedUi_; } else { return ShowUnsignedUiDefaultValue; } }
    set {
      _hasBits0 |= 4;
      showUnsignedUi_ = value;
    }
  }
  /// <summary>Gets whether the "show_unsigned_ui" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShowUnsignedUi {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "show_unsigned_ui" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShowUnsignedUi() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "kick_user" field.</summary>
  public const int KickUserFieldNumber = 5;
  private readonly static bool KickUserDefaultValue = false;

  private bool kickUser_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool KickUser {
    get { if ((_hasBits0 & 8) != 0) { return kickUser_; } else { return KickUserDefaultValue; } }
    set {
      _hasBits0 |= 8;
      kickUser_ = value;
    }
  }
  /// <summary>Gets whether the "kick_user" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKickUser {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "kick_user" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKickUser() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "show_trusted_ui" field.</summary>
  public const int ShowTrustedUiFieldNumber = 6;
  private readonly static bool ShowTrustedUiDefaultValue = false;

  private bool showTrustedUi_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ShowTrustedUi {
    get { if ((_hasBits0 & 16) != 0) { return showTrustedUi_; } else { return ShowTrustedUiDefaultValue; } }
    set {
      _hasBits0 |= 16;
      showTrustedUi_ = value;
    }
  }
  /// <summary>Gets whether the "show_trusted_ui" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShowTrustedUi {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "show_trusted_ui" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShowTrustedUi() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "show_warning_not_trusted" field.</summary>
  public const int ShowWarningNotTrustedFieldNumber = 7;
  private readonly static bool ShowWarningNotTrustedDefaultValue = false;

  private bool showWarningNotTrusted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ShowWarningNotTrusted {
    get { if ((_hasBits0 & 32) != 0) { return showWarningNotTrusted_; } else { return ShowWarningNotTrustedDefaultValue; } }
    set {
      _hasBits0 |= 32;
      showWarningNotTrusted_ = value;
    }
  }
  /// <summary>Gets whether the "show_warning_not_trusted" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShowWarningNotTrusted {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "show_warning_not_trusted" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShowWarningNotTrusted() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "show_warning_not_trusted_2" field.</summary>
  public const int ShowWarningNotTrusted2FieldNumber = 8;
  private readonly static bool ShowWarningNotTrusted2DefaultValue = false;

  private bool showWarningNotTrusted2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ShowWarningNotTrusted2 {
    get { if ((_hasBits0 & 64) != 0) { return showWarningNotTrusted2_; } else { return ShowWarningNotTrusted2DefaultValue; } }
    set {
      _hasBits0 |= 64;
      showWarningNotTrusted2_ = value;
    }
  }
  /// <summary>Gets whether the "show_warning_not_trusted_2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShowWarningNotTrusted2 {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "show_warning_not_trusted_2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShowWarningNotTrusted2() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "files_prevented_trusted" field.</summary>
  public const int FilesPreventedTrustedFieldNumber = 9;
  private readonly static string FilesPreventedTrustedDefaultValue = "";

  private string filesPreventedTrusted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FilesPreventedTrusted {
    get { return filesPreventedTrusted_ ?? FilesPreventedTrustedDefaultValue; }
    set {
      filesPreventedTrusted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "files_prevented_trusted" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFilesPreventedTrusted {
    get { return filesPreventedTrusted_ != null; }
  }
  /// <summary>Clears the value of the "files_prevented_trusted" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFilesPreventedTrusted() {
    filesPreventedTrusted_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FileReport != other.FileReport) return false;
    if (OfferInsecureMode != other.OfferInsecureMode) return false;
    if (OfferSecureMode != other.OfferSecureMode) return false;
    if (ShowUnsignedUi != other.ShowUnsignedUi) return false;
    if (KickUser != other.KickUser) return false;
    if (ShowTrustedUi != other.ShowTrustedUi) return false;
    if (ShowWarningNotTrusted != other.ShowWarningNotTrusted) return false;
    if (ShowWarningNotTrusted2 != other.ShowWarningNotTrusted2) return false;
    if (FilesPreventedTrusted != other.FilesPreventedTrusted) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFileReport) hash ^= FileReport.GetHashCode();
    if (HasOfferInsecureMode) hash ^= OfferInsecureMode.GetHashCode();
    if (HasOfferSecureMode) hash ^= OfferSecureMode.GetHashCode();
    if (HasShowUnsignedUi) hash ^= ShowUnsignedUi.GetHashCode();
    if (HasKickUser) hash ^= KickUser.GetHashCode();
    if (HasShowTrustedUi) hash ^= ShowTrustedUi.GetHashCode();
    if (HasShowWarningNotTrusted) hash ^= ShowWarningNotTrusted.GetHashCode();
    if (HasShowWarningNotTrusted2) hash ^= ShowWarningNotTrusted2.GetHashCode();
    if (HasFilesPreventedTrusted) hash ^= FilesPreventedTrusted.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFileReport) {
      output.WriteRawTag(10);
      output.WriteString(FileReport);
    }
    if (HasOfferInsecureMode) {
      output.WriteRawTag(16);
      output.WriteBool(OfferInsecureMode);
    }
    if (HasOfferSecureMode) {
      output.WriteRawTag(24);
      output.WriteBool(OfferSecureMode);
    }
    if (HasShowUnsignedUi) {
      output.WriteRawTag(32);
      output.WriteBool(ShowUnsignedUi);
    }
    if (HasKickUser) {
      output.WriteRawTag(40);
      output.WriteBool(KickUser);
    }
    if (HasShowTrustedUi) {
      output.WriteRawTag(48);
      output.WriteBool(ShowTrustedUi);
    }
    if (HasShowWarningNotTrusted) {
      output.WriteRawTag(56);
      output.WriteBool(ShowWarningNotTrusted);
    }
    if (HasShowWarningNotTrusted2) {
      output.WriteRawTag(64);
      output.WriteBool(ShowWarningNotTrusted2);
    }
    if (HasFilesPreventedTrusted) {
      output.WriteRawTag(74);
      output.WriteString(FilesPreventedTrusted);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFileReport) {
      output.WriteRawTag(10);
      output.WriteString(FileReport);
    }
    if (HasOfferInsecureMode) {
      output.WriteRawTag(16);
      output.WriteBool(OfferInsecureMode);
    }
    if (HasOfferSecureMode) {
      output.WriteRawTag(24);
      output.WriteBool(OfferSecureMode);
    }
    if (HasShowUnsignedUi) {
      output.WriteRawTag(32);
      output.WriteBool(ShowUnsignedUi);
    }
    if (HasKickUser) {
      output.WriteRawTag(40);
      output.WriteBool(KickUser);
    }
    if (HasShowTrustedUi) {
      output.WriteRawTag(48);
      output.WriteBool(ShowTrustedUi);
    }
    if (HasShowWarningNotTrusted) {
      output.WriteRawTag(56);
      output.WriteBool(ShowWarningNotTrusted);
    }
    if (HasShowWarningNotTrusted2) {
      output.WriteRawTag(64);
      output.WriteBool(ShowWarningNotTrusted2);
    }
    if (HasFilesPreventedTrusted) {
      output.WriteRawTag(74);
      output.WriteString(FilesPreventedTrusted);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFileReport) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FileReport);
    }
    if (HasOfferInsecureMode) {
      size += 1 + 1;
    }
    if (HasOfferSecureMode) {
      size += 1 + 1;
    }
    if (HasShowUnsignedUi) {
      size += 1 + 1;
    }
    if (HasKickUser) {
      size += 1 + 1;
    }
    if (HasShowTrustedUi) {
      size += 1 + 1;
    }
    if (HasShowWarningNotTrusted) {
      size += 1 + 1;
    }
    if (HasShowWarningNotTrusted2) {
      size += 1 + 1;
    }
    if (HasFilesPreventedTrusted) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FilesPreventedTrusted);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode other) {
    if (other == null) {
      return;
    }
    if (other.HasFileReport) {
      FileReport = other.FileReport;
    }
    if (other.HasOfferInsecureMode) {
      OfferInsecureMode = other.OfferInsecureMode;
    }
    if (other.HasOfferSecureMode) {
      OfferSecureMode = other.OfferSecureMode;
    }
    if (other.HasShowUnsignedUi) {
      ShowUnsignedUi = other.ShowUnsignedUi;
    }
    if (other.HasKickUser) {
      KickUser = other.KickUser;
    }
    if (other.HasShowTrustedUi) {
      ShowTrustedUi = other.ShowTrustedUi;
    }
    if (other.HasShowWarningNotTrusted) {
      ShowWarningNotTrusted = other.ShowWarningNotTrusted;
    }
    if (other.HasShowWarningNotTrusted2) {
      ShowWarningNotTrusted2 = other.ShowWarningNotTrusted2;
    }
    if (other.HasFilesPreventedTrusted) {
      FilesPreventedTrusted = other.FilesPreventedTrusted;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          FileReport = input.ReadString();
          break;
        }
        case 16: {
          OfferInsecureMode = input.ReadBool();
          break;
        }
        case 24: {
          OfferSecureMode = input.ReadBool();
          break;
        }
        case 32: {
          ShowUnsignedUi = input.ReadBool();
          break;
        }
        case 40: {
          KickUser = input.ReadBool();
          break;
        }
        case 48: {
          ShowTrustedUi = input.ReadBool();
          break;
        }
        case 56: {
          ShowWarningNotTrusted = input.ReadBool();
          break;
        }
        case 64: {
          ShowWarningNotTrusted2 = input.ReadBool();
          break;
        }
        case 74: {
          FilesPreventedTrusted = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          FileReport = input.ReadString();
          break;
        }
        case 16: {
          OfferInsecureMode = input.ReadBool();
          break;
        }
        case 24: {
          OfferSecureMode = input.ReadBool();
          break;
        }
        case 32: {
          ShowUnsignedUi = input.ReadBool();
          break;
        }
        case 40: {
          KickUser = input.ReadBool();
          break;
        }
        case 48: {
          ShowTrustedUi = input.ReadBool();
          break;
        }
        case 56: {
          ShowWarningNotTrusted = input.ReadBool();
          break;
        }
        case 64: {
          ShowWarningNotTrusted2 = input.ReadBool();
          break;
        }
        case 74: {
          FilesPreventedTrusted = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GC2ClientRequestValidation : pb::IMessage<CMsgGCCStrike15_v2_GC2ClientRequestValidation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientRequestValidation> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientRequestValidation>(() => new CMsgGCCStrike15_v2_GC2ClientRequestValidation());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientRequestValidation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[150]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientRequestValidation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientRequestValidation(CMsgGCCStrike15_v2_GC2ClientRequestValidation other) : this() {
    _hasBits0 = other._hasBits0;
    fullReport_ = other.fullReport_;
    module_ = other.module_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientRequestValidation Clone() {
    return new CMsgGCCStrike15_v2_GC2ClientRequestValidation(this);
  }

  /// <summary>Field number for the "full_report" field.</summary>
  public const int FullReportFieldNumber = 1;
  private readonly static bool FullReportDefaultValue = false;

  private bool fullReport_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool FullReport {
    get { if ((_hasBits0 & 1) != 0) { return fullReport_; } else { return FullReportDefaultValue; } }
    set {
      _hasBits0 |= 1;
      fullReport_ = value;
    }
  }
  /// <summary>Gets whether the "full_report" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFullReport {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "full_report" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFullReport() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "module" field.</summary>
  public const int ModuleFieldNumber = 2;
  private readonly static string ModuleDefaultValue = "";

  private string module_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Module {
    get { return module_ ?? ModuleDefaultValue; }
    set {
      module_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "module" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasModule {
    get { return module_ != null; }
  }
  /// <summary>Clears the value of the "module" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearModule() {
    module_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GC2ClientRequestValidation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GC2ClientRequestValidation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FullReport != other.FullReport) return false;
    if (Module != other.Module) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFullReport) hash ^= FullReport.GetHashCode();
    if (HasModule) hash ^= Module.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFullReport) {
      output.WriteRawTag(8);
      output.WriteBool(FullReport);
    }
    if (HasModule) {
      output.WriteRawTag(18);
      output.WriteString(Module);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFullReport) {
      output.WriteRawTag(8);
      output.WriteBool(FullReport);
    }
    if (HasModule) {
      output.WriteRawTag(18);
      output.WriteString(Module);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFullReport) {
      size += 1 + 1;
    }
    if (HasModule) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Module);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GC2ClientRequestValidation other) {
    if (other == null) {
      return;
    }
    if (other.HasFullReport) {
      FullReport = other.FullReport;
    }
    if (other.HasModule) {
      Module = other.Module;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FullReport = input.ReadBool();
          break;
        }
        case 18: {
          Module = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          FullReport = input.ReadBool();
          break;
        }
        case 18: {
          Module = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GC2ClientInitSystem : pb::IMessage<CMsgGCCStrike15_v2_GC2ClientInitSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientInitSystem> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientInitSystem>(() => new CMsgGCCStrike15_v2_GC2ClientInitSystem());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientInitSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[151]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientInitSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientInitSystem(CMsgGCCStrike15_v2_GC2ClientInitSystem other) : this() {
    _hasBits0 = other._hasBits0;
    load_ = other.load_;
    name_ = other.name_;
    outputname_ = other.outputname_;
    keyData_ = other.keyData_;
    shaHash_ = other.shaHash_;
    cookie_ = other.cookie_;
    manifest_ = other.manifest_;
    systemPackage_ = other.systemPackage_;
    loadSystem_ = other.loadSystem_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientInitSystem Clone() {
    return new CMsgGCCStrike15_v2_GC2ClientInitSystem(this);
  }

  /// <summary>Field number for the "load" field.</summary>
  public const int LoadFieldNumber = 1;
  private readonly static bool LoadDefaultValue = false;

  private bool load_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Load {
    get { if ((_hasBits0 & 1) != 0) { return load_; } else { return LoadDefaultValue; } }
    set {
      _hasBits0 |= 1;
      load_ = value;
    }
  }
  /// <summary>Gets whether the "load" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLoad {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "load" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLoad() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "outputname" field.</summary>
  public const int OutputnameFieldNumber = 3;
  private readonly static string OutputnameDefaultValue = "";

  private string outputname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Outputname {
    get { return outputname_ ?? OutputnameDefaultValue; }
    set {
      outputname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "outputname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOutputname {
    get { return outputname_ != null; }
  }
  /// <summary>Clears the value of the "outputname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOutputname() {
    outputname_ = null;
  }

  /// <summary>Field number for the "key_data" field.</summary>
  public const int KeyDataFieldNumber = 4;
  private readonly static pb::ByteString KeyDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString keyData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString KeyData {
    get { return keyData_ ?? KeyDataDefaultValue; }
    set {
      keyData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "key_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKeyData {
    get { return keyData_ != null; }
  }
  /// <summary>Clears the value of the "key_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKeyData() {
    keyData_ = null;
  }

  /// <summary>Field number for the "sha_hash" field.</summary>
  public const int ShaHashFieldNumber = 5;
  private readonly static pb::ByteString ShaHashDefaultValue = pb::ByteString.Empty;

  private pb::ByteString shaHash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ShaHash {
    get { return shaHash_ ?? ShaHashDefaultValue; }
    set {
      shaHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sha_hash" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShaHash {
    get { return shaHash_ != null; }
  }
  /// <summary>Clears the value of the "sha_hash" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShaHash() {
    shaHash_ = null;
  }

  /// <summary>Field number for the "cookie" field.</summary>
  public const int CookieFieldNumber = 6;
  private readonly static int CookieDefaultValue = 0;

  private int cookie_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Cookie {
    get { if ((_hasBits0 & 2) != 0) { return cookie_; } else { return CookieDefaultValue; } }
    set {
      _hasBits0 |= 2;
      cookie_ = value;
    }
  }
  /// <summary>Gets whether the "cookie" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCookie {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "cookie" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCookie() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "manifest" field.</summary>
  public const int ManifestFieldNumber = 7;
  private readonly static string ManifestDefaultValue = "";

  private string manifest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Manifest {
    get { return manifest_ ?? ManifestDefaultValue; }
    set {
      manifest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "manifest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManifest {
    get { return manifest_ != null; }
  }
  /// <summary>Clears the value of the "manifest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManifest() {
    manifest_ = null;
  }

  /// <summary>Field number for the "system_package" field.</summary>
  public const int SystemPackageFieldNumber = 8;
  private readonly static pb::ByteString SystemPackageDefaultValue = pb::ByteString.Empty;

  private pb::ByteString systemPackage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString SystemPackage {
    get { return systemPackage_ ?? SystemPackageDefaultValue; }
    set {
      systemPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "system_package" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSystemPackage {
    get { return systemPackage_ != null; }
  }
  /// <summary>Clears the value of the "system_package" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSystemPackage() {
    systemPackage_ = null;
  }

  /// <summary>Field number for the "load_system" field.</summary>
  public const int LoadSystemFieldNumber = 9;
  private readonly static bool LoadSystemDefaultValue = false;

  private bool loadSystem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool LoadSystem {
    get { if ((_hasBits0 & 4) != 0) { return loadSystem_; } else { return LoadSystemDefaultValue; } }
    set {
      _hasBits0 |= 4;
      loadSystem_ = value;
    }
  }
  /// <summary>Gets whether the "load_system" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLoadSystem {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "load_system" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLoadSystem() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GC2ClientInitSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GC2ClientInitSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Load != other.Load) return false;
    if (Name != other.Name) return false;
    if (Outputname != other.Outputname) return false;
    if (KeyData != other.KeyData) return false;
    if (ShaHash != other.ShaHash) return false;
    if (Cookie != other.Cookie) return false;
    if (Manifest != other.Manifest) return false;
    if (SystemPackage != other.SystemPackage) return false;
    if (LoadSystem != other.LoadSystem) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasLoad) hash ^= Load.GetHashCode();
    if (HasName) hash ^= Name.GetHashCode();
    if (HasOutputname) hash ^= Outputname.GetHashCode();
    if (HasKeyData) hash ^= KeyData.GetHashCode();
    if (HasShaHash) hash ^= ShaHash.GetHashCode();
    if (HasCookie) hash ^= Cookie.GetHashCode();
    if (HasManifest) hash ^= Manifest.GetHashCode();
    if (HasSystemPackage) hash ^= SystemPackage.GetHashCode();
    if (HasLoadSystem) hash ^= LoadSystem.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasLoad) {
      output.WriteRawTag(8);
      output.WriteBool(Load);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasOutputname) {
      output.WriteRawTag(26);
      output.WriteString(Outputname);
    }
    if (HasKeyData) {
      output.WriteRawTag(34);
      output.WriteBytes(KeyData);
    }
    if (HasShaHash) {
      output.WriteRawTag(42);
      output.WriteBytes(ShaHash);
    }
    if (HasCookie) {
      output.WriteRawTag(48);
      output.WriteInt32(Cookie);
    }
    if (HasManifest) {
      output.WriteRawTag(58);
      output.WriteString(Manifest);
    }
    if (HasSystemPackage) {
      output.WriteRawTag(66);
      output.WriteBytes(SystemPackage);
    }
    if (HasLoadSystem) {
      output.WriteRawTag(72);
      output.WriteBool(LoadSystem);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasLoad) {
      output.WriteRawTag(8);
      output.WriteBool(Load);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasOutputname) {
      output.WriteRawTag(26);
      output.WriteString(Outputname);
    }
    if (HasKeyData) {
      output.WriteRawTag(34);
      output.WriteBytes(KeyData);
    }
    if (HasShaHash) {
      output.WriteRawTag(42);
      output.WriteBytes(ShaHash);
    }
    if (HasCookie) {
      output.WriteRawTag(48);
      output.WriteInt32(Cookie);
    }
    if (HasManifest) {
      output.WriteRawTag(58);
      output.WriteString(Manifest);
    }
    if (HasSystemPackage) {
      output.WriteRawTag(66);
      output.WriteBytes(SystemPackage);
    }
    if (HasLoadSystem) {
      output.WriteRawTag(72);
      output.WriteBool(LoadSystem);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasLoad) {
      size += 1 + 1;
    }
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasOutputname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Outputname);
    }
    if (HasKeyData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(KeyData);
    }
    if (HasShaHash) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShaHash);
    }
    if (HasCookie) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cookie);
    }
    if (HasManifest) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Manifest);
    }
    if (HasSystemPackage) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SystemPackage);
    }
    if (HasLoadSystem) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GC2ClientInitSystem other) {
    if (other == null) {
      return;
    }
    if (other.HasLoad) {
      Load = other.Load;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasOutputname) {
      Outputname = other.Outputname;
    }
    if (other.HasKeyData) {
      KeyData = other.KeyData;
    }
    if (other.HasShaHash) {
      ShaHash = other.ShaHash;
    }
    if (other.HasCookie) {
      Cookie = other.Cookie;
    }
    if (other.HasManifest) {
      Manifest = other.Manifest;
    }
    if (other.HasSystemPackage) {
      SystemPackage = other.SystemPackage;
    }
    if (other.HasLoadSystem) {
      LoadSystem = other.LoadSystem;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Load = input.ReadBool();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Outputname = input.ReadString();
          break;
        }
        case 34: {
          KeyData = input.ReadBytes();
          break;
        }
        case 42: {
          ShaHash = input.ReadBytes();
          break;
        }
        case 48: {
          Cookie = input.ReadInt32();
          break;
        }
        case 58: {
          Manifest = input.ReadString();
          break;
        }
        case 66: {
          SystemPackage = input.ReadBytes();
          break;
        }
        case 72: {
          LoadSystem = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Load = input.ReadBool();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Outputname = input.ReadString();
          break;
        }
        case 34: {
          KeyData = input.ReadBytes();
          break;
        }
        case 42: {
          ShaHash = input.ReadBytes();
          break;
        }
        case 48: {
          Cookie = input.ReadInt32();
          break;
        }
        case 58: {
          Manifest = input.ReadString();
          break;
        }
        case 66: {
          SystemPackage = input.ReadBytes();
          break;
        }
        case 72: {
          LoadSystem = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_GC2ClientInitSystem_Response : pb::IMessage<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response>(() => new CMsgGCCStrike15_v2_GC2ClientInitSystem_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[152]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientInitSystem_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientInitSystem_Response(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response other) : this() {
    _hasBits0 = other._hasBits0;
    success_ = other.success_;
    diagnostic_ = other.diagnostic_;
    shaHash_ = other.shaHash_;
    response_ = other.response_;
    errorCode1_ = other.errorCode1_;
    errorCode2_ = other.errorCode2_;
    handle_ = other.handle_;
    einitResult_ = other.einitResult_;
    auxSystem1_ = other.auxSystem1_;
    auxSystem2_ = other.auxSystem2_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_GC2ClientInitSystem_Response Clone() {
    return new CMsgGCCStrike15_v2_GC2ClientInitSystem_Response(this);
  }

  /// <summary>Field number for the "success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private readonly static bool SuccessDefaultValue = false;

  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Success {
    get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
    set {
      _hasBits0 |= 1;
      success_ = value;
    }
  }
  /// <summary>Gets whether the "success" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSuccess {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "success" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSuccess() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "diagnostic" field.</summary>
  public const int DiagnosticFieldNumber = 2;
  private readonly static string DiagnosticDefaultValue = "";

  private string diagnostic_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Diagnostic {
    get { return diagnostic_ ?? DiagnosticDefaultValue; }
    set {
      diagnostic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "diagnostic" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDiagnostic {
    get { return diagnostic_ != null; }
  }
  /// <summary>Clears the value of the "diagnostic" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDiagnostic() {
    diagnostic_ = null;
  }

  /// <summary>Field number for the "sha_hash" field.</summary>
  public const int ShaHashFieldNumber = 3;
  private readonly static pb::ByteString ShaHashDefaultValue = pb::ByteString.Empty;

  private pb::ByteString shaHash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ShaHash {
    get { return shaHash_ ?? ShaHashDefaultValue; }
    set {
      shaHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sha_hash" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShaHash {
    get { return shaHash_ != null; }
  }
  /// <summary>Clears the value of the "sha_hash" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShaHash() {
    shaHash_ = null;
  }

  /// <summary>Field number for the "response" field.</summary>
  public const int ResponseFieldNumber = 4;
  private readonly static int ResponseDefaultValue = 0;

  private int response_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Response {
    get { if ((_hasBits0 & 2) != 0) { return response_; } else { return ResponseDefaultValue; } }
    set {
      _hasBits0 |= 2;
      response_ = value;
    }
  }
  /// <summary>Gets whether the "response" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasResponse {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "response" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearResponse() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "error_code1" field.</summary>
  public const int ErrorCode1FieldNumber = 5;
  private readonly static int ErrorCode1DefaultValue = 0;

  private int errorCode1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ErrorCode1 {
    get { if ((_hasBits0 & 4) != 0) { return errorCode1_; } else { return ErrorCode1DefaultValue; } }
    set {
      _hasBits0 |= 4;
      errorCode1_ = value;
    }
  }
  /// <summary>Gets whether the "error_code1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasErrorCode1 {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "error_code1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearErrorCode1() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "error_code2" field.</summary>
  public const int ErrorCode2FieldNumber = 6;
  private readonly static int ErrorCode2DefaultValue = 0;

  private int errorCode2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ErrorCode2 {
    get { if ((_hasBits0 & 8) != 0) { return errorCode2_; } else { return ErrorCode2DefaultValue; } }
    set {
      _hasBits0 |= 8;
      errorCode2_ = value;
    }
  }
  /// <summary>Gets whether the "error_code2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasErrorCode2 {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "error_code2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearErrorCode2() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "handle" field.</summary>
  public const int HandleFieldNumber = 7;
  private readonly static long HandleDefaultValue = 0L;

  private long handle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Handle {
    get { if ((_hasBits0 & 16) != 0) { return handle_; } else { return HandleDefaultValue; } }
    set {
      _hasBits0 |= 16;
      handle_ = value;
    }
  }
  /// <summary>Gets whether the "handle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHandle {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "handle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHandle() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "einit_result" field.</summary>
  public const int EinitResultFieldNumber = 8;
  private readonly static global::EInitSystemResult EinitResultDefaultValue = global::EInitSystemResult.KEinitSystemResultInvalid;

  private global::EInitSystemResult einitResult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EInitSystemResult EinitResult {
    get { if ((_hasBits0 & 32) != 0) { return einitResult_; } else { return EinitResultDefaultValue; } }
    set {
      _hasBits0 |= 32;
      einitResult_ = value;
    }
  }
  /// <summary>Gets whether the "einit_result" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEinitResult {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "einit_result" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEinitResult() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "aux_system1" field.</summary>
  public const int AuxSystem1FieldNumber = 9;
  private readonly static int AuxSystem1DefaultValue = 0;

  private int auxSystem1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int AuxSystem1 {
    get { if ((_hasBits0 & 64) != 0) { return auxSystem1_; } else { return AuxSystem1DefaultValue; } }
    set {
      _hasBits0 |= 64;
      auxSystem1_ = value;
    }
  }
  /// <summary>Gets whether the "aux_system1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuxSystem1 {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "aux_system1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuxSystem1() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "aux_system2" field.</summary>
  public const int AuxSystem2FieldNumber = 10;
  private readonly static int AuxSystem2DefaultValue = 0;

  private int auxSystem2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int AuxSystem2 {
    get { if ((_hasBits0 & 128) != 0) { return auxSystem2_; } else { return AuxSystem2DefaultValue; } }
    set {
      _hasBits0 |= 128;
      auxSystem2_ = value;
    }
  }
  /// <summary>Gets whether the "aux_system2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuxSystem2 {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "aux_system2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuxSystem2() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_GC2ClientInitSystem_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    if (Diagnostic != other.Diagnostic) return false;
    if (ShaHash != other.ShaHash) return false;
    if (Response != other.Response) return false;
    if (ErrorCode1 != other.ErrorCode1) return false;
    if (ErrorCode2 != other.ErrorCode2) return false;
    if (Handle != other.Handle) return false;
    if (EinitResult != other.EinitResult) return false;
    if (AuxSystem1 != other.AuxSystem1) return false;
    if (AuxSystem2 != other.AuxSystem2) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSuccess) hash ^= Success.GetHashCode();
    if (HasDiagnostic) hash ^= Diagnostic.GetHashCode();
    if (HasShaHash) hash ^= ShaHash.GetHashCode();
    if (HasResponse) hash ^= Response.GetHashCode();
    if (HasErrorCode1) hash ^= ErrorCode1.GetHashCode();
    if (HasErrorCode2) hash ^= ErrorCode2.GetHashCode();
    if (HasHandle) hash ^= Handle.GetHashCode();
    if (HasEinitResult) hash ^= EinitResult.GetHashCode();
    if (HasAuxSystem1) hash ^= AuxSystem1.GetHashCode();
    if (HasAuxSystem2) hash ^= AuxSystem2.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSuccess) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
    if (HasDiagnostic) {
      output.WriteRawTag(18);
      output.WriteString(Diagnostic);
    }
    if (HasShaHash) {
      output.WriteRawTag(26);
      output.WriteBytes(ShaHash);
    }
    if (HasResponse) {
      output.WriteRawTag(32);
      output.WriteInt32(Response);
    }
    if (HasErrorCode1) {
      output.WriteRawTag(40);
      output.WriteInt32(ErrorCode1);
    }
    if (HasErrorCode2) {
      output.WriteRawTag(48);
      output.WriteInt32(ErrorCode2);
    }
    if (HasHandle) {
      output.WriteRawTag(56);
      output.WriteInt64(Handle);
    }
    if (HasEinitResult) {
      output.WriteRawTag(64);
      output.WriteEnum((int) EinitResult);
    }
    if (HasAuxSystem1) {
      output.WriteRawTag(72);
      output.WriteInt32(AuxSystem1);
    }
    if (HasAuxSystem2) {
      output.WriteRawTag(80);
      output.WriteInt32(AuxSystem2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSuccess) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
    if (HasDiagnostic) {
      output.WriteRawTag(18);
      output.WriteString(Diagnostic);
    }
    if (HasShaHash) {
      output.WriteRawTag(26);
      output.WriteBytes(ShaHash);
    }
    if (HasResponse) {
      output.WriteRawTag(32);
      output.WriteInt32(Response);
    }
    if (HasErrorCode1) {
      output.WriteRawTag(40);
      output.WriteInt32(ErrorCode1);
    }
    if (HasErrorCode2) {
      output.WriteRawTag(48);
      output.WriteInt32(ErrorCode2);
    }
    if (HasHandle) {
      output.WriteRawTag(56);
      output.WriteInt64(Handle);
    }
    if (HasEinitResult) {
      output.WriteRawTag(64);
      output.WriteEnum((int) EinitResult);
    }
    if (HasAuxSystem1) {
      output.WriteRawTag(72);
      output.WriteInt32(AuxSystem1);
    }
    if (HasAuxSystem2) {
      output.WriteRawTag(80);
      output.WriteInt32(AuxSystem2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSuccess) {
      size += 1 + 1;
    }
    if (HasDiagnostic) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Diagnostic);
    }
    if (HasShaHash) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShaHash);
    }
    if (HasResponse) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Response);
    }
    if (HasErrorCode1) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode1);
    }
    if (HasErrorCode2) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode2);
    }
    if (HasHandle) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Handle);
    }
    if (HasEinitResult) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EinitResult);
    }
    if (HasAuxSystem1) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuxSystem1);
    }
    if (HasAuxSystem2) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuxSystem2);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_GC2ClientInitSystem_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasSuccess) {
      Success = other.Success;
    }
    if (other.HasDiagnostic) {
      Diagnostic = other.Diagnostic;
    }
    if (other.HasShaHash) {
      ShaHash = other.ShaHash;
    }
    if (other.HasResponse) {
      Response = other.Response;
    }
    if (other.HasErrorCode1) {
      ErrorCode1 = other.ErrorCode1;
    }
    if (other.HasErrorCode2) {
      ErrorCode2 = other.ErrorCode2;
    }
    if (other.HasHandle) {
      Handle = other.Handle;
    }
    if (other.HasEinitResult) {
      EinitResult = other.EinitResult;
    }
    if (other.HasAuxSystem1) {
      AuxSystem1 = other.AuxSystem1;
    }
    if (other.HasAuxSystem2) {
      AuxSystem2 = other.AuxSystem2;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
        case 18: {
          Diagnostic = input.ReadString();
          break;
        }
        case 26: {
          ShaHash = input.ReadBytes();
          break;
        }
        case 32: {
          Response = input.ReadInt32();
          break;
        }
        case 40: {
          ErrorCode1 = input.ReadInt32();
          break;
        }
        case 48: {
          ErrorCode2 = input.ReadInt32();
          break;
        }
        case 56: {
          Handle = input.ReadInt64();
          break;
        }
        case 64: {
          EinitResult = (global::EInitSystemResult) input.ReadEnum();
          break;
        }
        case 72: {
          AuxSystem1 = input.ReadInt32();
          break;
        }
        case 80: {
          AuxSystem2 = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
        case 18: {
          Diagnostic = input.ReadString();
          break;
        }
        case 26: {
          ShaHash = input.ReadBytes();
          break;
        }
        case 32: {
          Response = input.ReadInt32();
          break;
        }
        case 40: {
          ErrorCode1 = input.ReadInt32();
          break;
        }
        case 48: {
          ErrorCode2 = input.ReadInt32();
          break;
        }
        case 56: {
          Handle = input.ReadInt64();
          break;
        }
        case 64: {
          EinitResult = (global::EInitSystemResult) input.ReadEnum();
          break;
        }
        case 72: {
          AuxSystem1 = input.ReadInt32();
          break;
        }
        case 80: {
          AuxSystem2 = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName : pb::IMessage<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName> _parser = new pb::MessageParser<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName>(() => new CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[153]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName other) : this() {
    leaderboardSafeName_ = other.leaderboardSafeName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName Clone() {
    return new CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName(this);
  }

  /// <summary>Field number for the "leaderboard_safe_name" field.</summary>
  public const int LeaderboardSafeNameFieldNumber = 1;
  private readonly static string LeaderboardSafeNameDefaultValue = "";

  private string leaderboardSafeName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LeaderboardSafeName {
    get { return leaderboardSafeName_ ?? LeaderboardSafeNameDefaultValue; }
    set {
      leaderboardSafeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "leaderboard_safe_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLeaderboardSafeName {
    get { return leaderboardSafeName_ != null; }
  }
  /// <summary>Clears the value of the "leaderboard_safe_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLeaderboardSafeName() {
    leaderboardSafeName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LeaderboardSafeName != other.LeaderboardSafeName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasLeaderboardSafeName) hash ^= LeaderboardSafeName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasLeaderboardSafeName) {
      output.WriteRawTag(10);
      output.WriteString(LeaderboardSafeName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasLeaderboardSafeName) {
      output.WriteRawTag(10);
      output.WriteString(LeaderboardSafeName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasLeaderboardSafeName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderboardSafeName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName other) {
    if (other == null) {
      return;
    }
    if (other.HasLeaderboardSafeName) {
      LeaderboardSafeName = other.LeaderboardSafeName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          LeaderboardSafeName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          LeaderboardSafeName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgRequestRecurringMissionSchedule : pb::IMessage<CMsgRequestRecurringMissionSchedule>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgRequestRecurringMissionSchedule> _parser = new pb::MessageParser<CMsgRequestRecurringMissionSchedule>(() => new CMsgRequestRecurringMissionSchedule());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgRequestRecurringMissionSchedule> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[154]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRequestRecurringMissionSchedule() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRequestRecurringMissionSchedule(CMsgRequestRecurringMissionSchedule other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRequestRecurringMissionSchedule Clone() {
    return new CMsgRequestRecurringMissionSchedule(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgRequestRecurringMissionSchedule);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgRequestRecurringMissionSchedule other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgRequestRecurringMissionSchedule other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CMsgRecurringMissionSchema : pb::IMessage<CMsgRecurringMissionSchema>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgRecurringMissionSchema> _parser = new pb::MessageParser<CMsgRecurringMissionSchema>(() => new CMsgRecurringMissionSchema());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgRecurringMissionSchema> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::Cstrike15GcmessagesReflection.Descriptor.MessageTypes[155]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRecurringMissionSchema() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRecurringMissionSchema(CMsgRecurringMissionSchema other) : this() {
    missions_ = other.missions_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRecurringMissionSchema Clone() {
    return new CMsgRecurringMissionSchema(this);
  }

  /// <summary>Field number for the "missions" field.</summary>
  public const int MissionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgRecurringMissionSchema.Types.MissionTemplateList> _repeated_missions_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgRecurringMissionSchema.Types.MissionTemplateList.Parser);
  private readonly pbc::RepeatedField<global::CMsgRecurringMissionSchema.Types.MissionTemplateList> missions_ = new pbc::RepeatedField<global::CMsgRecurringMissionSchema.Types.MissionTemplateList>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgRecurringMissionSchema.Types.MissionTemplateList> Missions {
    get { return missions_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgRecurringMissionSchema);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgRecurringMissionSchema other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!missions_.Equals(other.missions_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= missions_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    missions_.WriteTo(output, _repeated_missions_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    missions_.WriteTo(ref output, _repeated_missions_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += missions_.CalculateSize(_repeated_missions_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgRecurringMissionSchema other) {
    if (other == null) {
      return;
    }
    missions_.Add(other.missions_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          missions_.AddEntriesFrom(input, _repeated_missions_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          missions_.AddEntriesFrom(ref input, _repeated_missions_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgRecurringMissionSchema message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class MissionTemplateList : pb::IMessage<MissionTemplateList>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<MissionTemplateList> _parser = new pb::MessageParser<MissionTemplateList>(() => new MissionTemplateList());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<MissionTemplateList> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgRecurringMissionSchema.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MissionTemplateList() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MissionTemplateList(MissionTemplateList other) : this() {
        _hasBits0 = other._hasBits0;
        period_ = other.period_;
        missionTemplates_ = other.missionTemplates_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MissionTemplateList Clone() {
        return new MissionTemplateList(this);
      }

      /// <summary>Field number for the "period" field.</summary>
      public const int PeriodFieldNumber = 1;
      private readonly static uint PeriodDefaultValue = 0;

      private uint period_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Period {
        get { if ((_hasBits0 & 1) != 0) { return period_; } else { return PeriodDefaultValue; } }
        set {
          _hasBits0 |= 1;
          period_ = value;
        }
      }
      /// <summary>Gets whether the "period" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPeriod {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "period" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPeriod() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "mission_templates" field.</summary>
      public const int MissionTemplatesFieldNumber = 2;
      private static readonly pb::FieldCodec<pb::ByteString> _repeated_missionTemplates_codec
          = pb::FieldCodec.ForBytes(18);
      private readonly pbc::RepeatedField<pb::ByteString> missionTemplates_ = new pbc::RepeatedField<pb::ByteString>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<pb::ByteString> MissionTemplates {
        get { return missionTemplates_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as MissionTemplateList);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(MissionTemplateList other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Period != other.Period) return false;
        if(!missionTemplates_.Equals(other.missionTemplates_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPeriod) hash ^= Period.GetHashCode();
        hash ^= missionTemplates_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPeriod) {
          output.WriteRawTag(8);
          output.WriteUInt32(Period);
        }
        missionTemplates_.WriteTo(output, _repeated_missionTemplates_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPeriod) {
          output.WriteRawTag(8);
          output.WriteUInt32(Period);
        }
        missionTemplates_.WriteTo(ref output, _repeated_missionTemplates_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPeriod) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Period);
        }
        size += missionTemplates_.CalculateSize(_repeated_missionTemplates_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(MissionTemplateList other) {
        if (other == null) {
          return;
        }
        if (other.HasPeriod) {
          Period = other.Period;
        }
        missionTemplates_.Add(other.missionTemplates_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Period = input.ReadUInt32();
              break;
            }
            case 18: {
              missionTemplates_.AddEntriesFrom(input, _repeated_missionTemplates_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Period = input.ReadUInt32();
              break;
            }
            case 18: {
              missionTemplates_.AddEntriesFrom(ref input, _repeated_missionTemplates_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
