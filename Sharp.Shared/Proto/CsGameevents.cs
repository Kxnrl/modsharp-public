// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cs_gameevents.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from cs_gameevents.proto</summary>
public static partial class CsGameeventsReflection {

  #region Descriptor
  /// <summary>File descriptor for cs_gameevents.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CsGameeventsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNjc19nYW1lZXZlbnRzLnByb3RvGhZuZXR3b3JrYmFzZXR5cGVzLnByb3Rv",
          "Ik4KFUNNc2dURVBsYXllckFuaW1FdmVudBIYCgZwbGF5ZXIYASABKAc6CDE2",
          "Nzc3MjE1Eg0KBWV2ZW50GAIgASgNEgwKBGRhdGEYAyABKAUiKwoPQ01zZ1RF",
          "UmFkaW9JY29uEhgKBnBsYXllchgBIAEoBzoIMTY3NzcyMTUi9QIKEUNNc2dU",
          "RUZpcmVCdWxsZXRzEhsKBm9yaWdpbhgBIAEoCzILLkNNc2dWZWN0b3ISGwoG",
          "YW5nbGVzGAIgASgLMgsuQ01zZ1FBbmdsZRIbCgl3ZWFwb25faWQYAyABKA06",
          "CDE2Nzc3MjE1EgwKBG1vZGUYBCABKA0SDAoEc2VlZBgFIAEoDRIYCgZwbGF5",
          "ZXIYBiABKAc6CDE2Nzc3MjE1EhIKCmluYWNjdXJhY3kYByABKAISFAoMcmVj",
          "b2lsX2luZGV4GAggASgCEg4KBnNwcmVhZBgJIAEoAhISCgpzb3VuZF90eXBl",
          "GAogASgFEhYKDml0ZW1fZGVmX2luZGV4GAsgASgNEhgKEHNvdW5kX2RzcF9l",
          "ZmZlY3QYDCABKAcSHwoKZW50X29yaWdpbhgNIAEoCzILLkNNc2dWZWN0b3IS",
          "HQoVbnVtX2J1bGxldHNfcmVtYWluaW5nGA4gASgNEhMKC2F0dGFja190eXBl",
          "GA8gASgNKl0KD0VDc2dvR2FtZUV2ZW50cxIZChRHRV9QbGF5ZXJBbmltRXZl",
          "bnRJZBDCAxIYChNHRV9SYWRpb0ljb25FdmVudElkEMMDEhUKEEdFX0ZpcmVC",
          "dWxsZXRzSWQQxAM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NetworkbasetypesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ECsgoGameEvents), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEPlayerAnimEvent), global::CMsgTEPlayerAnimEvent.Parser, new[]{ "Player", "Event", "Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTERadioIcon), global::CMsgTERadioIcon.Parser, new[]{ "Player" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEFireBullets), global::CMsgTEFireBullets.Parser, new[]{ "Origin", "Angles", "WeaponId", "Mode", "Seed", "Player", "Inaccuracy", "RecoilIndex", "Spread", "SoundType", "ItemDefIndex", "SoundDspEffect", "EntOrigin", "NumBulletsRemaining", "AttackType" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ECsgoGameEvents {
  [pbr::OriginalName("GE_PlayerAnimEventId")] GePlayerAnimEventId = 450,
  [pbr::OriginalName("GE_RadioIconEventId")] GeRadioIconEventId = 451,
  [pbr::OriginalName("GE_FireBulletsId")] GeFireBulletsId = 452,
}

#endregion

#region Messages
public sealed partial class CMsgTEPlayerAnimEvent : pb::IMessage<CMsgTEPlayerAnimEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEPlayerAnimEvent> _parser = new pb::MessageParser<CMsgTEPlayerAnimEvent>(() => new CMsgTEPlayerAnimEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEPlayerAnimEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CsGameeventsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPlayerAnimEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPlayerAnimEvent(CMsgTEPlayerAnimEvent other) : this() {
    _hasBits0 = other._hasBits0;
    player_ = other.player_;
    event_ = other.event_;
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPlayerAnimEvent Clone() {
    return new CMsgTEPlayerAnimEvent(this);
  }

  /// <summary>Field number for the "player" field.</summary>
  public const int PlayerFieldNumber = 1;
  private readonly static uint PlayerDefaultValue = 16777215;

  private uint player_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Player {
    get { if ((_hasBits0 & 1) != 0) { return player_; } else { return PlayerDefaultValue; } }
    set {
      _hasBits0 |= 1;
      player_ = value;
    }
  }
  /// <summary>Gets whether the "player" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayer {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "player" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayer() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "event" field.</summary>
  public const int EventFieldNumber = 2;
  private readonly static uint EventDefaultValue = 0;

  private uint event_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Event {
    get { if ((_hasBits0 & 2) != 0) { return event_; } else { return EventDefaultValue; } }
    set {
      _hasBits0 |= 2;
      event_ = value;
    }
  }
  /// <summary>Gets whether the "event" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEvent {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "event" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEvent() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 3;
  private readonly static int DataDefaultValue = 0;

  private int data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Data {
    get { if ((_hasBits0 & 4) != 0) { return data_; } else { return DataDefaultValue; } }
    set {
      _hasBits0 |= 4;
      data_ = value;
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEPlayerAnimEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEPlayerAnimEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Player != other.Player) return false;
    if (Event != other.Event) return false;
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPlayer) hash ^= Player.GetHashCode();
    if (HasEvent) hash ^= Event.GetHashCode();
    if (HasData) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPlayer) {
      output.WriteRawTag(13);
      output.WriteFixed32(Player);
    }
    if (HasEvent) {
      output.WriteRawTag(16);
      output.WriteUInt32(Event);
    }
    if (HasData) {
      output.WriteRawTag(24);
      output.WriteInt32(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPlayer) {
      output.WriteRawTag(13);
      output.WriteFixed32(Player);
    }
    if (HasEvent) {
      output.WriteRawTag(16);
      output.WriteUInt32(Event);
    }
    if (HasData) {
      output.WriteRawTag(24);
      output.WriteInt32(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPlayer) {
      size += 1 + 4;
    }
    if (HasEvent) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event);
    }
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEPlayerAnimEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasPlayer) {
      Player = other.Player;
    }
    if (other.HasEvent) {
      Event = other.Event;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Player = input.ReadFixed32();
          break;
        }
        case 16: {
          Event = input.ReadUInt32();
          break;
        }
        case 24: {
          Data = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Player = input.ReadFixed32();
          break;
        }
        case 16: {
          Event = input.ReadUInt32();
          break;
        }
        case 24: {
          Data = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgTERadioIcon : pb::IMessage<CMsgTERadioIcon>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTERadioIcon> _parser = new pb::MessageParser<CMsgTERadioIcon>(() => new CMsgTERadioIcon());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTERadioIcon> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CsGameeventsReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTERadioIcon() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTERadioIcon(CMsgTERadioIcon other) : this() {
    _hasBits0 = other._hasBits0;
    player_ = other.player_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTERadioIcon Clone() {
    return new CMsgTERadioIcon(this);
  }

  /// <summary>Field number for the "player" field.</summary>
  public const int PlayerFieldNumber = 1;
  private readonly static uint PlayerDefaultValue = 16777215;

  private uint player_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Player {
    get { if ((_hasBits0 & 1) != 0) { return player_; } else { return PlayerDefaultValue; } }
    set {
      _hasBits0 |= 1;
      player_ = value;
    }
  }
  /// <summary>Gets whether the "player" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayer {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "player" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayer() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTERadioIcon);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTERadioIcon other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Player != other.Player) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPlayer) hash ^= Player.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPlayer) {
      output.WriteRawTag(13);
      output.WriteFixed32(Player);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPlayer) {
      output.WriteRawTag(13);
      output.WriteFixed32(Player);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPlayer) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTERadioIcon other) {
    if (other == null) {
      return;
    }
    if (other.HasPlayer) {
      Player = other.Player;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Player = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Player = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgTEFireBullets : pb::IMessage<CMsgTEFireBullets>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEFireBullets> _parser = new pb::MessageParser<CMsgTEFireBullets>(() => new CMsgTEFireBullets());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEFireBullets> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CsGameeventsReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEFireBullets() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEFireBullets(CMsgTEFireBullets other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    angles_ = other.angles_ != null ? other.angles_.Clone() : null;
    weaponId_ = other.weaponId_;
    mode_ = other.mode_;
    seed_ = other.seed_;
    player_ = other.player_;
    inaccuracy_ = other.inaccuracy_;
    recoilIndex_ = other.recoilIndex_;
    spread_ = other.spread_;
    soundType_ = other.soundType_;
    itemDefIndex_ = other.itemDefIndex_;
    soundDspEffect_ = other.soundDspEffect_;
    entOrigin_ = other.entOrigin_ != null ? other.entOrigin_.Clone() : null;
    numBulletsRemaining_ = other.numBulletsRemaining_;
    attackType_ = other.attackType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEFireBullets Clone() {
    return new CMsgTEFireBullets(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "angles" field.</summary>
  public const int AnglesFieldNumber = 2;
  private global::CMsgQAngle angles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angles {
    get { return angles_; }
    set {
      angles_ = value;
    }
  }

  /// <summary>Field number for the "weapon_id" field.</summary>
  public const int WeaponIdFieldNumber = 3;
  private readonly static uint WeaponIdDefaultValue = 16777215;

  private uint weaponId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint WeaponId {
    get { if ((_hasBits0 & 1) != 0) { return weaponId_; } else { return WeaponIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      weaponId_ = value;
    }
  }
  /// <summary>Gets whether the "weapon_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWeaponId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "weapon_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWeaponId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "mode" field.</summary>
  public const int ModeFieldNumber = 4;
  private readonly static uint ModeDefaultValue = 0;

  private uint mode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Mode {
    get { if ((_hasBits0 & 2) != 0) { return mode_; } else { return ModeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      mode_ = value;
    }
  }
  /// <summary>Gets whether the "mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMode {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMode() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "seed" field.</summary>
  public const int SeedFieldNumber = 5;
  private readonly static uint SeedDefaultValue = 0;

  private uint seed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Seed {
    get { if ((_hasBits0 & 4) != 0) { return seed_; } else { return SeedDefaultValue; } }
    set {
      _hasBits0 |= 4;
      seed_ = value;
    }
  }
  /// <summary>Gets whether the "seed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeed {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "seed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeed() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "player" field.</summary>
  public const int PlayerFieldNumber = 6;
  private readonly static uint PlayerDefaultValue = 16777215;

  private uint player_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Player {
    get { if ((_hasBits0 & 8) != 0) { return player_; } else { return PlayerDefaultValue; } }
    set {
      _hasBits0 |= 8;
      player_ = value;
    }
  }
  /// <summary>Gets whether the "player" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayer {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "player" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayer() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "inaccuracy" field.</summary>
  public const int InaccuracyFieldNumber = 7;
  private readonly static float InaccuracyDefaultValue = 0F;

  private float inaccuracy_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Inaccuracy {
    get { if ((_hasBits0 & 16) != 0) { return inaccuracy_; } else { return InaccuracyDefaultValue; } }
    set {
      _hasBits0 |= 16;
      inaccuracy_ = value;
    }
  }
  /// <summary>Gets whether the "inaccuracy" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInaccuracy {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "inaccuracy" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInaccuracy() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "recoil_index" field.</summary>
  public const int RecoilIndexFieldNumber = 8;
  private readonly static float RecoilIndexDefaultValue = 0F;

  private float recoilIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float RecoilIndex {
    get { if ((_hasBits0 & 32) != 0) { return recoilIndex_; } else { return RecoilIndexDefaultValue; } }
    set {
      _hasBits0 |= 32;
      recoilIndex_ = value;
    }
  }
  /// <summary>Gets whether the "recoil_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRecoilIndex {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "recoil_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRecoilIndex() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "spread" field.</summary>
  public const int SpreadFieldNumber = 9;
  private readonly static float SpreadDefaultValue = 0F;

  private float spread_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Spread {
    get { if ((_hasBits0 & 64) != 0) { return spread_; } else { return SpreadDefaultValue; } }
    set {
      _hasBits0 |= 64;
      spread_ = value;
    }
  }
  /// <summary>Gets whether the "spread" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpread {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "spread" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpread() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "sound_type" field.</summary>
  public const int SoundTypeFieldNumber = 10;
  private readonly static int SoundTypeDefaultValue = 0;

  private int soundType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SoundType {
    get { if ((_hasBits0 & 128) != 0) { return soundType_; } else { return SoundTypeDefaultValue; } }
    set {
      _hasBits0 |= 128;
      soundType_ = value;
    }
  }
  /// <summary>Gets whether the "sound_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSoundType {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "sound_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSoundType() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "item_def_index" field.</summary>
  public const int ItemDefIndexFieldNumber = 11;
  private readonly static uint ItemDefIndexDefaultValue = 0;

  private uint itemDefIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ItemDefIndex {
    get { if ((_hasBits0 & 256) != 0) { return itemDefIndex_; } else { return ItemDefIndexDefaultValue; } }
    set {
      _hasBits0 |= 256;
      itemDefIndex_ = value;
    }
  }
  /// <summary>Gets whether the "item_def_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasItemDefIndex {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "item_def_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearItemDefIndex() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "sound_dsp_effect" field.</summary>
  public const int SoundDspEffectFieldNumber = 12;
  private readonly static uint SoundDspEffectDefaultValue = 0;

  private uint soundDspEffect_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SoundDspEffect {
    get { if ((_hasBits0 & 512) != 0) { return soundDspEffect_; } else { return SoundDspEffectDefaultValue; } }
    set {
      _hasBits0 |= 512;
      soundDspEffect_ = value;
    }
  }
  /// <summary>Gets whether the "sound_dsp_effect" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSoundDspEffect {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "sound_dsp_effect" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSoundDspEffect() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "ent_origin" field.</summary>
  public const int EntOriginFieldNumber = 13;
  private global::CMsgVector entOrigin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector EntOrigin {
    get { return entOrigin_; }
    set {
      entOrigin_ = value;
    }
  }

  /// <summary>Field number for the "num_bullets_remaining" field.</summary>
  public const int NumBulletsRemainingFieldNumber = 14;
  private readonly static uint NumBulletsRemainingDefaultValue = 0;

  private uint numBulletsRemaining_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NumBulletsRemaining {
    get { if ((_hasBits0 & 1024) != 0) { return numBulletsRemaining_; } else { return NumBulletsRemainingDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      numBulletsRemaining_ = value;
    }
  }
  /// <summary>Gets whether the "num_bullets_remaining" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumBulletsRemaining {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "num_bullets_remaining" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumBulletsRemaining() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "attack_type" field.</summary>
  public const int AttackTypeFieldNumber = 15;
  private readonly static uint AttackTypeDefaultValue = 0;

  private uint attackType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AttackType {
    get { if ((_hasBits0 & 2048) != 0) { return attackType_; } else { return AttackTypeDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      attackType_ = value;
    }
  }
  /// <summary>Gets whether the "attack_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAttackType {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "attack_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAttackType() {
    _hasBits0 &= ~2048;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEFireBullets);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEFireBullets other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Angles, other.Angles)) return false;
    if (WeaponId != other.WeaponId) return false;
    if (Mode != other.Mode) return false;
    if (Seed != other.Seed) return false;
    if (Player != other.Player) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Inaccuracy, other.Inaccuracy)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RecoilIndex, other.RecoilIndex)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Spread, other.Spread)) return false;
    if (SoundType != other.SoundType) return false;
    if (ItemDefIndex != other.ItemDefIndex) return false;
    if (SoundDspEffect != other.SoundDspEffect) return false;
    if (!object.Equals(EntOrigin, other.EntOrigin)) return false;
    if (NumBulletsRemaining != other.NumBulletsRemaining) return false;
    if (AttackType != other.AttackType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (angles_ != null) hash ^= Angles.GetHashCode();
    if (HasWeaponId) hash ^= WeaponId.GetHashCode();
    if (HasMode) hash ^= Mode.GetHashCode();
    if (HasSeed) hash ^= Seed.GetHashCode();
    if (HasPlayer) hash ^= Player.GetHashCode();
    if (HasInaccuracy) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Inaccuracy);
    if (HasRecoilIndex) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RecoilIndex);
    if (HasSpread) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Spread);
    if (HasSoundType) hash ^= SoundType.GetHashCode();
    if (HasItemDefIndex) hash ^= ItemDefIndex.GetHashCode();
    if (HasSoundDspEffect) hash ^= SoundDspEffect.GetHashCode();
    if (entOrigin_ != null) hash ^= EntOrigin.GetHashCode();
    if (HasNumBulletsRemaining) hash ^= NumBulletsRemaining.GetHashCode();
    if (HasAttackType) hash ^= AttackType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (HasWeaponId) {
      output.WriteRawTag(24);
      output.WriteUInt32(WeaponId);
    }
    if (HasMode) {
      output.WriteRawTag(32);
      output.WriteUInt32(Mode);
    }
    if (HasSeed) {
      output.WriteRawTag(40);
      output.WriteUInt32(Seed);
    }
    if (HasPlayer) {
      output.WriteRawTag(53);
      output.WriteFixed32(Player);
    }
    if (HasInaccuracy) {
      output.WriteRawTag(61);
      output.WriteFloat(Inaccuracy);
    }
    if (HasRecoilIndex) {
      output.WriteRawTag(69);
      output.WriteFloat(RecoilIndex);
    }
    if (HasSpread) {
      output.WriteRawTag(77);
      output.WriteFloat(Spread);
    }
    if (HasSoundType) {
      output.WriteRawTag(80);
      output.WriteInt32(SoundType);
    }
    if (HasItemDefIndex) {
      output.WriteRawTag(88);
      output.WriteUInt32(ItemDefIndex);
    }
    if (HasSoundDspEffect) {
      output.WriteRawTag(101);
      output.WriteFixed32(SoundDspEffect);
    }
    if (entOrigin_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(EntOrigin);
    }
    if (HasNumBulletsRemaining) {
      output.WriteRawTag(112);
      output.WriteUInt32(NumBulletsRemaining);
    }
    if (HasAttackType) {
      output.WriteRawTag(120);
      output.WriteUInt32(AttackType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (HasWeaponId) {
      output.WriteRawTag(24);
      output.WriteUInt32(WeaponId);
    }
    if (HasMode) {
      output.WriteRawTag(32);
      output.WriteUInt32(Mode);
    }
    if (HasSeed) {
      output.WriteRawTag(40);
      output.WriteUInt32(Seed);
    }
    if (HasPlayer) {
      output.WriteRawTag(53);
      output.WriteFixed32(Player);
    }
    if (HasInaccuracy) {
      output.WriteRawTag(61);
      output.WriteFloat(Inaccuracy);
    }
    if (HasRecoilIndex) {
      output.WriteRawTag(69);
      output.WriteFloat(RecoilIndex);
    }
    if (HasSpread) {
      output.WriteRawTag(77);
      output.WriteFloat(Spread);
    }
    if (HasSoundType) {
      output.WriteRawTag(80);
      output.WriteInt32(SoundType);
    }
    if (HasItemDefIndex) {
      output.WriteRawTag(88);
      output.WriteUInt32(ItemDefIndex);
    }
    if (HasSoundDspEffect) {
      output.WriteRawTag(101);
      output.WriteFixed32(SoundDspEffect);
    }
    if (entOrigin_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(EntOrigin);
    }
    if (HasNumBulletsRemaining) {
      output.WriteRawTag(112);
      output.WriteUInt32(NumBulletsRemaining);
    }
    if (HasAttackType) {
      output.WriteRawTag(120);
      output.WriteUInt32(AttackType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (angles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angles);
    }
    if (HasWeaponId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeaponId);
    }
    if (HasMode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mode);
    }
    if (HasSeed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seed);
    }
    if (HasPlayer) {
      size += 1 + 4;
    }
    if (HasInaccuracy) {
      size += 1 + 4;
    }
    if (HasRecoilIndex) {
      size += 1 + 4;
    }
    if (HasSpread) {
      size += 1 + 4;
    }
    if (HasSoundType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundType);
    }
    if (HasItemDefIndex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDefIndex);
    }
    if (HasSoundDspEffect) {
      size += 1 + 4;
    }
    if (entOrigin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntOrigin);
    }
    if (HasNumBulletsRemaining) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumBulletsRemaining);
    }
    if (HasAttackType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttackType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEFireBullets other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.angles_ != null) {
      if (angles_ == null) {
        Angles = new global::CMsgQAngle();
      }
      Angles.MergeFrom(other.Angles);
    }
    if (other.HasWeaponId) {
      WeaponId = other.WeaponId;
    }
    if (other.HasMode) {
      Mode = other.Mode;
    }
    if (other.HasSeed) {
      Seed = other.Seed;
    }
    if (other.HasPlayer) {
      Player = other.Player;
    }
    if (other.HasInaccuracy) {
      Inaccuracy = other.Inaccuracy;
    }
    if (other.HasRecoilIndex) {
      RecoilIndex = other.RecoilIndex;
    }
    if (other.HasSpread) {
      Spread = other.Spread;
    }
    if (other.HasSoundType) {
      SoundType = other.SoundType;
    }
    if (other.HasItemDefIndex) {
      ItemDefIndex = other.ItemDefIndex;
    }
    if (other.HasSoundDspEffect) {
      SoundDspEffect = other.SoundDspEffect;
    }
    if (other.entOrigin_ != null) {
      if (entOrigin_ == null) {
        EntOrigin = new global::CMsgVector();
      }
      EntOrigin.MergeFrom(other.EntOrigin);
    }
    if (other.HasNumBulletsRemaining) {
      NumBulletsRemaining = other.NumBulletsRemaining;
    }
    if (other.HasAttackType) {
      AttackType = other.AttackType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 24: {
          WeaponId = input.ReadUInt32();
          break;
        }
        case 32: {
          Mode = input.ReadUInt32();
          break;
        }
        case 40: {
          Seed = input.ReadUInt32();
          break;
        }
        case 53: {
          Player = input.ReadFixed32();
          break;
        }
        case 61: {
          Inaccuracy = input.ReadFloat();
          break;
        }
        case 69: {
          RecoilIndex = input.ReadFloat();
          break;
        }
        case 77: {
          Spread = input.ReadFloat();
          break;
        }
        case 80: {
          SoundType = input.ReadInt32();
          break;
        }
        case 88: {
          ItemDefIndex = input.ReadUInt32();
          break;
        }
        case 101: {
          SoundDspEffect = input.ReadFixed32();
          break;
        }
        case 106: {
          if (entOrigin_ == null) {
            EntOrigin = new global::CMsgVector();
          }
          input.ReadMessage(EntOrigin);
          break;
        }
        case 112: {
          NumBulletsRemaining = input.ReadUInt32();
          break;
        }
        case 120: {
          AttackType = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 24: {
          WeaponId = input.ReadUInt32();
          break;
        }
        case 32: {
          Mode = input.ReadUInt32();
          break;
        }
        case 40: {
          Seed = input.ReadUInt32();
          break;
        }
        case 53: {
          Player = input.ReadFixed32();
          break;
        }
        case 61: {
          Inaccuracy = input.ReadFloat();
          break;
        }
        case 69: {
          RecoilIndex = input.ReadFloat();
          break;
        }
        case 77: {
          Spread = input.ReadFloat();
          break;
        }
        case 80: {
          SoundType = input.ReadInt32();
          break;
        }
        case 88: {
          ItemDefIndex = input.ReadUInt32();
          break;
        }
        case 101: {
          SoundDspEffect = input.ReadFixed32();
          break;
        }
        case 106: {
          if (entOrigin_ == null) {
            EntOrigin = new global::CMsgVector();
          }
          input.ReadMessage(EntOrigin);
          break;
        }
        case 112: {
          NumBulletsRemaining = input.ReadUInt32();
          break;
        }
        case 120: {
          AttackType = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
