// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: connectionless_netmessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from connectionless_netmessages.proto</summary>
public static partial class ConnectionlessNetmessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for connectionless_netmessages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ConnectionlessNetmessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiBjb25uZWN0aW9ubGVzc19uZXRtZXNzYWdlcy5wcm90bxoRbmV0bWVzc2Fn",
          "ZXMucHJvdG8iSQocQzJTX0NPTk5FQ1RfU2FtZVByb2Nlc3NDaGVjaxIcChRs",
          "b2NhbGhvc3RfcHJvY2Vzc19pZBgBIAEoBBILCgNrZXkYAiABKAQi0QIKE0My",
          "U19DT05ORUNUX01lc3NhZ2USFAoMaG9zdF92ZXJzaW9uGAEgASgNEhUKDWF1",
          "dGhfcHJvdG9jb2wYAiABKA0SGAoQY2hhbGxlbmdlX251bWJlchgDIAEoDRIa",
          "ChJyZXNlcnZhdGlvbl9jb29raWUYBCABKAYSFAoMbG93X3Zpb2xlbmNlGAUg",
          "ASgIEhoKEmVuY3J5cHRlZF9wYXNzd29yZBgGIAEoDBIxCgxzcGxpdHBsYXll",
          "cnMYByADKAsyGy5DQ0xDTXNnX1NwbGl0UGxheWVyQ29ubmVjdBISCgphdXRo",
          "X3N0ZWFtGAggASgMEhkKEWNoYWxsZW5nZV9jb250ZXh0GAkgASgJEkMKHGxv",
          "Y2FsaG9zdF9zYW1lX3Byb2Nlc3NfY2hlY2sYCiABKAsyHS5DMlNfQ09OTkVD",
          "VF9TYW1lUHJvY2Vzc0NoZWNrInEKFkMyU19DT05ORUNUSU9OX01lc3NhZ2US",
          "EgoKYWRkb25fbmFtZRgBIAEoCRJDChxsb2NhbGhvc3Rfc2FtZV9wcm9jZXNz",
          "X2NoZWNrGAIgASgLMh0uQzJTX0NPTk5FQ1RfU2FtZVByb2Nlc3NDaGVjaw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NetmessagesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_CONNECT_SameProcessCheck), global::C2S_CONNECT_SameProcessCheck.Parser, new[]{ "LocalhostProcessId", "Key" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_CONNECT_Message), global::C2S_CONNECT_Message.Parser, new[]{ "HostVersion", "AuthProtocol", "ChallengeNumber", "ReservationCookie", "LowViolence", "EncryptedPassword", "Splitplayers", "AuthSteam", "ChallengeContext", "LocalhostSameProcessCheck" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_CONNECTION_Message), global::C2S_CONNECTION_Message.Parser, new[]{ "AddonName", "LocalhostSameProcessCheck" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class C2S_CONNECT_SameProcessCheck : pb::IMessage<C2S_CONNECT_SameProcessCheck>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<C2S_CONNECT_SameProcessCheck> _parser = new pb::MessageParser<C2S_CONNECT_SameProcessCheck>(() => new C2S_CONNECT_SameProcessCheck());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<C2S_CONNECT_SameProcessCheck> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ConnectionlessNetmessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECT_SameProcessCheck() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECT_SameProcessCheck(C2S_CONNECT_SameProcessCheck other) : this() {
    _hasBits0 = other._hasBits0;
    localhostProcessId_ = other.localhostProcessId_;
    key_ = other.key_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECT_SameProcessCheck Clone() {
    return new C2S_CONNECT_SameProcessCheck(this);
  }

  /// <summary>Field number for the "localhost_process_id" field.</summary>
  public const int LocalhostProcessIdFieldNumber = 1;
  private readonly static ulong LocalhostProcessIdDefaultValue = 0UL;

  private ulong localhostProcessId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LocalhostProcessId {
    get { if ((_hasBits0 & 1) != 0) { return localhostProcessId_; } else { return LocalhostProcessIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      localhostProcessId_ = value;
    }
  }
  /// <summary>Gets whether the "localhost_process_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLocalhostProcessId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "localhost_process_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLocalhostProcessId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 2;
  private readonly static ulong KeyDefaultValue = 0UL;

  private ulong key_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Key {
    get { if ((_hasBits0 & 2) != 0) { return key_; } else { return KeyDefaultValue; } }
    set {
      _hasBits0 |= 2;
      key_ = value;
    }
  }
  /// <summary>Gets whether the "key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKey {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKey() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as C2S_CONNECT_SameProcessCheck);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(C2S_CONNECT_SameProcessCheck other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LocalhostProcessId != other.LocalhostProcessId) return false;
    if (Key != other.Key) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasLocalhostProcessId) hash ^= LocalhostProcessId.GetHashCode();
    if (HasKey) hash ^= Key.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasLocalhostProcessId) {
      output.WriteRawTag(8);
      output.WriteUInt64(LocalhostProcessId);
    }
    if (HasKey) {
      output.WriteRawTag(16);
      output.WriteUInt64(Key);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasLocalhostProcessId) {
      output.WriteRawTag(8);
      output.WriteUInt64(LocalhostProcessId);
    }
    if (HasKey) {
      output.WriteRawTag(16);
      output.WriteUInt64(Key);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasLocalhostProcessId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LocalhostProcessId);
    }
    if (HasKey) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Key);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(C2S_CONNECT_SameProcessCheck other) {
    if (other == null) {
      return;
    }
    if (other.HasLocalhostProcessId) {
      LocalhostProcessId = other.LocalhostProcessId;
    }
    if (other.HasKey) {
      Key = other.Key;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          LocalhostProcessId = input.ReadUInt64();
          break;
        }
        case 16: {
          Key = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          LocalhostProcessId = input.ReadUInt64();
          break;
        }
        case 16: {
          Key = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class C2S_CONNECT_Message : pb::IMessage<C2S_CONNECT_Message>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<C2S_CONNECT_Message> _parser = new pb::MessageParser<C2S_CONNECT_Message>(() => new C2S_CONNECT_Message());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<C2S_CONNECT_Message> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ConnectionlessNetmessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECT_Message() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECT_Message(C2S_CONNECT_Message other) : this() {
    _hasBits0 = other._hasBits0;
    hostVersion_ = other.hostVersion_;
    authProtocol_ = other.authProtocol_;
    challengeNumber_ = other.challengeNumber_;
    reservationCookie_ = other.reservationCookie_;
    lowViolence_ = other.lowViolence_;
    encryptedPassword_ = other.encryptedPassword_;
    splitplayers_ = other.splitplayers_.Clone();
    authSteam_ = other.authSteam_;
    challengeContext_ = other.challengeContext_;
    localhostSameProcessCheck_ = other.localhostSameProcessCheck_ != null ? other.localhostSameProcessCheck_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECT_Message Clone() {
    return new C2S_CONNECT_Message(this);
  }

  /// <summary>Field number for the "host_version" field.</summary>
  public const int HostVersionFieldNumber = 1;
  private readonly static uint HostVersionDefaultValue = 0;

  private uint hostVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HostVersion {
    get { if ((_hasBits0 & 1) != 0) { return hostVersion_; } else { return HostVersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      hostVersion_ = value;
    }
  }
  /// <summary>Gets whether the "host_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "host_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "auth_protocol" field.</summary>
  public const int AuthProtocolFieldNumber = 2;
  private readonly static uint AuthProtocolDefaultValue = 0;

  private uint authProtocol_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AuthProtocol {
    get { if ((_hasBits0 & 2) != 0) { return authProtocol_; } else { return AuthProtocolDefaultValue; } }
    set {
      _hasBits0 |= 2;
      authProtocol_ = value;
    }
  }
  /// <summary>Gets whether the "auth_protocol" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthProtocol {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "auth_protocol" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthProtocol() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "challenge_number" field.</summary>
  public const int ChallengeNumberFieldNumber = 3;
  private readonly static uint ChallengeNumberDefaultValue = 0;

  private uint challengeNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ChallengeNumber {
    get { if ((_hasBits0 & 4) != 0) { return challengeNumber_; } else { return ChallengeNumberDefaultValue; } }
    set {
      _hasBits0 |= 4;
      challengeNumber_ = value;
    }
  }
  /// <summary>Gets whether the "challenge_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChallengeNumber {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "challenge_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChallengeNumber() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "reservation_cookie" field.</summary>
  public const int ReservationCookieFieldNumber = 4;
  private readonly static ulong ReservationCookieDefaultValue = 0UL;

  private ulong reservationCookie_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ReservationCookie {
    get { if ((_hasBits0 & 8) != 0) { return reservationCookie_; } else { return ReservationCookieDefaultValue; } }
    set {
      _hasBits0 |= 8;
      reservationCookie_ = value;
    }
  }
  /// <summary>Gets whether the "reservation_cookie" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservationCookie {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "reservation_cookie" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservationCookie() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "low_violence" field.</summary>
  public const int LowViolenceFieldNumber = 5;
  private readonly static bool LowViolenceDefaultValue = false;

  private bool lowViolence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool LowViolence {
    get { if ((_hasBits0 & 16) != 0) { return lowViolence_; } else { return LowViolenceDefaultValue; } }
    set {
      _hasBits0 |= 16;
      lowViolence_ = value;
    }
  }
  /// <summary>Gets whether the "low_violence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLowViolence {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "low_violence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLowViolence() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "encrypted_password" field.</summary>
  public const int EncryptedPasswordFieldNumber = 6;
  private readonly static pb::ByteString EncryptedPasswordDefaultValue = pb::ByteString.Empty;

  private pb::ByteString encryptedPassword_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString EncryptedPassword {
    get { return encryptedPassword_ ?? EncryptedPasswordDefaultValue; }
    set {
      encryptedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "encrypted_password" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEncryptedPassword {
    get { return encryptedPassword_ != null; }
  }
  /// <summary>Clears the value of the "encrypted_password" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEncryptedPassword() {
    encryptedPassword_ = null;
  }

  /// <summary>Field number for the "splitplayers" field.</summary>
  public const int SplitplayersFieldNumber = 7;
  private static readonly pb::FieldCodec<global::CCLCMsg_SplitPlayerConnect> _repeated_splitplayers_codec
      = pb::FieldCodec.ForMessage(58, global::CCLCMsg_SplitPlayerConnect.Parser);
  private readonly pbc::RepeatedField<global::CCLCMsg_SplitPlayerConnect> splitplayers_ = new pbc::RepeatedField<global::CCLCMsg_SplitPlayerConnect>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CCLCMsg_SplitPlayerConnect> Splitplayers {
    get { return splitplayers_; }
  }

  /// <summary>Field number for the "auth_steam" field.</summary>
  public const int AuthSteamFieldNumber = 8;
  private readonly static pb::ByteString AuthSteamDefaultValue = pb::ByteString.Empty;

  private pb::ByteString authSteam_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString AuthSteam {
    get { return authSteam_ ?? AuthSteamDefaultValue; }
    set {
      authSteam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "auth_steam" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthSteam {
    get { return authSteam_ != null; }
  }
  /// <summary>Clears the value of the "auth_steam" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthSteam() {
    authSteam_ = null;
  }

  /// <summary>Field number for the "challenge_context" field.</summary>
  public const int ChallengeContextFieldNumber = 9;
  private readonly static string ChallengeContextDefaultValue = "";

  private string challengeContext_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ChallengeContext {
    get { return challengeContext_ ?? ChallengeContextDefaultValue; }
    set {
      challengeContext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "challenge_context" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChallengeContext {
    get { return challengeContext_ != null; }
  }
  /// <summary>Clears the value of the "challenge_context" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChallengeContext() {
    challengeContext_ = null;
  }

  /// <summary>Field number for the "localhost_same_process_check" field.</summary>
  public const int LocalhostSameProcessCheckFieldNumber = 10;
  private global::C2S_CONNECT_SameProcessCheck localhostSameProcessCheck_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::C2S_CONNECT_SameProcessCheck LocalhostSameProcessCheck {
    get { return localhostSameProcessCheck_; }
    set {
      localhostSameProcessCheck_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as C2S_CONNECT_Message);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(C2S_CONNECT_Message other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HostVersion != other.HostVersion) return false;
    if (AuthProtocol != other.AuthProtocol) return false;
    if (ChallengeNumber != other.ChallengeNumber) return false;
    if (ReservationCookie != other.ReservationCookie) return false;
    if (LowViolence != other.LowViolence) return false;
    if (EncryptedPassword != other.EncryptedPassword) return false;
    if(!splitplayers_.Equals(other.splitplayers_)) return false;
    if (AuthSteam != other.AuthSteam) return false;
    if (ChallengeContext != other.ChallengeContext) return false;
    if (!object.Equals(LocalhostSameProcessCheck, other.LocalhostSameProcessCheck)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasHostVersion) hash ^= HostVersion.GetHashCode();
    if (HasAuthProtocol) hash ^= AuthProtocol.GetHashCode();
    if (HasChallengeNumber) hash ^= ChallengeNumber.GetHashCode();
    if (HasReservationCookie) hash ^= ReservationCookie.GetHashCode();
    if (HasLowViolence) hash ^= LowViolence.GetHashCode();
    if (HasEncryptedPassword) hash ^= EncryptedPassword.GetHashCode();
    hash ^= splitplayers_.GetHashCode();
    if (HasAuthSteam) hash ^= AuthSteam.GetHashCode();
    if (HasChallengeContext) hash ^= ChallengeContext.GetHashCode();
    if (localhostSameProcessCheck_ != null) hash ^= LocalhostSameProcessCheck.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasHostVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(HostVersion);
    }
    if (HasAuthProtocol) {
      output.WriteRawTag(16);
      output.WriteUInt32(AuthProtocol);
    }
    if (HasChallengeNumber) {
      output.WriteRawTag(24);
      output.WriteUInt32(ChallengeNumber);
    }
    if (HasReservationCookie) {
      output.WriteRawTag(33);
      output.WriteFixed64(ReservationCookie);
    }
    if (HasLowViolence) {
      output.WriteRawTag(40);
      output.WriteBool(LowViolence);
    }
    if (HasEncryptedPassword) {
      output.WriteRawTag(50);
      output.WriteBytes(EncryptedPassword);
    }
    splitplayers_.WriteTo(output, _repeated_splitplayers_codec);
    if (HasAuthSteam) {
      output.WriteRawTag(66);
      output.WriteBytes(AuthSteam);
    }
    if (HasChallengeContext) {
      output.WriteRawTag(74);
      output.WriteString(ChallengeContext);
    }
    if (localhostSameProcessCheck_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(LocalhostSameProcessCheck);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasHostVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(HostVersion);
    }
    if (HasAuthProtocol) {
      output.WriteRawTag(16);
      output.WriteUInt32(AuthProtocol);
    }
    if (HasChallengeNumber) {
      output.WriteRawTag(24);
      output.WriteUInt32(ChallengeNumber);
    }
    if (HasReservationCookie) {
      output.WriteRawTag(33);
      output.WriteFixed64(ReservationCookie);
    }
    if (HasLowViolence) {
      output.WriteRawTag(40);
      output.WriteBool(LowViolence);
    }
    if (HasEncryptedPassword) {
      output.WriteRawTag(50);
      output.WriteBytes(EncryptedPassword);
    }
    splitplayers_.WriteTo(ref output, _repeated_splitplayers_codec);
    if (HasAuthSteam) {
      output.WriteRawTag(66);
      output.WriteBytes(AuthSteam);
    }
    if (HasChallengeContext) {
      output.WriteRawTag(74);
      output.WriteString(ChallengeContext);
    }
    if (localhostSameProcessCheck_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(LocalhostSameProcessCheck);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasHostVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostVersion);
    }
    if (HasAuthProtocol) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuthProtocol);
    }
    if (HasChallengeNumber) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChallengeNumber);
    }
    if (HasReservationCookie) {
      size += 1 + 8;
    }
    if (HasLowViolence) {
      size += 1 + 1;
    }
    if (HasEncryptedPassword) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedPassword);
    }
    size += splitplayers_.CalculateSize(_repeated_splitplayers_codec);
    if (HasAuthSteam) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(AuthSteam);
    }
    if (HasChallengeContext) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ChallengeContext);
    }
    if (localhostSameProcessCheck_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalhostSameProcessCheck);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(C2S_CONNECT_Message other) {
    if (other == null) {
      return;
    }
    if (other.HasHostVersion) {
      HostVersion = other.HostVersion;
    }
    if (other.HasAuthProtocol) {
      AuthProtocol = other.AuthProtocol;
    }
    if (other.HasChallengeNumber) {
      ChallengeNumber = other.ChallengeNumber;
    }
    if (other.HasReservationCookie) {
      ReservationCookie = other.ReservationCookie;
    }
    if (other.HasLowViolence) {
      LowViolence = other.LowViolence;
    }
    if (other.HasEncryptedPassword) {
      EncryptedPassword = other.EncryptedPassword;
    }
    splitplayers_.Add(other.splitplayers_);
    if (other.HasAuthSteam) {
      AuthSteam = other.AuthSteam;
    }
    if (other.HasChallengeContext) {
      ChallengeContext = other.ChallengeContext;
    }
    if (other.localhostSameProcessCheck_ != null) {
      if (localhostSameProcessCheck_ == null) {
        LocalhostSameProcessCheck = new global::C2S_CONNECT_SameProcessCheck();
      }
      LocalhostSameProcessCheck.MergeFrom(other.LocalhostSameProcessCheck);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HostVersion = input.ReadUInt32();
          break;
        }
        case 16: {
          AuthProtocol = input.ReadUInt32();
          break;
        }
        case 24: {
          ChallengeNumber = input.ReadUInt32();
          break;
        }
        case 33: {
          ReservationCookie = input.ReadFixed64();
          break;
        }
        case 40: {
          LowViolence = input.ReadBool();
          break;
        }
        case 50: {
          EncryptedPassword = input.ReadBytes();
          break;
        }
        case 58: {
          splitplayers_.AddEntriesFrom(input, _repeated_splitplayers_codec);
          break;
        }
        case 66: {
          AuthSteam = input.ReadBytes();
          break;
        }
        case 74: {
          ChallengeContext = input.ReadString();
          break;
        }
        case 82: {
          if (localhostSameProcessCheck_ == null) {
            LocalhostSameProcessCheck = new global::C2S_CONNECT_SameProcessCheck();
          }
          input.ReadMessage(LocalhostSameProcessCheck);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          HostVersion = input.ReadUInt32();
          break;
        }
        case 16: {
          AuthProtocol = input.ReadUInt32();
          break;
        }
        case 24: {
          ChallengeNumber = input.ReadUInt32();
          break;
        }
        case 33: {
          ReservationCookie = input.ReadFixed64();
          break;
        }
        case 40: {
          LowViolence = input.ReadBool();
          break;
        }
        case 50: {
          EncryptedPassword = input.ReadBytes();
          break;
        }
        case 58: {
          splitplayers_.AddEntriesFrom(ref input, _repeated_splitplayers_codec);
          break;
        }
        case 66: {
          AuthSteam = input.ReadBytes();
          break;
        }
        case 74: {
          ChallengeContext = input.ReadString();
          break;
        }
        case 82: {
          if (localhostSameProcessCheck_ == null) {
            LocalhostSameProcessCheck = new global::C2S_CONNECT_SameProcessCheck();
          }
          input.ReadMessage(LocalhostSameProcessCheck);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class C2S_CONNECTION_Message : pb::IMessage<C2S_CONNECTION_Message>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<C2S_CONNECTION_Message> _parser = new pb::MessageParser<C2S_CONNECTION_Message>(() => new C2S_CONNECTION_Message());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<C2S_CONNECTION_Message> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ConnectionlessNetmessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECTION_Message() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECTION_Message(C2S_CONNECTION_Message other) : this() {
    addonName_ = other.addonName_;
    localhostSameProcessCheck_ = other.localhostSameProcessCheck_ != null ? other.localhostSameProcessCheck_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public C2S_CONNECTION_Message Clone() {
    return new C2S_CONNECTION_Message(this);
  }

  /// <summary>Field number for the "addon_name" field.</summary>
  public const int AddonNameFieldNumber = 1;
  private readonly static string AddonNameDefaultValue = "";

  private string addonName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AddonName {
    get { return addonName_ ?? AddonNameDefaultValue; }
    set {
      addonName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "addon_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAddonName {
    get { return addonName_ != null; }
  }
  /// <summary>Clears the value of the "addon_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAddonName() {
    addonName_ = null;
  }

  /// <summary>Field number for the "localhost_same_process_check" field.</summary>
  public const int LocalhostSameProcessCheckFieldNumber = 2;
  private global::C2S_CONNECT_SameProcessCheck localhostSameProcessCheck_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::C2S_CONNECT_SameProcessCheck LocalhostSameProcessCheck {
    get { return localhostSameProcessCheck_; }
    set {
      localhostSameProcessCheck_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as C2S_CONNECTION_Message);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(C2S_CONNECTION_Message other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AddonName != other.AddonName) return false;
    if (!object.Equals(LocalhostSameProcessCheck, other.LocalhostSameProcessCheck)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAddonName) hash ^= AddonName.GetHashCode();
    if (localhostSameProcessCheck_ != null) hash ^= LocalhostSameProcessCheck.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAddonName) {
      output.WriteRawTag(10);
      output.WriteString(AddonName);
    }
    if (localhostSameProcessCheck_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(LocalhostSameProcessCheck);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAddonName) {
      output.WriteRawTag(10);
      output.WriteString(AddonName);
    }
    if (localhostSameProcessCheck_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(LocalhostSameProcessCheck);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAddonName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AddonName);
    }
    if (localhostSameProcessCheck_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalhostSameProcessCheck);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(C2S_CONNECTION_Message other) {
    if (other == null) {
      return;
    }
    if (other.HasAddonName) {
      AddonName = other.AddonName;
    }
    if (other.localhostSameProcessCheck_ != null) {
      if (localhostSameProcessCheck_ == null) {
        LocalhostSameProcessCheck = new global::C2S_CONNECT_SameProcessCheck();
      }
      LocalhostSameProcessCheck.MergeFrom(other.LocalhostSameProcessCheck);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AddonName = input.ReadString();
          break;
        }
        case 18: {
          if (localhostSameProcessCheck_ == null) {
            LocalhostSameProcessCheck = new global::C2S_CONNECT_SameProcessCheck();
          }
          input.ReadMessage(LocalhostSameProcessCheck);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          AddonName = input.ReadString();
          break;
        }
        case 18: {
          if (localhostSameProcessCheck_ == null) {
            LocalhostSameProcessCheck = new global::C2S_CONNECT_SameProcessCheck();
          }
          input.ReadMessage(LocalhostSameProcessCheck);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
